import{_ as e,c as a,j as s,a as i,a7 as t,o as n}from"./chunks/framework.B__MqT43.js";const f=JSON.parse('{"title":"Defining Variables and Exploring Domains","description":"","frontmatter":{},"headers":[],"relativePath":"constraints/variables_and_domains.md","filePath":"constraints/variables_and_domains.md","lastUpdated":null}'),l={name:"constraints/variables_and_domains.md"},h=t("",4),p=s("em",null,"ConstraintDomains.jl",-1),k=s("code",null,"AbstractDomain",-1),d=s("code",null,"AbstractDomain",-1),r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},o={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.509ex",height:"1.312ex",role:"img",focusable:"false",viewBox:"0 -540 667 580","aria-hidden":"true"},E=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"2208",d:"M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z",style:{"stroke-width":"3"}})])])],-1),g=[E],c=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",null,"âˆˆ")])],-1),y=s("code",null,"rand",-1),m=s("code",null,"length",-1),C=t("",16);function F(u,b,D,v,A,B){return n(),a("div",null,[h,s("p",null,[i("At the foundation of "),p,i(" is the "),k,i(" type, an abstract supertype for all domain types. Implementations of "),d,i(" must provide methods for checking membership ("),s("mjx-container",r,[(n(),a("svg",o,g)),c]),i("), generating random elements ("),y,i("), and determining the domain's size or range ("),m,i("). These functionalities are essential for defining the behavior and properties of variable domains within constraint models.")]),C])}const x=e(l,[["render",F]]);export{f as __pageData,x as default};
