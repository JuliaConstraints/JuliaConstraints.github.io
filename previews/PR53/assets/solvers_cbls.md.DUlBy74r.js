import{_ as i,c as s,o as a,a7 as e}from"./chunks/framework.B__MqT43.js";const g=JSON.parse('{"title":"CBLS.jl","description":"","frontmatter":{},"headers":[],"relativePath":"solvers/cbls.md","filePath":"solvers/cbls.md","lastUpdated":null}'),t={name:"solvers/cbls.md"},l=e(`<h1 id="cbls-jl" tabindex="-1">CBLS.jl <a class="header-anchor" href="#cbls-jl" aria-label="Permalink to &quot;CBLS.jl&quot;">​</a></h1><p>Documentation for <code>CBLS.jl</code>.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AllDifferent" href="#CBLS.AllDifferent">#</a> <b><u>CBLS.AllDifferent</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of a given configuration are unique.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AllDifferent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/all_different.jl#L31-L37" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AllEqual" href="#CBLS.AllEqual">#</a> <b><u>CBLS.AllEqual</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of <code>X</code> are all equal.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AllEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/all_equal.jl#L41-L47" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AtLeast" href="#CBLS.AtLeast">#</a> <b><u>CBLS.AtLeast</u></b> — <i>Type</i>. <p>Constraint ensuring that the number of occurrences of the values in <code>vals</code> in <code>x</code> is at least <code>val</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AtLeast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val, vals))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/count.jl#L77-L83" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AtMost" href="#CBLS.AtMost">#</a> <b><u>CBLS.AtMost</u></b> — <i>Type</i>. <p>Constraint ensuring that the number of occurrences of the values in <code>vals</code> in <code>x</code> is at most <code>val</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AtMost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val, vals))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/count.jl#L102-L108" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Conflicts" href="#CBLS.Conflicts">#</a> <b><u>CBLS.Conflicts</u></b> — <i>Type</i>. <p>Global constraint ensuring that the tuple <code>x</code> does not match any configuration listed within the conflict set <code>pair_vars</code>. This constraint, originating from the extension model, stipulates that <code>x</code> must avoid all configurations defined as conflicts: <code>x ∉ pair_vars</code>. It is useful for specifying tuples that are explicitly forbidden and should be excluded from the solution space.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Conflicts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pair_vars))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L155-L161" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Count" href="#CBLS.Count">#</a> <b><u>CBLS.Count</u></b> — <i>Type</i>. <p>Global constraint ensuring that the number of occurrences of <code>val</code> in <code>X</code> is equal to <code>count</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count, val, vals))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/count.jl#L50-L56" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Cumulative" href="#CBLS.Cumulative">#</a> <b><u>CBLS.Cumulative</u></b> — <i>Type</i>. <p>Global constraint ensuring that the cumulative sum of the heights of the tasks is less than or equal to <code>val</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Cumulative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pair_vars, op, val))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/cumulative.jl#L45-L51" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.DiscreteSet" href="#CBLS.DiscreteSet">#</a> <b><u>CBLS.DiscreteSet</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span></code></pre></div><p>Create a discrete set of values.</p><p><strong>Arguments</strong></p><ul><li><code>values::Vector{T}</code>: A vector of values to include in the set.</li></ul><p><strong>Returns</strong></p><ul><li><code>DiscreteSet{T}</code>: A discrete set containing the specified values.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L151-L161" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.DistDifferent" href="#CBLS.DistDifferent">#</a> <b><u>CBLS.DistDifferent</u></b> — <i>Type</i>. <p>A constraint ensuring that the distances between marks on the ruler are unique. Specifically, it checks that the distance between <code>x[1]</code> and <code>x[2]</code>, and the distance between <code>x[3]</code> and <code>x[4]</code>, are different. This constraint is fundamental in ensuring the validity of a Golomb ruler, where no two pairs of marks should have the same distance between them.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/intention.jl#L35-L37" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Element" href="#CBLS.Element">#</a> <b><u>CBLS.Element</u></b> — <i>Type</i>. <p>Global constraint ensuring that the value of <code>X</code> at index <code>id</code> is equal to <code>val</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, op </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/element.jl#L40-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Error" href="#CBLS.Error">#</a> <b><u>CBLS.Error</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMP.AbstractVectorSet</span></span></code></pre></div><p>The solver will compute a straightforward error function based on the <code>concept</code>. To run the solver efficiently, it is possible to provide an <em>error function</em> <code>err</code> instead of <code>concept</code>. <code>err</code> must return a nonnegative real number.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L59-L67" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Exactly" href="#CBLS.Exactly">#</a> <b><u>CBLS.Exactly</u></b> — <i>Type</i>. <p>Constraint ensuring that the number of occurrences of the values in <code>vals</code> in <code>x</code> is exactly <code>val</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exactly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val, vals))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/count.jl#L127-L133" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Extension" href="#CBLS.Extension">#</a> <b><u>CBLS.Extension</u></b> — <i>Type</i>. <p>Global constraint enforcing that the tuple <code>x</code> matches a configuration within the supports set <code>pair_vars[1]</code> or does not match any configuration within the conflicts set <code>pair_vars[2]</code>. It embodies the logic: <code>x ∈ pair_vars[1] || x ∉ pair_vars[2]</code>, providing a comprehensive way to define valid (supported) and invalid (conflicted) tuples for constraint satisfaction problems. This constraint is versatile, allowing for the explicit delineation of both acceptable and unacceptable configurations.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L41-L43" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Instantiation" href="#CBLS.Instantiation">#</a> <b><u>CBLS.Instantiation</u></b> — <i>Type</i>. <p>The instantiation constraint is a global constraint used in constraint programming that ensures that a list of variables takes on a specific set of values in a specific order.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/instantiation.jl#L37-L39" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Intention" href="#CBLS.Intention">#</a> <b><u>CBLS.Intention</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Intention{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMP.AbstractVectorSet</span></span></code></pre></div><p>Represents an intention set in the model.</p><p><strong>Arguments</strong></p><ul><li><code>f::F</code>: A function representing the intention.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L156-L163" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MDDConstraint" href="#CBLS.MDDConstraint">#</a> <b><u>CBLS.MDDConstraint</u></b> — <i>Type</i>. <p>Multi-valued Decision Diagram (MDD) constraint.</p><p>The MDD constraint is a constraint that can be used to model a wide range of problems. It is a directed graph where each node is labeled with a value and each edge is labeled with a value. The constraint is satisfied if there is a path from the first node to the last node such that the sequence of edge labels is a valid sequence of the value labels.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MDDConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; language))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/mdd.jl#L38-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAllDifferent" href="#CBLS.MOIAllDifferent">#</a> <b><u>CBLS.MOIAllDifferent</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAllDifferent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/all_different.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAllEqual" href="#CBLS.MOIAllEqual">#</a> <b><u>CBLS.MOIAllEqual</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAllEqual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/all_equal.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIConflicts" href="#CBLS.MOIConflicts">#</a> <b><u>CBLS.MOIConflicts</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIConflicts{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{Vector{T}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L117-L121" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOICumulative" href="#CBLS.MOICumulative">#</a> <b><u>CBLS.MOICumulative</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOICumulative{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/cumulative.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIDistDifferent" href="#CBLS.MOIDistDifferent">#</a> <b><u>CBLS.MOIDistDifferent</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIDistDifferent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/intention.jl#L3-L7" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIElement" href="#CBLS.MOIElement">#</a> <b><u>CBLS.MOIElement</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIElement{I </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Nothing, Number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/element.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIError" href="#CBLS.MOIError">#</a> <b><u>CBLS.MOIError</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIError{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>f::F</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOIError(f, dim = 0) = begin #= none:5 =# new{typeof(f)}(f, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L1-L13" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIExtension" href="#CBLS.MOIExtension">#</a> <b><u>CBLS.MOIExtension</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIExtension{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Vector{Vector{T}}, Tuple{Vector{T}, Vector{T}}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DOCSTRING</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIInstantiation" href="#CBLS.MOIInstantiation">#</a> <b><u>CBLS.MOIInstantiation</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIInstantiation{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/instantiation.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIIntention" href="#CBLS.MOIIntention">#</a> <b><u>CBLS.MOIIntention</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIIntention{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>Represents an intention set in the model.</p><p><strong>Arguments</strong></p><ul><li><p><code>f::F</code>: A function representing the intention.</p></li><li><p><code>dimension::Int</code>: The dimension of the vector set.</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L75-L83" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIMaximum" href="#CBLS.MOIMaximum">#</a> <b><u>CBLS.MOIMaximum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIMaximum {F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/maximum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIMinimum" href="#CBLS.MOIMinimum">#</a> <b><u>CBLS.MOIMinimum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIMinimum {F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/minimum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIMultivaluedDecisionDiagram" href="#CBLS.MOIMultivaluedDecisionDiagram">#</a> <b><u>CBLS.MOIMultivaluedDecisionDiagram</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIMultivaluedDecisionDiagram{L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConstraintCommons.AbstractMultivaluedDecisionDiagram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/mdd.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOINValues" href="#CBLS.MOINValues">#</a> <b><u>CBLS.MOINValues</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOINValues{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{T2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/n_values.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOINoOverlap" href="#CBLS.MOINoOverlap">#</a> <b><u>CBLS.MOINoOverlap</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOINoOverlap{I </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/no_overlap.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIOrdered" href="#CBLS.MOIOrdered">#</a> <b><u>CBLS.MOIOrdered</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIOrdered{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/ordered.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIRegular" href="#CBLS.MOIRegular">#</a> <b><u>CBLS.MOIRegular</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIRegular{L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConstraintCommons.AbstractAutomaton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/regular.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOISum" href="#CBLS.MOISum">#</a> <b><u>CBLS.MOISum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOISum{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/sum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOISupports" href="#CBLS.MOISupports">#</a> <b><u>CBLS.MOISupports</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOISupports{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{Vector{T}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L60-L64" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Maximum" href="#CBLS.Maximum">#</a> <b><u>CBLS.Maximum</u></b> — <i>Type</i>. <p>Global constraint ensuring that the maximum value in the tuple <code>x</code> satisfies the condition <code>op(x) val</code>. This constraint is useful for specifying that the maximum value in the tuple must satisfy a certain condition.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; op </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/maximum.jl#L37-L43" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Minimum" href="#CBLS.Minimum">#</a> <b><u>CBLS.Minimum</u></b> — <i>Type</i>. <p>Global constraint ensuring that the minimum value in the tuple <code>x</code> satisfies the condition <code>op(x) val</code>. This constraint is useful for specifying that the minimum value in the tuple must satisfy a certain condition.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Minimum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; op </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/minimum.jl#L37-L43" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.NValues" href="#CBLS.NValues">#</a> <b><u>CBLS.NValues</u></b> — <i>Type</i>. <p>Global constraint ensuring that the number of distinct values in <code>X</code> satisfies the given condition.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/n_values.jl#L43-L45" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.NoOverlap" href="#CBLS.NoOverlap">#</a> <b><u>CBLS.NoOverlap</u></b> — <i>Type</i>. <p>Global constraint ensuring that the tuple <code>x</code> does not overlap with any configuration listed within the pair set <code>pair_vars</code>. This constraint, originating from the extension model, stipulates that <code>x</code> must avoid all configurations defined as pairs: <code>x ∩ pair_vars = ∅</code>. It is useful for specifying tuples that are explicitly forbidden and should be excluded from the solution space.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NoOverlap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; bool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pair_vars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/no_overlap.jl#L48-L54" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Optimizer" href="#CBLS.Optimizer">#</a> <b><u>CBLS.Optimizer</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Create an instance of the Optimizer.</p><p><strong>Arguments</strong></p><ul><li><p><code>model</code>: The model to be optimized.</p></li><li><p><code>options::Options</code>: Options for configuring the solver.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Optimizer</code>: An instance of the optimizer.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L37-L48" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Optimizer-2" href="#CBLS.Optimizer-2">#</a> <b><u>CBLS.Optimizer</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optimizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractOptimizer</span></span></code></pre></div><p>Defines an optimizer for CBLS.</p><p><strong>Fields</strong></p><ul><li><p><code>solver::LS.MainSolver</code>: The main solver used for local search.</p></li><li><p><code>int_vars::Set{Int}</code>: Set of integer variables.</p></li><li><p><code>compare_vars::Set{Int}</code>: Set of variables to compare.</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L21-L30" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Ordered" href="#CBLS.Ordered">#</a> <b><u>CBLS.Ordered</u></b> — <i>Type</i>. <p>Global constraint ensuring that the variables are ordered according to <code>op</code>.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/ordered.jl#L45-L47" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Predicate" href="#CBLS.Predicate">#</a> <b><u>CBLS.Predicate</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Predicate{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMP.AbstractVectorSet</span></span></code></pre></div><p>Deprecated: Use <code>Intention</code> instead.</p><p>Represents a predicate set in the model.</p><p><strong>Arguments</strong></p><ul><li><code>f::F</code>: A function representing the predicate.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L142-L151" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Regular" href="#CBLS.Regular">#</a> <b><u>CBLS.Regular</u></b> — <i>Type</i>. <p>Ensures that a sequence <code>x</code> (interpreted as a word) is accepted by the regular language represented by a given automaton. This constraint verifies the compliance of <code>x</code> with the language rules encoded within the <code>automaton</code> parameter, which must be an instance of <code>&lt;:AbstractAutomaton</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegularConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; language))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/regular.jl#L35-L41" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.ScalarFunction" href="#CBLS.ScalarFunction">#</a> <b><u>CBLS.ScalarFunction</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScalarFunction{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Nothing, VOV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractScalarFunction</span></span></code></pre></div><p>A container to express any function with real value in JuMP syntax. Used with the <code>@objective</code> macro.</p><p><strong>Arguments:</strong></p><ul><li><p><code>f::F</code>: function to be applied to <code>X</code></p></li><li><p><code>X::V</code>: a subset of the variables of the model.</p></li></ul><p>Given a <code>model</code>, and some (collection of) variables <code>X</code> to optimize. an objective function <code>f</code> can be added as follows. Note that only <code>Min</code> for minimization us currently defined. <code>Max</code> will come soon.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Applies to all variables in order of insertion.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recommended only when the function argument order does not matter.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScalarFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generic use</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScalarFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, X))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/objectives.jl#L9-L28" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Sum" href="#CBLS.Sum">#</a> <b><u>CBLS.Sum</u></b> — <i>Type</i>. <p>Global constraint ensuring that the sum of the variables in <code>x</code> satisfies a given condition.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/sum.jl#L46-L48" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Supports" href="#CBLS.Supports">#</a> <b><u>CBLS.Supports</u></b> — <i>Type</i>. <p>Global constraint ensuring that the tuple <code>x</code> matches a configuration listed within the support set <code>pair_vars</code>. This constraint is derived from the extension model, specifying that <code>x</code> must be one of the explicitly defined supported configurations: <code>x ∈ pair_vars</code>. It is utilized to directly declare the tuples that are valid and should be included in the solution space.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Supports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pair_vars))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints/extension.jl#L97-L103" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{CBLS.MOIError}" href="#Base.copy-Tuple{CBLS.MOIError}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L52-L56" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{CBLS.MOIIntention}" href="#Base.copy-Tuple{CBLS.MOIIntention}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIIntention</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Copy an intention set.</p><p><strong>Arguments</strong></p><ul><li><code>set::MOIIntention</code>: The intention set to be copied.</li></ul><p><strong>Returns</strong></p><ul><li><code>MOIIntention</code>: A copy of the intention set.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L129-L139" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{DiscreteSet}" href="#Base.copy-Tuple{DiscreteSet}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Copy a discrete set.</p><p><strong>Arguments</strong></p><ul><li><code>set::DiscreteSet</code>: The discrete set to be copied.</li></ul><p><strong>Returns</strong></p><ul><li><code>DiscreteSet</code>: A copy of the discrete set.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L168-L178" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{F} where F&lt;:Function" href="#Base.copy-Tuple{F} where F&lt;:Function">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(op</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Copy a function.</p><p><strong>Arguments</strong></p><ul><li><code>op::F</code>: The function to be copied.</li></ul><p><strong>Returns</strong></p><ul><li><code>F</code>: The copied function.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L210-L220" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{Nothing}" href="#Base.copy-Tuple{Nothing}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Copy a <code>Nothing</code> value.</p><p><strong>Arguments</strong></p><ul><li><code>::Nothing</code>: The <code>Nothing</code> value to be copied.</li></ul><p><strong>Returns</strong></p><ul><li><code>Nothing</code>: The copied <code>Nothing</code> value.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L223-L233" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JuMP.build_variable-Union{Tuple{T}, Tuple{Function, JuMP.VariableInfo, T}} where T&lt;:MathOptInterface.AbstractScalarSet" href="#JuMP.build_variable-Union{Tuple{T}, Tuple{Function, JuMP.VariableInfo, T}} where T&lt;:MathOptInterface.AbstractScalarSet">#</a> <b><u>JuMP.build_variable</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMP.VariableInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractScalarSet</span></span></code></pre></div><p>Create a variable constrained by a scalar set.</p><p><strong>Arguments</strong></p><ul><li><p><code>info::JuMP.VariableInfo</code>: Information about the variable to be created.</p></li><li><p><code>set::T where T &lt;: MOI.AbstractScalarSet</code>: The set defining the constraints on the variable.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>JuMP.VariableConstrainedOnCreation</code>: A variable constrained by the specified set.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L1-L12" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JuMP.moi_set-Tuple{Intention, Int64}" href="#JuMP.moi_set-Tuple{Intention, Int64}">#</a> <b><u>JuMP.moi_set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">moi_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intention</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MOIIntention</span></span></code></pre></div><p>Convert an <code>Intention</code> set to a <code>MOIIntention</code> set.</p><p><strong>Arguments</strong></p><ul><li><p><code>set::Intention</code>: The intention set to be converted.</p></li><li><p><code>dim::Int</code>: The dimension of the vector set.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>MOIIntention</code>: The converted MOIIntention set.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L182-L193" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JuMP.moi_set-Tuple{Predicate, Int64}" href="#JuMP.moi_set-Tuple{Predicate, Int64}">#</a> <b><u>JuMP.moi_set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">moi_set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Predicate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MOIIntention</span></span></code></pre></div><p>Convert a <code>Predicate</code> set to a <code>MOIIntention</code> set.</p><p><strong>Arguments</strong></p><ul><li><p><code>set::Predicate</code>: The predicate set to be converted.</p></li><li><p><code>dim::Int</code>: The dimension of the vector set.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>MOIIntention</code>: The converted MOIIntention set.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L168-L179" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIError{F}}} where F&lt;:Function" href="#MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIError{F}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.add_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.VectorOfVariables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>optimizer</code>: DESCRIPTION</p></li><li><p><code>vars</code>: DESCRIPTION</p></li><li><p><code>set</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L36-L45" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIIntention{F}}} where F&lt;:Function" href="#MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIIntention{F}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.add_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.VectorOfVariables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIIntention{F}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Add an intention constraint to the optimizer.</p><p><strong>Arguments</strong></p><ul><li><p><code>optimizer::Optimizer</code>: The optimizer instance.</p></li><li><p><code>vars::MOI.VectorOfVariables</code>: The variables for the constraint.</p></li><li><p><code>set::MOIIntention{F}</code>: The intention set defining the constraint.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>CI{VOV, MOIIntention{F}}</code>: The constraint index.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L109-L121" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_constraint-Union{Tuple{T}, Tuple{CBLS.Optimizer, MathOptInterface.VariableIndex, DiscreteSet{T}}} where T&lt;:Number" href="#MathOptInterface.add_constraint-Union{Tuple{T}, Tuple{CBLS.Optimizer, MathOptInterface.VariableIndex, DiscreteSet{T}}} where T&lt;:Number">#</a> <b><u>MathOptInterface.add_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>optimizer</code>: DESCRIPTION</p></li><li><p><code>v</code>: DESCRIPTION</p></li><li><p><code>set</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/variables.jl#L37-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_variable-Tuple{CBLS.Optimizer}" href="#MathOptInterface.add_variable-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.add_variable</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/variables.jl#L2-L6" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.copy_to-Tuple{CBLS.Optimizer, MathOptInterface.ModelLike}" href="#MathOptInterface.copy_to-Tuple{CBLS.Optimizer, MathOptInterface.ModelLike}">#</a> <b><u>MathOptInterface.copy_to</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy_to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.ModelLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Copy the source model to the optimizer.</p><p><strong>Arguments</strong></p><ul><li><p><code>model::Optimizer</code>: The optimizer instance.</p></li><li><p><code>src::MOI.ModelLike</code>: The source model to be copied.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Nothing</code></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L122-L133" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.empty!-Tuple{Any}" href="#MathOptInterface.empty!-Tuple{Any}">#</a> <b><u>MathOptInterface.empty!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">empty!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(opt)</span></span></code></pre></div><p>Empty the optimizer.</p><p><strong>Arguments</strong></p><ul><li><code>opt::Optimizer</code>: The optimizer instance.</li></ul><p><strong>Returns</strong></p><ul><li><code>Nothing</code></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L181-L191" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverName}" href="#MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverName}">#</a> <b><u>MathOptInterface.get</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.SolverName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get the name of the solver.</p><p><strong>Arguments</strong></p><ul><li><code>::Optimizer</code>: The optimizer instance.</li></ul><p><strong>Returns</strong></p><ul><li><code>String</code>: The name of the solver.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L68-L78" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverVersion}" href="#MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverVersion}">#</a> <b><u>MathOptInterface.get</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Moi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.SolverVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get the version of the solver, here <code>LocalSearchSolvers.jl</code>.</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L236-L240" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.is_empty-Tuple{CBLS.Optimizer}" href="#MathOptInterface.is_empty-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.is_empty</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the model is empty.</p><p><strong>Arguments</strong></p><ul><li><code>model::Optimizer</code>: The optimizer instance.</li></ul><p><strong>Returns</strong></p><ul><li><code>Bool</code>: True if the model is empty, false otherwise.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L96-L106" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.is_valid-Tuple{CBLS.Optimizer, MathOptInterface.ConstraintIndex{MathOptInterface.VariableIndex, MathOptInterface.Integer}}" href="#MathOptInterface.is_valid-Tuple{CBLS.Optimizer, MathOptInterface.ConstraintIndex{MathOptInterface.VariableIndex, MathOptInterface.Integer}}">#</a> <b><u>MathOptInterface.is_valid</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_valid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CI{VI, MOI.Integer}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if an index is valid for the optimizer.</p><p><strong>Arguments</strong></p><ul><li><p><code>optimizer::Optimizer</code>: The optimizer instance.</p></li><li><p><code>index::CI{VI, MOI.Integer}</code>: The index to be checked.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Bool</code>: True if the index is valid, false otherwise.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L194-L205" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.optimize!-Tuple{CBLS.Optimizer}" href="#MathOptInterface.optimize!-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.optimize!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">optimize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Optimize the model using the optimizer.</p><p><strong>Arguments</strong></p><ul><li><code>model::Optimizer</code>: The optimizer instance.</li></ul><p><strong>Returns</strong></p><ul><li><code>Nothing</code></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L138-L148" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set" href="#MathOptInterface.set">#</a> <b><u>MathOptInterface.set</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.Silent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the verbosity of the solver.</p><p><strong>Arguments</strong></p><ul><li><p><code>::Optimizer</code>: The optimizer instance.</p></li><li><p><code>::MOI.Silent</code>: The silent option for the solver.</p></li><li><p><code>bool::Bool</code>: Whether to set the solver to silent mode.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Nothing</code></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L81-L93" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.RawOptimizerAttribute, Any}" href="#MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.RawOptimizerAttribute, Any}">#</a> <b><u>MathOptInterface.set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.RawOptimizerAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value)</span></span></code></pre></div><p>Set a RawOptimizerAttribute to <code>value</code></p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/attributes.jl#L19-L22" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.TimeLimitSec, Union{Nothing, Float64}}" href="#MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.TimeLimitSec, Union{Nothing, Float64}}">#</a> <b><u>MathOptInterface.set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.TimeLimitSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing,Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the time limit</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/attributes.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIError{F}}}} where F&lt;:Function" href="#MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIError{F}}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.supports_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">supports_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{VOV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{MOIError}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p>\`\`: DESCRIPTION</p></li><li><p>\`\`: DESCRIPTION</p></li><li><p>\`\`: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L21-L30" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIIntention{F}}}} where F&lt;:Function" href="#MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIIntention{F}}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.supports_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">supports_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{VOV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{MOIIntention{F}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Check if the optimizer supports a given intention constraint.</p><p><strong>Arguments</strong></p><ul><li><p><code>::Optimizer</code>: The optimizer instance.</p></li><li><p><code>::Type{VOV}</code>: The type of the variable.</p></li><li><p><code>::Type{MOIIntention{F}}</code>: The type of the intention.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Bool</code>: True if the optimizer supports the constraint, false otherwise.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/constraints.jl#L91-L103" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.supports_incremental_interface-Tuple{CBLS.Optimizer}" href="#MathOptInterface.supports_incremental_interface-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.supports_incremental_interface</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">supports_incremental_interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the optimizer supports incremental interface.</p><p><strong>Arguments</strong></p><ul><li><code>::Optimizer</code>: The optimizer instance.</li></ul><p><strong>Returns</strong></p><ul><li><code>Bool</code>: True if the optimizer supports incremental interface, false otherwise.</li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.2.2/src/MOI_wrapper.jl#L109-L119" target="_blank" rel="noreferrer">source</a></p></div><br>`,146),n=[l];function r(p,h,o,d,k,c){return a(),s("div",null,n)}const b=i(t,[["render",r]]);export{g as __pageData,b as default};
