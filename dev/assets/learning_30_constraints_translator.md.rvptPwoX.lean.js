import{_ as o,c as p,j as t,a,G as i,a5 as n,t as r,B as d,o as h}from"./chunks/framework.CJakPlgM.js";const _=JSON.parse('{"title":"ConstraintsTranslator.jl","description":"","frontmatter":{},"headers":[],"relativePath":"learning/30_constraints_translator.md","filePath":"learning/30_constraints_translator.md","lastUpdated":null}'),g={name:"learning/30_constraints_translator.md"},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""};function G(l,s,R,w,q,N){const e=d("Badge");return h(),p("div",null,[s[88]||(s[88]=t("h1",{id:"constraintstranslator-jl",tabindex:"-1"},[a("ConstraintsTranslator.jl "),t("a",{class:"header-anchor",href:"#constraintstranslator-jl","aria-label":'Permalink to "ConstraintsTranslator.jl"'},"â€‹")],-1)),s[89]||(s[89]=t("p",null,[a("Documentation for "),t("code",null,"ConstraintsTranslator.jl"),a(".")],-1)),t("details",k,[t("summary",null,[s[0]||(s[0]=t("a",{id:"ConstraintsTranslator.GoogleLLM",href:"#ConstraintsTranslator.GoogleLLM"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.GoogleLLM")],-1)),s[1]||(s[1]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GoogleLLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the Google LLM API.</p>',2)),t("ul",null,[s[5]||(s[5]=t("li",null,[t("p",null,[t("code",null,"api_key"),a(": an API key for accessing the Google Gemini API ("),t("a",{href:"https://ai.google.dev/gemini-api/docs/",target:"_blank",rel:"noreferrer"},"https://ai.google.dev/gemini-api/docs/"),a("), read from the environmental variable "),t("code",null,"GOOGLE_API_KEY"),a(".")])],-1)),s[6]||(s[6]=t("li",null,[t("p",null,[t("code",null,"model_id"),a(": a string identifier for the model to query. See "),t("a",{href:"https://ai.google.dev/gemini-api/docs/models/gemini",target:"_blank",rel:"noreferrer"},"https://ai.google.dev/gemini-api/docs/models/gemini"),a(" for the list of available models.")])],-1)),t("li",null,[t("p",null,[s[2]||(s[2]=t("code",null,"url",-1)),s[3]||(s[3]=a(": URL for chat completions. Defaults to ")),t("code",null,"https://generativelanguage.googleapis.com/v1beta/models/"+r(l.model_id),1),s[4]||(s[4]=a("."))])])]),s[8]||(s[8]=t("p",null,[t("a",{href:"https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L30-L38",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",u,[t("summary",null,[s[9]||(s[9]=t("a",{id:"ConstraintsTranslator.GroqLLM",href:"#ConstraintsTranslator.GroqLLM"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.GroqLLM")],-1)),s[10]||(s[10]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GroqLLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the Groq LLM API.</p><ul><li><p><code>api_key</code>: an API key for accessing the Groq API (<a href="https://groq.com" target="_blank" rel="noreferrer">https://groq.com</a>), read from the environmental variable GROQ_API_KEY.</p></li><li><p><code>model_id</code>: a string identifier for the model to query. See <a href="https://console.groq.com/docs/models" target="_blank" rel="noreferrer">https://console.groq.com/docs/models</a> for the list of available models.</p></li><li><p><code>url</code>: URL for chat completions. Defaults to `<a href="https://api.groq.com/openai/v1/chat/completions%60%60" target="_blank" rel="noreferrer">https://api.groq.com/openai/v1/chat/completions``</a>.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L7-L15" target="_blank" rel="noreferrer">source</a></p>',4))]),t("details",m,[t("summary",null,[s[12]||(s[12]=t("a",{id:"ConstraintsTranslator.LlamaCppLLM",href:"#ConstraintsTranslator.LlamaCppLLM"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.LlamaCppLLM")],-1)),s[13]||(s[13]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LlamaCppLLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the llama.cpp server API.</p><ul><li><p><code>api_key</code>: an optional API key for accessing the server</p></li><li><p><code>model_id</code>: a string identifier for the model to query. Unused, kept for API compatibility.</p></li><li><p><code>url</code>: the URL of the llama.cpp server OpenAI API endpoint (e.g., <a href="http://localhost:8080" target="_blank" rel="noreferrer">http://localhost:8080</a>)</p></li></ul><p>NOTE: we do not apply the appropriate chat templates to the prompt. This must be handled either in an external code path or by the server.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L53-L63" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",c,[t("summary",null,[s[15]||(s[15]=t("a",{id:"ConstraintsTranslator.MetadataMessage",href:"#ConstraintsTranslator.MetadataMessage"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.MetadataMessage")],-1)),s[16]||(s[16]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[17]||(s[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MetadataMessage</span></span></code></pre></div><p>Represents the metadata information of a prompt template. The templates follow the specifications of <code>PromptingTools.jl</code>.</p><p><strong>Fields</strong></p><ul><li><p><code>content::String</code>: The content of the metadata message.</p></li><li><p><code>description::String</code>: A description of the metadata message.</p></li><li><p><code>version::String</code>: The version of the metadata message.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L4-L14" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",b,[t("summary",null,[s[18]||(s[18]=t("a",{id:"ConstraintsTranslator.Prompt",href:"#ConstraintsTranslator.Prompt"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.Prompt")],-1)),s[19]||(s[19]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[20]||(s[20]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Prompt</span></span></code></pre></div><p>Simple data structure encapsulating a system prompt and a user prompt for LLM generation.</p><p><strong>Fields</strong></p><ul><li><p><code>system</code>: the system prompt.</p></li><li><p><code>user</code>: the user prompt.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/prompt.jl#L3-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",y,[t("summary",null,[s[21]||(s[21]=t("a",{id:"ConstraintsTranslator.PromptTemplate",href:"#ConstraintsTranslator.PromptTemplate"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.PromptTemplate")],-1)),s[22]||(s[22]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PromptTemplate</span></span></code></pre></div><p>Represents a complete prompt template, comprising metadata, system, and user messages.</p><p><strong>Fields</strong></p><ul><li><p><code>metadata::MetadataMessage</code>: The metadata message of the prompt template.</p></li><li><p><code>system::SystemMessage</code>: The system message of the prompt template.</p></li><li><p><code>user::UserMessage</code>: The user message of the prompt template.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L53-L62" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",C,[t("summary",null,[s[24]||(s[24]=t("a",{id:"ConstraintsTranslator.SystemMessage",href:"#ConstraintsTranslator.SystemMessage"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.SystemMessage")],-1)),s[25]||(s[25]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[28]||(s[28]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SystemMessage</span></span></code></pre></div>',1)),t("p",null,[s[26]||(s[26]=a("Represents the prompt template of a system message. The template can optionally contain string placeholders enclosed in double curly braces, e.g., ")),t("code",null,r(l.variable),1),s[27]||(s[27]=a(". Placeholders must be replaced with actual values when generating prompts."))]),s[29]||(s[29]=t("p",null,[t("strong",null,"Fields")],-1)),s[30]||(s[30]=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"content::String"),a(": The content of the system message.")])]),t("li",null,[t("p",null,[t("code",null,"variables::Vector{String}"),a(": A list of variables used in the system message.")])])],-1)),s[31]||(s[31]=t("p",null,[t("a",{href:"https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L21-L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",j,[t("summary",null,[s[32]||(s[32]=t("a",{id:"ConstraintsTranslator.UserMessage",href:"#ConstraintsTranslator.UserMessage"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.UserMessage")],-1)),s[33]||(s[33]=a()),i(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[36]||(s[36]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UserMessage</span></span></code></pre></div>',1)),t("p",null,[s[34]||(s[34]=a("Represents the prompt template of a user message. The template can optionally contain string placeholders enclosed in double curly braces, e.g., ")),t("code",null,r(l.variable),1),s[35]||(s[35]=a(". Placeholders must be replaced with actual values when generating prompts."))]),s[37]||(s[37]=t("p",null,[t("strong",null,"Fields")],-1)),s[38]||(s[38]=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"content::String"),a(": The content of the system message.")])]),t("li",null,[t("p",null,[t("code",null,"variables::Vector{String}"),a(": A list of variables used in the system message.")])])],-1)),s[39]||(s[39]=t("p",null,[t("a",{href:"https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L37-L47",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",E,[t("summary",null,[s[40]||(s[40]=t("a",{id:"ConstraintsTranslator.check_syntax_errors-Tuple{String}",href:"#ConstraintsTranslator.check_syntax_errors-Tuple{String}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.check_syntax_errors")],-1)),s[41]||(s[41]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[42]||(s[42]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">check_syntax_errors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Parses the string <code>s</code> as Julia code. In the case of syntax errors, it returns the error message of the parser as a string. Otherwise, it returns an empty string.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/parsing.jl#L34-L39" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",T,[t("summary",null,[s[43]||(s[43]=t("a",{id:"ConstraintsTranslator.edit_in_editor-Tuple{String}",href:"#ConstraintsTranslator.edit_in_editor-Tuple{String}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.edit_in_editor")],-1)),s[44]||(s[44]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[45]||(s[45]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edit_in_vim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Edits the input string <code>s</code> in a temporary file using the Vim editor. Returns the modified string after the editor is closed.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/parsing.jl#L50-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",f,[t("summary",null,[s[46]||(s[46]=t("a",{id:"ConstraintsTranslator.extract_structure-Tuple{AbstractLLM, AbstractString, AbstractString, Bool}",href:"#ConstraintsTranslator.extract_structure-Tuple{AbstractLLM, AbstractString, AbstractString, Bool}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.extract_structure")],-1)),s[47]||(s[47]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[48]||(s[48]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_structure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the parameters, decision variables and constraints of an optimization problem given a natural-language <code>description</code>. Returns a Markdown-formatted text containing the above information.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/translate.jl#L3-L9" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",v,[t("summary",null,[s[49]||(s[49]=t("a",{id:"ConstraintsTranslator.fix_syntax_errors-Tuple{AbstractLLM, AbstractString, AbstractString}",href:"#ConstraintsTranslator.fix_syntax_errors-Tuple{AbstractLLM, AbstractString, AbstractString}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.fix_syntax_errors")],-1)),s[50]||(s[50]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fix_syntax_errors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fixes syntax errors in the <code>code</code> by querying the Large Language Model <code>model</code>, based on an <code>error</code> produced by the Julia parser. Returns Markdown-formatted text containing the corrected code in a Julia code block.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/translate.jl#L137-L143" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",L,[t("summary",null,[s[52]||(s[52]=t("a",{id:"ConstraintsTranslator.format_template-Tuple{PromptTemplate}",href:"#ConstraintsTranslator.format_template-Tuple{PromptTemplate}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.format_template")],-1)),s[53]||(s[53]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[54]||(s[54]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">format_template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PromptTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span></span></code></pre></div><p>Formats a <code>PromptTemplate</code> by substituting all variables in the system and user messages with user-provided values.</p><p><strong>Arguments</strong></p><ul><li><p><code>template::PromptTemplate</code>: The prompt template containing metadata, system, and user messages.</p></li><li><p><code>kwargs...</code>: A variable number of keyword arguments where keys are variable names and values are the corresponding replacements.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Prompt</code>: A <code>Prompt</code> struct with the system and user messages containing the substituted values.</li></ul><p><strong>Raises</strong></p><ul><li><p><code>ErrorException</code>: If any variables specified in the system or user templates are not present in the <code>kwargs</code>.</p></li><li><p><code>Warning</code>: If there are extra <code>kwargs</code> that are not used in the templates.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L126-L141" target="_blank" rel="noreferrer">source</a></p>',9))]),t("details",F,[t("summary",null,[s[55]||(s[55]=t("a",{id:"ConstraintsTranslator.get_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}",href:"#ConstraintsTranslator.get_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[56]||(s[56]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[57]||(s[57]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for a <code>prompt</code> using the <code>llm</code> model API.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L229-L233" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",M,[t("summary",null,[s[58]||(s[58]=t("a",{id:"ConstraintsTranslator.get_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}",href:"#ConstraintsTranslator.get_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[59]||(s[59]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[60]||(s[60]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OpenAILLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using an OpenAI API compatible LLM</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L75-L79" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",A,[t("summary",null,[s[61]||(s[61]=t("a",{id:"ConstraintsTranslator.get_completion-Tuple{GoogleLLM, Prompt}",href:"#ConstraintsTranslator.get_completion-Tuple{GoogleLLM, Prompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[62]||(s[62]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GoogleLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using the Google Gemini LLM API.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L97-L101" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",x,[t("summary",null,[s[64]||(s[64]=t("a",{id:"ConstraintsTranslator.get_package_path-Tuple{}",href:"#ConstraintsTranslator.get_package_path-Tuple{}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.get_package_path")],-1)),s[65]||(s[65]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[66]||(s[66]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_package_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the absolute path of the root directory of <code>ConstraintsTranslator.jl</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/utils.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",P,[t("summary",null,[s[67]||(s[67]=t("a",{id:"ConstraintsTranslator.jumpify_model-Tuple{AbstractLLM, AbstractString, AbstractString, Bool}",href:"#ConstraintsTranslator.jumpify_model-Tuple{AbstractLLM, AbstractString, AbstractString, Bool}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.jumpify_model")],-1)),s[68]||(s[68]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[69]||(s[69]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">jumpify_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, examples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translates the natural language <code>description</code> of an optimization problem into a JuMP constraints programming model to be solved with CBL by querying the Large Language Model <code>model</code>. The <code>examples</code> are snippets from <code>ConstraintModels.jl</code> used as in-context examples to the LLM. To work optimally, the model expects the <code>description</code> to be a structured Markdown-formatted description as the ones generated by <code>extract_structure</code>. Returns a Markdown-formatted text containing Julia code in a code block.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/translate.jl#L57-L66" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",B,[t("summary",null,[s[70]||(s[70]=t("a",{id:"ConstraintsTranslator.parse_code-Tuple{String}",href:"#ConstraintsTranslator.parse_code-Tuple{String}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.parse_code")],-1)),s[71]||(s[71]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[72]||(s[72]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parse_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Parse the code blocks in the input string <code>s</code> delimited by triple backticks and an optional language annotation. Returns a dictionary keyed by language. Code blocks from the same language are concatenated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/parsing.jl#L1-L6" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",S,[t("summary",null,[s[73]||(s[73]=t("a",{id:"ConstraintsTranslator.read_template-Tuple{String}",href:"#ConstraintsTranslator.read_template-Tuple{String}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.read_template")],-1)),s[74]||(s[74]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read_template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reads a prompt template from a JSON file specified by <code>data_path</code>. The function parses the JSON data and constructs a <code>PromptTemplate</code> object containing metadata, system, and user messages. TODO: validate the JSON data against a schema to ensure it is valid before parsing.</p><p><strong>Arguments</strong></p><ul><li><code>data_path::String</code>: The path to the JSON file containing the prompt template.</li></ul><p><strong>Returns</strong></p><ul><li><code>PromptTemplate</code>: A <code>PromptTemplate</code> structure encapsulating the metadata, system, and user messages.</li></ul><p><strong>Raises</strong></p><ul><li><code>ErrorException</code>: if the template does not match the specification format.</li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/template.jl#L69-L84" target="_blank" rel="noreferrer">source</a></p>',9))]),t("details",O,[t("summary",null,[s[76]||(s[76]=t("a",{id:"ConstraintsTranslator.stream_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}",href:"#ConstraintsTranslator.stream_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[77]||(s[77]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[78]||(s[78]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for a <code>prompt</code> using the <code>llm</code> model API. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L218-L223" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",D,[t("summary",null,[s[79]||(s[79]=t("a",{id:"ConstraintsTranslator.stream_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}",href:"#ConstraintsTranslator.stream_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[80]||(s[80]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[81]||(s[81]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OpenAILLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using an OpenAI API compatible model. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L119-L124" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",J,[t("summary",null,[s[82]||(s[82]=t("a",{id:"ConstraintsTranslator.stream_completion-Tuple{GoogleLLM, Prompt}",href:"#ConstraintsTranslator.stream_completion-Tuple{GoogleLLM, Prompt}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[83]||(s[83]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[84]||(s[84]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GoogleLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using the Google Gemini LLM API. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/llm.jl#L176-L181" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",I,[t("summary",null,[s[85]||(s[85]=t("a",{id:"ConstraintsTranslator.translate-Tuple{AbstractLLM, AbstractString}",href:"#ConstraintsTranslator.translate-Tuple{AbstractLLM, AbstractString}"},[t("span",{class:"jlbinding"},"ConstraintsTranslator.translate")],-1)),s[86]||(s[86]=a()),i(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; interactive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translate the natural-language <code>description</code> of an optimization problem into a Constraint Programming model by querying the Large Language Model <code>model</code>. If <code>interactive</code>, the user will be prompted via the command line to inspect the intermediate outputs of the LLM, and possibly modify them.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.3/src/translate.jl#L153-L160" target="_blank" rel="noreferrer">source</a></p>',3))])])}const V=o(g,[["render",G]]);export{_ as __pageData,V as default};
