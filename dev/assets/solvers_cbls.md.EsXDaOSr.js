import{_ as i,c as s,o as a,a7 as e}from"./chunks/framework.RTxADYK2.js";const b=JSON.parse('{"title":"CBLS.jl","description":"","frontmatter":{},"headers":[],"relativePath":"solvers/cbls.md","filePath":"solvers/cbls.md","lastUpdated":null}'),t={name:"solvers/cbls.md"},l=e('<h1 id="CBLS.jl" tabindex="-1">CBLS.jl <a class="header-anchor" href="#CBLS.jl" aria-label="Permalink to &quot;CBLS.jl {#CBLS.jl}&quot;">​</a></h1><p>Documentation for <code>CBLS.jl</code>.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AllDifferent" href="#CBLS.AllDifferent">#</a> <b><u>CBLS.AllDifferent</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of a given configuration are unique.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AllDifferent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L139-L145" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AllEqual" href="#CBLS.AllEqual">#</a> <b><u>CBLS.AllEqual</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of <code>X</code> are all equal.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AllEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L170-L176" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AllEqualParam" href="#CBLS.AllEqualParam">#</a> <b><u>CBLS.AllEqualParam</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of <code>X</code> are all equal to a given parameter <code>param</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AllEqualParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L338-L344" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.AlwaysTrue" href="#CBLS.AlwaysTrue">#</a> <b><u>CBLS.AlwaysTrue</u></b> — <i>Type</i>. <p>Always return <code>true</code>. Mainly used for testing purpose.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AlwaysTrue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L231-L237" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.DiscreteSet" href="#CBLS.DiscreteSet">#</a> <b><u>CBLS.DiscreteSet</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L98-L100" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.DistDifferent" href="#CBLS.DistDifferent">#</a> <b><u>CBLS.DistDifferent</u></b> — <i>Type</i>. <p>Local constraint ensuring that, given a vector <code>X</code> of size 4, <code>|X[1] - X[2]| ≠ |X[3] - X[4]|)</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DistDifferent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L293-L299" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Eq" href="#CBLS.Eq">#</a> <b><u>CBLS.Eq</u></b> — <i>Type</i>. <p>Equality between two variables.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Eq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L201-L207" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Error" href="#CBLS.Error">#</a> <b><u>CBLS.Error</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMP.AbstractVectorSet</span></span></code></pre></div><p>The solver will compute a straightforward error function based on the <code>concept</code>. To run the solver efficiently, it is possible to provide an <em>error function</em> <code>err</code> instead of <code>concept</code>. <code>err</code> must return a nonnegative real number.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L58-L66" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.LessThanParam" href="#CBLS.LessThanParam">#</a> <b><u>CBLS.LessThanParam</u></b> — <i>Type</i>. <p>Constraint ensuring that the value of <code>x</code> is less than a given parameter <code>param</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LessThanParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L432-L438" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAllDifferent" href="#CBLS.MOIAllDifferent">#</a> <b><u>CBLS.MOIAllDifferent</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAllDifferent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L119-L123" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAllEqual" href="#CBLS.MOIAllEqual">#</a> <b><u>CBLS.MOIAllEqual</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAllEqual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L149-L153" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAllEqualParam" href="#CBLS.MOIAllEqualParam">#</a> <b><u>CBLS.MOIAllEqualParam</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAllEqualParam{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>param::T</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOIAllEqualParam(param, dim = 0) = begin #= none:5 =# new{typeof(param)}(param, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L303-L315" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIAlwaysTrue" href="#CBLS.MOIAlwaysTrue">#</a> <b><u>CBLS.MOIAlwaysTrue</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIAlwaysTrue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L211-L215" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIDistDifferent" href="#CBLS.MOIDistDifferent">#</a> <b><u>CBLS.MOIDistDifferent</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIDistDifferent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L273-L277" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIEq" href="#CBLS.MOIEq">#</a> <b><u>CBLS.MOIEq</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIEq </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L180-L184" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIError" href="#CBLS.MOIError">#</a> <b><u>CBLS.MOIError</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIError{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>f::F</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOIError(f, dim = 0) = begin #= none:5 =# new{typeof(f)}(f, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L1-L13" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOILessThanParam" href="#CBLS.MOILessThanParam">#</a> <b><u>CBLS.MOILessThanParam</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOILessThanParam{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>param::T</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOILessThanParam(param, dim = 0) = begin #= none:5 =# new{typeof(param)}(param, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L397-L409" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIMinusEqualParam" href="#CBLS.MOIMinusEqualParam">#</a> <b><u>CBLS.MOIMinusEqualParam</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIMinusEqualParam{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>param::T</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOIMinusEqualParam(param, dim = 0) = begin #= none:5 =# new{typeof(param)}(param, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L444-L456" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIOrdered" href="#CBLS.MOIOrdered">#</a> <b><u>CBLS.MOIOrdered</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIOrdered </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L241-L245" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOIPredicate" href="#CBLS.MOIPredicate">#</a> <b><u>CBLS.MOIPredicate</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOIPredicate{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>f::F</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOIPredicate(f, dim = 0) = begin #= none:5 =# new{typeof(f)}(f, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L74-L86" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOISequentialTasks" href="#CBLS.MOISequentialTasks">#</a> <b><u>CBLS.MOISequentialTasks</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOISequentialTasks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L492-L496" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MOISumEqualParam" href="#CBLS.MOISumEqualParam">#</a> <b><u>CBLS.MOISumEqualParam</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOISumEqualParam{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractVectorSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>param::T</code>: DESCRIPTION</p></li><li><p><code>dimension::Int</code>: DESCRIPTION</p></li><li><p><code>MOISumEqualParam(param, dim = 0) = begin #= none:5 =# new{typeof(param)}(param, dim) end</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L350-L362" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.MinusEqualParam" href="#CBLS.MinusEqualParam">#</a> <b><u>CBLS.MinusEqualParam</u></b> — <i>Type</i>. <p>Constraint ensuring that the value of <code>x</code> is less than a given parameter <code>param</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MinusEqualParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L479-L485" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Optimizer" href="#CBLS.Optimizer">#</a> <b><u>CBLS.Optimizer</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L35-L39" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Optimizer-2" href="#CBLS.Optimizer-2">#</a> <b><u>CBLS.Optimizer</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optimizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractOptimizer</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>solver::Solver</code>: DESCRIPTION</p></li><li><p><code>status::MOI.TerminationStatusCode</code>: DESCRIPTION</p></li><li><p><code>options::Options</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L19-L28" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Ordered" href="#CBLS.Ordered">#</a> <b><u>CBLS.Ordered</u></b> — <i>Type</i>. <p>Global constraint ensuring that all the values of <code>x</code> are ordered.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Ordered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L262-L268" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.Predicate" href="#CBLS.Predicate">#</a> <b><u>CBLS.Predicate</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Predicate{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMP.AbstractVectorSet</span></span></code></pre></div><p>Assuming <code>X</code> is a (collection of) variables, <code>concept</code> a boolean function over <code>X</code>, and that a <code>model</code> is defined. In <code>JuMP</code> syntax we can create a constraint based on <code>concept</code> as follows.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Predicate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(concept))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L105-L113" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.ScalarFunction" href="#CBLS.ScalarFunction">#</a> <b><u>CBLS.ScalarFunction</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ScalarFunction{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Nothing, VOV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractScalarFunction</span></span></code></pre></div><p>A container to express any function with real value in JuMP syntax. Used with the <code>@objective</code> macro.</p><p><strong>Arguments:</strong></p><ul><li><p><code>f::F</code>: function to be applied to <code>X</code></p></li><li><p><code>X::V</code>: a subset of the variables of the model.</p></li></ul><p>Given a <code>model</code>, and some (collection of) variables <code>X</code> to optimize. an objective function <code>f</code> can be added as follows. Note that only <code>Min</code> for minimization us currently defined. <code>Max</code> will come soon.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Applies to all variables in order of insertion.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recommended only when the function argument order does not matter.</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScalarFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f))</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generic use</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScalarFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, X))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/objectives.jl#L9-L28" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.SequentialTasks" href="#CBLS.SequentialTasks">#</a> <b><u>CBLS.SequentialTasks</u></b> — <i>Type</i>. <p>Local constraint ensuring that, given a vector <code>X</code> of size 4, <code>|X[1] - X[2]| ≠ |X[3] - X[4]|)</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SequentialTasks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L512-L518" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="CBLS.SumEqualParam" href="#CBLS.SumEqualParam">#</a> <b><u>CBLS.SumEqualParam</u></b> — <i>Type</i>. <p>Global constraint ensuring that the sum of the values of <code>X</code> is equal to a given parameter <code>param</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SumEqualParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L385-L391" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{CBLS.MOIError}" href="#Base.copy-Tuple{CBLS.MOIError}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L51-L55" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{DiscreteSet}" href="#Base.copy-Tuple{DiscreteSet}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L107-L111" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JuMP.build_variable-Union{Tuple{T}, Tuple{Function, JuMP.VariableInfo, T}} where T&lt;:MathOptInterface.AbstractScalarSet" href="#JuMP.build_variable-Union{Tuple{T}, Tuple{Function, JuMP.VariableInfo, T}} where T&lt;:MathOptInterface.AbstractScalarSet">#</a> <b><u>JuMP.build_variable</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMP.VariableInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MOI.AbstractScalarSet</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p>``: DESCRIPTION</p></li><li><p><code>info</code>: DESCRIPTION</p></li><li><p><code>set</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIError{F}}} where F&lt;:Function" href="#MathOptInterface.add_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, MathOptInterface.VectorOfVariables, CBLS.MOIError{F}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.add_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.VectorOfVariables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOIError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>optimizer</code>: DESCRIPTION</p></li><li><p><code>vars</code>: DESCRIPTION</p></li><li><p><code>set</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L36-L45" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_constraint-Union{Tuple{T}, Tuple{CBLS.Optimizer, MathOptInterface.VariableIndex, DiscreteSet{T}}} where T&lt;:Number" href="#MathOptInterface.add_constraint-Union{Tuple{T}, Tuple{CBLS.Optimizer, MathOptInterface.VariableIndex, DiscreteSet{T}}} where T&lt;:Number">#</a> <b><u>MathOptInterface.add_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optimizer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteSet{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>optimizer</code>: DESCRIPTION</p></li><li><p><code>v</code>: DESCRIPTION</p></li><li><p><code>set</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/variables.jl#L34-L43" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.add_variable-Tuple{CBLS.Optimizer}" href="#MathOptInterface.add_variable-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.add_variable</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/variables.jl#L2-L6" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.empty!-Tuple{Any}" href="#MathOptInterface.empty!-Tuple{Any}">#</a> <b><u>MathOptInterface.empty!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">empty!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(opt) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L114-L118" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverName}" href="#MathOptInterface.get-Tuple{CBLS.Optimizer, MathOptInterface.SolverName}">#</a> <b><u>MathOptInterface.get</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.SolverName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L59-L63" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.is_empty-Tuple{CBLS.Optimizer}" href="#MathOptInterface.is_empty-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.is_empty</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L78-L82" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.optimize!-Tuple{CBLS.Optimizer}" href="#MathOptInterface.optimize!-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.optimize!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">optimize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L93-L95" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set" href="#MathOptInterface.set">#</a> <b><u>MathOptInterface.set</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.Silent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p>``: DESCRIPTION</p></li><li><p>``: DESCRIPTION</p></li><li><p><code>bool</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L66-L75" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.RawOptimizerAttribute, Any}" href="#MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.RawOptimizerAttribute, Any}">#</a> <b><u>MathOptInterface.set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.RawOptimizerAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value)</span></span></code></pre></div><p>Set a RawOptimizerAttribute to <code>value</code></p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/attributes.jl#L19-L22" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.TimeLimitSec, Union{Nothing, Float64}}" href="#MathOptInterface.set-Tuple{CBLS.Optimizer, MathOptInterface.TimeLimitSec, Union{Nothing, Float64}}">#</a> <b><u>MathOptInterface.set</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOI.TimeLimitSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing,Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the time limit</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/attributes.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIError{F}}}} where F&lt;:Function" href="#MathOptInterface.supports_constraint-Union{Tuple{F}, Tuple{CBLS.Optimizer, Type{MathOptInterface.VectorOfVariables}, Type{CBLS.MOIError{F}}}} where F&lt;:Function">#</a> <b><u>MathOptInterface.supports_constraint</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MOI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">supports_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{VOV}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{MOIError}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p>``: DESCRIPTION</p></li><li><p>``: DESCRIPTION</p></li><li><p>``: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/constraints.jl#L21-L30" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="MathOptInterface.supports_incremental_interface-Tuple{CBLS.Optimizer}" href="#MathOptInterface.supports_incremental_interface-Tuple{CBLS.Optimizer}">#</a> <b><u>MathOptInterface.supports_incremental_interface</u></b> — <i>Method</i>. <p>Copy constructor for the optimizer</p><p><a href="https://github.com/JuliaConstraints/CBLS.jl/blob/v0.1.13/src/MOI_wrapper.jl#L85-L87" target="_blank" rel="noreferrer">source</a></p></div><br>',92),r=[l];function p(n,h,d,o,k,c){return a(),s("div",null,r)}const g=i(t,[["render",p]]);export{b as __pageData,g as default};
