import{_ as n,c as o,a5 as t,j as e,a as i,G as l,B as r,o as p}from"./chunks/framework.CJakPlgM.js";const L=JSON.parse('{"title":"A layer structure for any ICN","description":"","frontmatter":{},"headers":[],"relativePath":"learning/11_layers.md","filePath":"learning/11_layers.md","lastUpdated":null}'),u={name:"learning/11_layers.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""};function f(w,s,N,E,x,_){const a=r("Badge");return p(),o("div",null,[s[33]||(s[33]=t('<h1 id="A-layer-structure-for-any-ICN" tabindex="-1">A layer structure for any ICN <a class="header-anchor" href="#A-layer-structure-for-any-ICN" aria-label="Permalink to &quot;A layer structure for any ICN {#A-layer-structure-for-any-ICN}&quot;">â€‹</a></h1><p>The <code>layer.jl</code> file defines a <code>Layer</code> structure and several associated functions for manipulating and interacting with this structure in the context of an Interpretable Compositional Network (ICN).</p><p>The <code>Layer</code> structure is used to store a <code>LittleDict</code> of operations that can be selected during the learning phase of an ICN. Each layer can be exclusive, meaning only one operation can be selected at a time. This is particularly useful in the context of ICNs, which are used to learn alternative expressions for highly combinatorial functions, such as those found in Constraint-based Local Search solvers.</p>',3)),e("details",d,[e("summary",null,[s[0]||(s[0]=e("a",{id:"CompositionalNetworks.Layer-learning-11_layers",href:"#CompositionalNetworks.Layer-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.Layer")],-1)),s[1]||(s[1]=i()),l(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Layer</span></span></code></pre></div><p>A structure to store a <code>LittleDict</code> of operations that can be selected during the learning phase of an ICN. If the layer is exclusive, only one operation can be selected at a time.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",c,[e("summary",null,[s[3]||(s[3]=e("a",{id:"CompositionalNetworks.functions-learning-11_layers",href:"#CompositionalNetworks.functions-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.functions")],-1)),s[4]||(s[4]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">functions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer)</span></span></code></pre></div><p>Access the operations of a layer. The container is ordered.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L11-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",h,[e("summary",null,[s[6]||(s[6]=e("a",{id:"Base.length-Tuple{CompositionalNetworks.Layer}-learning-11_layers",href:"#Base.length-Tuple{CompositionalNetworks.Layer}-learning-11_layers"},[e("span",{class:"jlbinding"},"Base.length")],-1)),s[7]||(s[7]=i()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer)</span></span></code></pre></div><p>Return the number of operations in a layer.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L17-L20" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",g,[e("summary",null,[s[9]||(s[9]=e("a",{id:"CompositionalNetworks.exclu-learning-11_layers",href:"#CompositionalNetworks.exclu-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.exclu")],-1)),s[10]||(s[10]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exclu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer)</span></span></code></pre></div><p>Return <code>true</code> if the layer has mutually exclusive operations.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L23-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",k,[e("summary",null,[s[12]||(s[12]=e("a",{id:"CompositionalNetworks.symbol-learning-11_layers",href:"#CompositionalNetworks.symbol-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.symbol")],-1)),s[13]||(s[13]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[14]||(s[14]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer, i)</span></span></code></pre></div><p>Return the i-th symbols of the operations in a given layer.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L29-L32" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",y,[e("summary",null,[s[15]||(s[15]=e("a",{id:"CompositionalNetworks.nbits_exclu-learning-11_layers",href:"#CompositionalNetworks.nbits_exclu-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.nbits_exclu")],-1)),s[16]||(s[16]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nbits_exclu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer)</span></span></code></pre></div><p>Convert the length of an exclusive layer into a number of bits.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L40-L43" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",b,[e("summary",null,[s[18]||(s[18]=e("a",{id:"CompositionalNetworks.show_layer-learning-11_layers",href:"#CompositionalNetworks.show_layer-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.show_layer")],-1)),s[19]||(s[19]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[20]||(s[20]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">show_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer)</span></span></code></pre></div><p>Return a string that contains the elements in a layer.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L46-L49" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",m,[e("summary",null,[s[21]||(s[21]=e("a",{id:"CompositionalNetworks.selected_size-learning-11_layers",href:"#CompositionalNetworks.selected_size-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.selected_size")],-1)),s[22]||(s[22]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selected_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer, layer_weights)</span></span></code></pre></div><p>Return the number of operations selected by <code>layer_weights</code> in <code>layer</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L52-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",C,[e("summary",null,[s[24]||(s[24]=e("a",{id:"CompositionalNetworks.is_viable-learning-11_layers",href:"#CompositionalNetworks.is_viable-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.is_viable")],-1)),s[25]||(s[25]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[26]||(s[26]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_viable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layer, w)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_viable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_viable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn, w)</span></span></code></pre></div><p>Assert if a pair of layer/icn and weights compose a viable pattern. If no weights are given with an icn, it will check the current internal value.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L58-L63" target="_blank" rel="noreferrer">source</a></p>`,3))]),e("details",j,[e("summary",null,[s[27]||(s[27]=e("a",{id:"CompositionalNetworks.generate_inclusive_operations-learning-11_layers",href:"#CompositionalNetworks.generate_inclusive_operations-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.generate_inclusive_operations")],-1)),s[28]||(s[28]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[29]||(s[29]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate_inclusive_operations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(predicate, bits)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate_exclusive_operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(max_op_number)</span></span></code></pre></div><p>Generates the operations (weights) of a layer with inclusive/exclusive operations.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L66-L70" target="_blank" rel="noreferrer">source</a></p>`,3))]),e("details",v,[e("summary",null,[s[30]||(s[30]=e("a",{id:"CompositionalNetworks.generate_exclusive_operation-learning-11_layers",href:"#CompositionalNetworks.generate_exclusive_operation-learning-11_layers"},[e("span",{class:"jlbinding"},"CompositionalNetworks.generate_exclusive_operation")],-1)),s[31]||(s[31]=i()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[32]||(s[32]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate_exclusive_operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(max_op_number)</span></span></code></pre></div><p>Generates the operations (weights) of a layer with exclusive operations.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layer.jl#L80-L83" target="_blank" rel="noreferrer">source</a></p>',3))]),s[34]||(s[34]=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"Missing docstring."),e("p",null,[i("Missing docstring for "),e("code",null,"generate_weigths"),i(". Check Documenter's build log for details.")])],-1))])}const B=n(u,[["render",f]]);export{L as __pageData,B as default};
