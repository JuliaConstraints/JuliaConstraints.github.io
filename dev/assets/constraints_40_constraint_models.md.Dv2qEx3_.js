import{_ as h,c as l,j as i,a,G as e,a5 as t,B as o,o as p}from"./chunks/framework.CJakPlgM.js";const P=JSON.parse('{"title":"ConstraintModels.jl","description":"","frontmatter":{},"headers":[],"relativePath":"constraints/40_constraint_models.md","filePath":"constraints/40_constraint_models.md","lastUpdated":null}'),k={name:"constraints/40_constraint_models.md"},d={class:"jldocstring custom-block",open:""},r={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.481ex",height:"1.136ex",role:"img",focusable:"false",viewBox:"0 -491 2422.4 502","aria-hidden":"true"},y={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""};function Q(w,s,L,I,S,J){const n=o("Badge");return p(),l("div",null,[s[59]||(s[59]=i("h1",{id:"constraintmodels-jl",tabindex:"-1"},[a("ConstraintModels.jl "),i("a",{class:"header-anchor",href:"#constraintmodels-jl","aria-label":'Permalink to "ConstraintModels.jl"'},"​")],-1)),s[60]||(s[60]=i("p",null,[a("Documentation for "),i("code",null,"ConstraintModels.jl"),a(".")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"ConstraintModels.SudokuInstance",href:"#ConstraintModels.SudokuInstance"},[i("span",{class:"jlbinding"},"ConstraintModels.SudokuInstance")],-1)),s[1]||(s[1]=a()),e(n,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mutable struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SudokuInstance{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMatrix{T}</span></span></code></pre></div><p><strong>A <code>struct</code> for SudokuInstances, which is a subtype of <code>AbstractMatrix</code>.</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fill in blank sudoku of type T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fill in blank sudoku of type Int</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fill in &quot;standard&quot; 9×9 sudoku of type T</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fill in &quot;standard&quot; 9×9 sudoku of type Int</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{Tuple{Int, Int}, T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># construct a sudoku given pairs of coordinates and values</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{Tuple{Int, Int}, T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># again, default to 9×9 sudoku, constructing given pairs</span></span></code></pre></div><p>Constructor functions for the <code>SudokuInstance</code> <code>struct</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L122-L138" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",r,[i("summary",null,[s[3]||(s[3]=i("a",{id:"ConstraintModels.SudokuInstance-Tuple{Dictionaries.Dictionary}",href:"#ConstraintModels.SudokuInstance-Tuple{Dictionaries.Dictionary}"},[i("span",{class:"jlbinding"},"ConstraintModels.SudokuInstance")],-1)),s[4]||(s[4]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a <code>SudokuInstance</code> with the values <code>X</code> of a solver as input.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L165-L169" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",u,[i("summary",null,[s[6]||(s[6]=i("a",{id:"Base.Multimedia.display-Tuple{Any, ConstraintModels.SudokuInstance}",href:"#Base.Multimedia.display-Tuple{Any, ConstraintModels.SudokuInstance}"},[i("span",{class:"jlbinding"},"Base.Multimedia.display")],-1)),s[7]||(s[7]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[12]||(s[12]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># default to stdout</span></span></code></pre></div>`,1)),i("p",null,[s[10]||(s[10]=a("Displays an ")),i("mjx-container",g,[(p(),l("svg",c,s[8]||(s[8]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1822.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[9]||(s[9]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"n"),i("mo",null,"×"),i("mi",null,"n")])],-1))]),s[11]||(s[11]=a(" SudokuInstance."))]),s[13]||(s[13]=i("p",null,[i("a",{href:"https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L312-L318",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",y,[i("summary",null,[s[14]||(s[14]=i("a",{id:"Base.Multimedia.display-Tuple{Any, Val{:sudoku}}",href:"#Base.Multimedia.display-Tuple{Any, Val{:sudoku}}"},[i("span",{class:"jlbinding"},"Base.Multimedia.display")],-1)),s[15]||(s[15]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[16]||(s[16]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:sudoku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Extends <code>Base.display</code> to a sudoku configuration.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L348-L352" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",C,[i("summary",null,[s[17]||(s[17]=i("a",{id:"Base.Multimedia.display-Tuple{ConstraintModels.SudokuInstance}",href:"#Base.Multimedia.display-Tuple{ConstraintModels.SudokuInstance}"},[i("span",{class:"jlbinding"},"Base.Multimedia.display")],-1)),s[18]||(s[18]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.display</code> to <code>SudokuInstance</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L334-L338" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",F,[i("summary",null,[s[20]||(s[20]=i("a",{id:"Base.Multimedia.display-Tuple{Dictionaries.Dictionary}",href:"#Base.Multimedia.display-Tuple{Dictionaries.Dictionary}"},[i("span",{class:"jlbinding"},"Base.Multimedia.display")],-1)),s[21]||(s[21]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[22]||(s[22]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.display</code> to a sudoku configuration.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L341-L345" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",E,[i("summary",null,[s[23]||(s[23]=i("a",{id:"Base.size-Tuple{ConstraintModels.SudokuInstance}",href:"#Base.size-Tuple{ConstraintModels.SudokuInstance}"},[i("span",{class:"jlbinding"},"Base.size")],-1)),s[24]||(s[24]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[25]||(s[25]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SudokuInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.size</code> for <code>SudokuInstance</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L181-L185" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",m,[i("summary",null,[s[26]||(s[26]=i("a",{id:"ConstraintModels._format_line-Tuple{Any, Any}",href:"#ConstraintModels._format_line-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"ConstraintModels._format_line")],-1)),s[27]||(s[27]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[28]||(s[28]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_format_line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, M)</span></span></code></pre></div><p>Format line of a sudoku grid.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L249-L253" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",b,[i("summary",null,[s[29]||(s[29]=i("a",{id:"ConstraintModels._format_line_segment-Tuple{Any, Any, Any}",href:"#ConstraintModels._format_line_segment-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"ConstraintModels._format_line_segment")],-1)),s[30]||(s[30]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_format_line_segment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, col_pos, M)</span></span></code></pre></div><p>Format line segment of a sudoku grid.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L228-L232" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"ConstraintModels._format_val-Tuple{Any}",href:"#ConstraintModels._format_val-Tuple{Any}"},[i("span",{class:"jlbinding"},"ConstraintModels._format_val")],-1)),s[33]||(s[33]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[34]||(s[34]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_format_val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span></code></pre></div><p>Format an integer <code>a</code> into a string for SudokuInstance.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L221-L225" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",j,[i("summary",null,[s[35]||(s[35]=i("a",{id:"ConstraintModels._get_sep_line-Tuple{Any, Any, Any}",href:"#ConstraintModels._get_sep_line-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"ConstraintModels._get_sep_line")],-1)),s[36]||(s[36]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[37]||(s[37]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_get_sep_line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, pos_row, M)</span></span></code></pre></div><p>Return a line separator.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L266-L270" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",B,[i("summary",null,[s[38]||(s[38]=i("a",{id:"ConstraintModels.chemical_equilibrium-Tuple{Any, Any, Any}",href:"#ConstraintModels.chemical_equilibrium-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.chemical_equilibrium")],-1)),s[39]||(s[39]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[40]||(s[40]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">chemical_equilibrium</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(atoms_compounds, elements_weights, standard_free_energy; modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Even the structure to model problems with continuous domains is available, the default solver is not yet equiped to solve such problems efficiently.</p></div><p><strong>From Wikipedia</strong></p><p>In a chemical reaction, chemical equilibrium is the state in which both the reactants and products are present in concentrations which have no further tendency to change with time, so that there is no observable change in the properties of the system. This state results when the forward reaction proceeds at the same rate as the reverse reaction. The reaction rates of the forward and backward reactions are generally not zero, but they are equal. Thus, there are no net changes in the concentrations of the reactants and products. Such a state is known as dynamic equilibrium.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/chemical_equilibrium.jl#L30-L40" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",v,[i("summary",null,[s[41]||(s[41]=i("a",{id:"ConstraintModels.golomb",href:"#ConstraintModels.golomb"},[i("span",{class:"jlbinding"},"ConstraintModels.golomb")],-1)),s[42]||(s[42]=a()),e(n,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">golomb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n²)</span></span></code></pre></div><p>Model the Golomb problem of <code>n</code> marks on the ruler <code>0:L</code>. The <code>modeler</code> argument accepts :raw, and :JuMP (default), which refer respectively to the solver internal model, the MathOptInterface model, and the JuMP model.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/golomb.jl#L47-L51" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",M,[i("summary",null,[s[44]||(s[44]=i("a",{id:"ConstraintModels.magic_square-Tuple{Any}",href:"#ConstraintModels.magic_square-Tuple{Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.magic_square")],-1)),s[45]||(s[45]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[46]||(s[46]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">magic_square</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n; modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a model for the magic square problem of order <code>n</code>. The <code>modeler</code> argument accepts :JuMP (default), which refer to the solver the JuMP model.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/magic_square.jl#L19-L23" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",T,[i("summary",null,[s[47]||(s[47]=i("a",{id:"ConstraintModels.mincut-Tuple{Any}",href:"#ConstraintModels.mincut-Tuple{Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.mincut")],-1)),s[48]||(s[48]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[49]||(s[49]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mincut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(graph; source, sink, interdiction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the minimum cut of a graph.</p><p><strong>Arguments:</strong></p><ul><li><p><code>graph</code>: Any matrix &lt;: AbstractMatrix that describes the capacities of the graph</p></li><li><p><code>source</code>: Id of the source node; must be set</p></li><li><p><code>sink</code>: Id of the sink node; must be set</p></li><li><p><code>interdiction</code>: indicates the number of forbidden links</p></li><li><p><code>modeler</code>: Default to <code>:JuMP</code>.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/cut.jl#L43-L54" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",A,[i("summary",null,[s[50]||(s[50]=i("a",{id:"ConstraintModels.n_queens-Tuple{Any}",href:"#ConstraintModels.n_queens-Tuple{Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.n_queens")],-1)),s[51]||(s[51]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[52]||(s[52]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n_queens</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n; modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a model for the n-queens problem with <code>n</code> queens. The <code>modeler</code> argument accepts :JuMP (default), which refer to the JuMP model.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/n_queens.jl#L16-L20" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",D,[i("summary",null,[s[53]||(s[53]=i("a",{id:"ConstraintModels.qap-Tuple{Any, Any, Any}",href:"#ConstraintModels.qap-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.qap")],-1)),s[54]||(s[54]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">qap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, weigths, distances; modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Modelize an instance of the Quadractic Assignment Problem with</p><ul><li><p><code>n</code>: number of both facilities and locations</p></li><li><p><code>weights</code>: <code>Matrix</code> of the weights of each pair of facilities</p></li><li><p><code>distances</code>: <code>Matrix</code> of distances between locations</p></li><li><p><code>modeler</code>: Default to <code>:JuMP</code>. No other modeler available for now.</p></li></ul><p><strong>From Wikipedia</strong></p><p>There are a set of <code>n</code> facilities and a set of <code>n</code> locations. For each pair of locations, a distance is specified and for each pair of facilities a <code>weight</code> or flow is specified (e.g., the amount of supplies transported between the two facilities). The problem is to assign all facilities to different locations with the goal of minimizing the sum of the <code>distances</code> multiplied by the corresponding flows.</p><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/assignment.jl#L14-L25" target="_blank" rel="noreferrer">source</a></p>',6))]),i("details",x,[i("summary",null,[s[56]||(s[56]=i("a",{id:"ConstraintModels.sudoku-Tuple{Any}",href:"#ConstraintModels.sudoku-Tuple{Any}"},[i("span",{class:"jlbinding"},"ConstraintModels.sudoku")],-1)),s[57]||(s[57]=a()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[58]||(s[58]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sudoku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n; start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dictionary{Int, Int}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), modeler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :JuMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a model for the sudoku problem of domain <code>1:n²</code> with optional starting values. The <code>modeler</code> argument accepts :raw, :MOI, and :JuMP (default), which refer respectively to the solver internal model, the MathOptInterface model, and the JuMP model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construct a JuMP model \`m\` and its associated matrix \`grid\` for sudoku 9×9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sudoku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Same with a starting instance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m, grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sudoku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run the solver</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">optimize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Retrieve and display the values</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">solution </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(grid)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solution, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:sudoku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintModels.jl/blob/v0.3.0/src/sudoku.jl#L90-L119" target="_blank" rel="noreferrer">source</a></p>`,4))])])}const O=h(k,[["render",Q]]);export{P as __pageData,O as default};
