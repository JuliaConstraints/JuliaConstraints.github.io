import{_ as n,c as o,j as i,a,G as e,a5 as t,B as r,o as p}from"./chunks/framework.CJakPlgM.js";const sa=JSON.parse('{"title":"LocalSearchSolvers.jl","description":"","frontmatter":{},"headers":[],"relativePath":"solvers/60_local_search_solvers.md","filePath":"solvers/60_local_search_solvers.md","lastUpdated":null}'),h={name:"solvers/60_local_search_solvers.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""},_s={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},Os={class:"jldocstring custom-block",open:""},Js={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},Us={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},Vs={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},Ps={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},$s={class:"jldocstring custom-block",open:""},Ws={class:"jldocstring custom-block",open:""},Hs={class:"jldocstring custom-block",open:""},Ks={class:"jldocstring custom-block",open:""},Qs={class:"jldocstring custom-block",open:""},Xs={class:"jldocstring custom-block",open:""},Ys={class:"jldocstring custom-block",open:""},Zs={class:"jldocstring custom-block",open:""},si={class:"jldocstring custom-block",open:""},ii={class:"jldocstring custom-block",open:""},ai={class:"jldocstring custom-block",open:""},li={class:"jldocstring custom-block",open:""},ei={class:"jldocstring custom-block",open:""},ti={class:"jldocstring custom-block",open:""},ni={class:"jldocstring custom-block",open:""},oi={class:"jldocstring custom-block",open:""},ri={class:"jldocstring custom-block",open:""},pi={class:"jldocstring custom-block",open:""},hi={class:"jldocstring custom-block",open:""},di={class:"jldocstring custom-block",open:""},ki={class:"jldocstring custom-block",open:""},ci={class:"jldocstring custom-block",open:""},gi={class:"jldocstring custom-block",open:""},ui={class:"jldocstring custom-block",open:""},bi={class:"jldocstring custom-block",open:""},yi={class:"jldocstring custom-block",open:""},vi={class:"jldocstring custom-block",open:""},Si={class:"jldocstring custom-block",open:""},Ei={class:"jldocstring custom-block",open:""},mi={class:"jldocstring custom-block",open:""},ji={class:"jldocstring custom-block",open:""},Ci={class:"jldocstring custom-block",open:""},Fi={class:"jldocstring custom-block",open:""},Li={class:"jldocstring custom-block",open:""},fi={class:"jldocstring custom-block",open:""},Ai={class:"jldocstring custom-block",open:""},Mi={class:"jldocstring custom-block",open:""},_i={class:"jldocstring custom-block",open:""},Ti={class:"jldocstring custom-block",open:""},xi={class:"jldocstring custom-block",open:""},Di={class:"jldocstring custom-block",open:""},Bi={class:"jldocstring custom-block",open:""},Oi={class:"jldocstring custom-block",open:""},Ji={class:"jldocstring custom-block",open:""},wi={class:"jldocstring custom-block",open:""},Ii={class:"jldocstring custom-block",open:""},Ui={class:"jldocstring custom-block",open:""},Ri={class:"jldocstring custom-block",open:""},zi={class:"jldocstring custom-block",open:""},Ni={class:"jldocstring custom-block",open:""},Vi={class:"jldocstring custom-block",open:""},Gi={class:"jldocstring custom-block",open:""},Pi={class:"jldocstring custom-block",open:""},qi={class:"jldocstring custom-block",open:""},$i={class:"jldocstring custom-block",open:""};function Wi(Hi,s,Ki,Qi,Xi,Yi){const l=r("Badge");return p(),o("div",null,[s[433]||(s[433]=i("h1",{id:"localsearchsolvers-jl",tabindex:"-1"},[a("LocalSearchSolvers.jl "),i("a",{class:"header-anchor",href:"#localsearchsolvers-jl","aria-label":'Permalink to "LocalSearchSolvers.jl"'},"â€‹")],-1)),s[434]||(s[434]=i("p",null,[a("Documentation for "),i("code",null,"LocalSearchSolvers.jl"),a(".")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"LocalSearchSolvers.AbstractSolver",href:"#LocalSearchSolvers.AbstractSolver"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.AbstractSolver")],-1)),s[1]||(s[1]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractSolver</span></span></code></pre></div><p>Abstract type to encapsulate the different solver types such as <code>Solver</code> or <code>_SubSolver</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",k,[i("summary",null,[s[3]||(s[3]=i("a",{id:"LocalSearchSolvers.Constraint",href:"#LocalSearchSolvers.Constraint"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.Constraint")],-1)),s[4]||(s[4]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Constraint{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Structure to store an error function and the variables it constrains.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",c,[i("summary",null,[s[6]||(s[6]=i("a",{id:"LocalSearchSolvers.LeadSolver",href:"#LocalSearchSolvers.LeadSolver"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.LeadSolver")],-1)),s[7]||(s[7]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LeadSolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MetaSolver</span></span></code></pre></div><p>Solver managed remotely by a MainSolver. Can manage its own set of local sub solvers.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/lead.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",g,[i("summary",null,[s[9]||(s[9]=i("a",{id:"LocalSearchSolvers.MainSolver",href:"#LocalSearchSolvers.MainSolver"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.MainSolver")],-1)),s[10]||(s[10]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MainSolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractSolver</span></span></code></pre></div><p>Main solver. Handle the solving of a model, and optional multithreaded and/or distributed subsolvers.</p><p><strong>Arguments:</strong></p><ul><li><p><code>model::Model</code>: A formal description of the targeted problem</p></li><li><p><code>state::_State</code>: An internal state to store the info necessary to a solving run</p></li><li><p><code>options::Options</code>: User options for this solver</p></li><li><p><code>subs::Vector{_SubSolver}</code>: Optional subsolvers</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/main.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",u,[i("summary",null,[s[12]||(s[12]=i("a",{id:"LocalSearchSolvers.MetaSolver",href:"#LocalSearchSolvers.MetaSolver"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.MetaSolver")],-1)),s[13]||(s[13]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=i("p",null,"Abstract type to encapsulate all solver types that manages other solvers.",-1)),s[15]||(s[15]=i("p",null,[i("a",{href:"https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/meta.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",b,[i("summary",null,[s[16]||(s[16]=i("a",{id:"LocalSearchSolvers.Objective",href:"#LocalSearchSolvers.Objective"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.Objective")],-1)),s[17]||(s[17]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[18]||(s[18]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Objective{F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A structure to handle objectives in a solver. `struct Objective{F &lt;: Function} name::String f::F end``</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/objective.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",y,[i("summary",null,[s[19]||(s[19]=i("a",{id:"LocalSearchSolvers.Objective-Union{Tuple{F2}, Tuple{Any, LocalSearchSolvers.Objective{F2}}} where F2<:Function",href:"#LocalSearchSolvers.Objective-Union{Tuple{F2}, Tuple{Any, LocalSearchSolvers.Objective{F2}}} where F2<:Function"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.Objective")],-1)),s[20]||(s[20]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[21]||(s[21]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(F, o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Objective{F2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {F2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Constructor used in specializing a solver. Should never be called externally.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/objective.jl#L16-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",v,[i("summary",null,[s[22]||(s[22]=i("a",{id:"LocalSearchSolvers.Options",href:"#LocalSearchSolvers.Options"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.Options")],-1)),s[23]||(s[23]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[24]||(s[24]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Arguments:</strong></p><ul><li><p><code>dynamic::Bool</code>: is the model dynamic?</p></li><li><p><code>iteration::Union{Int, Float64}</code>: limit on the number of iterations</p></li><li><p><code>print_level::Symbol</code>: verbosity to choose among <code>:silent</code>, <code>:minimal</code>, <code>:partial</code>, <code>:verbose</code></p></li><li><p><code>solutions::Int</code>: number of solutions to return</p></li><li><p><code>specialize::Bool</code>: should the types of the model be specialized or not. Usually yes for static problems. For dynamic in depends if the user intend to introduce new types. The specialized model is about 10% faster.</p></li><li><p><code>tabu_time::Int</code>: DESCRIPTION</p></li><li><p><code>tabu_local::Int</code>: DESCRIPTION</p></li><li><p><code>tabu_delta::Float64</code>: DESCRIPTION</p></li><li><p><code>threads::Int</code>: Number of threads to use</p></li><li><p><code>time_limit::Float64</code>: time limit in seconds</p></li><li><p>\`function Options(; dynamic = false, iteration = 10000, print_level = :minimal, solutions = 1, specialize = !dynamic, tabu_time = 0, tabu_local = 0, tabu_delta = 0.0, threads = typemax(0), time_limit = Inf)</p></li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Setting options in JuMP syntax: print_level, time_limit, iteration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CBLS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optimizer)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_optimizer_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iteration&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_optimizer_attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;print_level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:verbose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_time_limit_sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L8-L30" target="_blank" rel="noreferrer">source</a></p>`,5))]),i("details",S,[i("summary",null,[s[25]||(s[25]=i("a",{id:"LocalSearchSolvers.Variable",href:"#LocalSearchSolvers.Variable"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.Variable")],-1)),s[26]||(s[26]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Variable{D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A structure containing the necessary information for a solver&#39;s variables: <code>name</code>, <code>domain</code>, and <code>constraints</code> it belongs.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>struct Variable{D &lt;: AbstractDomain}</span></span>
<span class="line"><span>    domain::D</span></span>
<span class="line"><span>    constraints::Indices{Int}</span></span>
<span class="line"><span>end</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",E,[i("summary",null,[s[28]||(s[28]=i("a",{id:"LocalSearchSolvers._Model",href:"#LocalSearchSolvers._Model"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._Model")],-1)),s[29]||(s[29]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[30]||(s[30]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_Model{V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Variable{&lt;:AbstractDomain}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,C </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Constraint{&lt;:Function}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,O </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Objective{&lt;:Function}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A struct to model a problem as a set of variables, domains, constraints, and objectives.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>struct _Model{V &lt;: Variable{&lt;:AbstractDomain},C &lt;: Constraint{&lt;:Function},O &lt;: Objective{&lt;:Function}}</span></span>
<span class="line"><span>    variables::Dictionary{Int,V}</span></span>
<span class="line"><span>    constraints::Dictionary{Int,C}</span></span>
<span class="line"><span>    objectives::Dictionary{Int,O}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # counter to add new variables: vars, cons, objs</span></span>
<span class="line"><span>    max_vars::Ref{Int}</span></span>
<span class="line"><span>    max_cons::Ref{Int}</span></span>
<span class="line"><span>    max_objs::Ref{Int}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # Bool to indicate if the _Model instance has been specialized (relatively to types)</span></span>
<span class="line"><span>    specialized::Ref{Bool}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # Symbol to indicate the kind of model for specialized methods such as pretty printing</span></span>
<span class="line"><span>    kind::Symbol</span></span>
<span class="line"><span>end</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L1-L22" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",m,[i("summary",null,[s[31]||(s[31]=i("a",{id:"LocalSearchSolvers._State",href:"#LocalSearchSolvers._State"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._State")],-1)),s[32]||(s[32]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[33]||(s[33]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GeneralState{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A mutable structure to store the general state of a solver. All methods applied to <code>GeneralState</code> are forwarded to <code>S &lt;: AbstractSolver</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mutable struct GeneralState{T &lt;: Number} &lt;: AbstractState</span></span>
<span class="line"><span>    configuration::Configuration{T}</span></span>
<span class="line"><span>    cons_costs::Dictionary{Int, Float64}</span></span>
<span class="line"><span>    last_improvement::Int</span></span>
<span class="line"><span>    tabu::Dictionary{Int, Int}</span></span>
<span class="line"><span>    vars_costs::Dictionary{Int, Float64}</span></span>
<span class="line"><span>end</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L5-L17" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",j,[i("summary",null,[s[34]||(s[34]=i("a",{id:"LocalSearchSolvers._SubSolver",href:"#LocalSearchSolvers._SubSolver"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._SubSolver")],-1)),s[35]||(s[35]=a()),e(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[36]||(s[36]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_SubSolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractSolver</span></span></code></pre></div><p>An internal solver type called by MetaSolver when multithreading is enabled.</p><p><strong>Arguments:</strong></p><ul><li><p><code>id::Int</code>: subsolver id for debugging</p></li><li><p><code>model::Model</code>: a ref to the model of the main solver</p></li><li><p><code>state::_State</code>: a <code>deepcopy</code> of the main solver that evolves independently</p></li><li><p><code>options::Options</code>: a ref to the options of the main solver</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/sub.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",C,[i("summary",null,[s[37]||(s[37]=i("a",{id:"Base.empty!-Tuple{LocalSearchSolvers.MainSolver}",href:"#Base.empty!-Tuple{LocalSearchSolvers.MainSolver}"},[i("span",{class:"jlbinding"},"Base.empty!")],-1)),s[38]||(s[38]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">empty!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Solver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/main.jl#L49-L52" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",F,[i("summary",null,[s[40]||(s[40]=i("a",{id:"Base.empty!-Tuple{LocalSearchSolvers._Model}",href:"#Base.empty!-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"Base.empty!")],-1)),s[41]||(s[41]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[42]||(s[42]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">empty!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L435-L439" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",L,[i("summary",null,[s[43]||(s[43]=i("a",{id:"Base.in-Tuple{Int64, LocalSearchSolvers.Constraint}",href:"#Base.in-Tuple{Int64, LocalSearchSolvers.Constraint}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[44]||(s[44]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[45]||(s[45]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">var</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> âˆˆ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L43-L45" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",f,[i("summary",null,[s[46]||(s[46]=i("a",{id:"Base.in-Tuple{LocalSearchSolvers.Variable, Any}",href:"#Base.in-Tuple{LocalSearchSolvers.Variable, Any}"},[i("span",{class:"jlbinding"},"Base.in")],-1)),s[47]||(s[47]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[48]||(s[48]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> âˆˆ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> constraint</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">âˆˆ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span></span></code></pre></div><p>Check if a variable <code>x</code> is restricted by a <code>constraint::Int</code>, or if a <code>value</code> belongs to the domain of <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L52-L56" target="_blank" rel="noreferrer">source</a></p>`,3))]),i("details",A,[i("summary",null,[s[49]||(s[49]=i("a",{id:"LocalSearchSolvers._add!-Tuple{LocalSearchSolvers.Constraint, Any}",href:"#LocalSearchSolvers._add!-Tuple{LocalSearchSolvers.Constraint, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._add!")],-1)),s[50]||(s[50]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[51]||(s[51]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Add the variable of indice <code>x</code> to <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",M,[i("summary",null,[s[52]||(s[52]=i("a",{id:"LocalSearchSolvers._add_to_constraint!-Tuple{LocalSearchSolvers.Variable, Any}",href:"#LocalSearchSolvers._add_to_constraint!-Tuple{LocalSearchSolvers.Variable, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._add_to_constraint!")],-1)),s[53]||(s[53]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[54]||(s[54]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_add_to_constraint!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id)</span></span></code></pre></div><p>Add a constraint <code>id</code> to the list of constraints of <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L34-L37" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",_,[i("summary",null,[s[55]||(s[55]=i("a",{id:"LocalSearchSolvers._check_restart-Tuple{Any}",href:"#LocalSearchSolvers._check_restart-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._check_restart")],-1)),s[56]||(s[56]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[57]||(s[57]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_check_restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span></code></pre></div><p>Check if a restart of <code>s</code> is necessary. If <code>s</code> has subsolvers, this check is independent for all of them.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L268-L272" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",T,[i("summary",null,[s[58]||(s[58]=i("a",{id:"LocalSearchSolvers._check_subs-Tuple{LocalSearchSolvers.AbstractSolver}",href:"#LocalSearchSolvers._check_subs-Tuple{LocalSearchSolvers.AbstractSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._check_subs")],-1)),s[59]||(s[59]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[60]||(s[60]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_check_subs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span></code></pre></div><p>Check if any subsolver of a main solver <code>s</code>, for</p><ul><li><p><em>Satisfaction</em>, has a solution, then return it, resume the run otherwise</p></li><li><p><em>Optimization</em>, has a better solution, then assign it to its internal state</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L393-L399" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",x,[i("summary",null,[s[61]||(s[61]=i("a",{id:"LocalSearchSolvers._compute!-Tuple{Any}",href:"#LocalSearchSolvers._compute!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._compute!")],-1)),s[62]||(s[62]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s; o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cons_lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Indices{Int}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Compute the objective <code>o</code>&#39;s value if <code>s</code> is satisfied and return the current <code>error</code>.</p><p><strong>Arguments:</strong></p><ul><li><p><code>s</code>: a solver</p></li><li><p><code>o</code>: targeted objective</p></li><li><p><code>cons_lst</code>: list of targeted constraints, if empty compute for the whole set</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L165-L174" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",D,[i("summary",null,[s[64]||(s[64]=i("a",{id:"LocalSearchSolvers._compute_cost!-Tuple{Any, Any, Any}",href:"#LocalSearchSolvers._compute_cost!-Tuple{Any, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._compute_cost!")],-1)),s[65]||(s[65]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[66]||(s[66]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute_cost!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, ind, c)</span></span></code></pre></div><p>Compute the cost of constraint <code>c</code> with index <code>ind</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L121-L125" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",B,[i("summary",null,[s[67]||(s[67]=i("a",{id:"LocalSearchSolvers._compute_costs!-Tuple{Any}",href:"#LocalSearchSolvers._compute_costs!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._compute_costs!")],-1)),s[68]||(s[68]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[69]||(s[69]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute_costs!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s; cons_lst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Indices{Int}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Indices{Int}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Compute the cost of constraints <code>c</code> in <code>cons_lst</code>. If <code>cons_lst</code> is empty, compute the cost for all the constraints in <code>s</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L133-L137" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",O,[i("summary",null,[s[70]||(s[70]=i("a",{id:"LocalSearchSolvers._compute_objective!-Tuple{Any, LocalSearchSolvers.Objective}",href:"#LocalSearchSolvers._compute_objective!-Tuple{Any, LocalSearchSolvers.Objective}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._compute_objective!")],-1)),s[71]||(s[71]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[72]||(s[72]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute_objective!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute_objective!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, o </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the objective <code>o</code>&#39;s value.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L150-L155" target="_blank" rel="noreferrer">source</a></p>`,3))]),i("details",J,[i("summary",null,[s[73]||(s[73]=i("a",{id:"LocalSearchSolvers._cons_cost!-Tuple{LocalSearchSolvers._State, Any, Any}",href:"#LocalSearchSolvers._cons_cost!-Tuple{LocalSearchSolvers._State, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._cons_cost!")],-1)),s[74]||(s[74]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_cons_cost!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c, cost) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the <code>cost</code> of constraint <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L117-L120" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",w,[i("summary",null,[s[76]||(s[76]=i("a",{id:"LocalSearchSolvers._cons_cost-Tuple{LocalSearchSolvers._State, Any}",href:"#LocalSearchSolvers._cons_cost-Tuple{LocalSearchSolvers._State, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._cons_cost")],-1)),s[77]||(s[77]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[78]||(s[78]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_cons_cost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Return the cost of constraint <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L99-L102" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",I,[i("summary",null,[s[79]||(s[79]=i("a",{id:"LocalSearchSolvers._cons_costs!-Tuple{LocalSearchSolvers._State, Any}",href:"#LocalSearchSolvers._cons_costs!-Tuple{LocalSearchSolvers._State, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._cons_costs!")],-1)),s[80]||(s[80]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[81]||(s[81]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_cons_costs!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, costs) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the constraints costs.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L69-L72" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",U,[i("summary",null,[s[82]||(s[82]=i("a",{id:"LocalSearchSolvers._cons_costs-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._cons_costs-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._cons_costs")],-1)),s[83]||(s[83]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[84]||(s[84]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_cons_costs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Access the constraints costs.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L45-L48" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",R,[i("summary",null,[s[85]||(s[85]=i("a",{id:"LocalSearchSolvers._constriction-Tuple{LocalSearchSolvers.Variable}",href:"#LocalSearchSolvers._constriction-Tuple{LocalSearchSolvers.Variable}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._constriction")],-1)),s[86]||(s[86]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_constriction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <code>cosntriction</code> of <code>x</code>, i.e. the number of constraints restricting <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L46-L49" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",z,[i("summary",null,[s[88]||(s[88]=i("a",{id:"LocalSearchSolvers._delete!-Tuple{LocalSearchSolvers.Constraint, Any}",href:"#LocalSearchSolvers._delete!-Tuple{LocalSearchSolvers.Constraint, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._delete!")],-1)),s[89]||(s[89]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[90]||(s[90]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_delete!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Delete <code>x</code> from <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",N,[i("summary",null,[s[91]||(s[91]=i("a",{id:"LocalSearchSolvers._delete_from_constraint!-Tuple{LocalSearchSolvers.Variable, Any}",href:"#LocalSearchSolvers._delete_from_constraint!-Tuple{LocalSearchSolvers.Variable, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._delete_from_constraint!")],-1)),s[92]||(s[92]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[93]||(s[93]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_delete_from_constraint!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id)</span></span></code></pre></div><p>Delete a constraint <code>id</code> from the list of constraints of <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L40-L43" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",V,[i("summary",null,[s[94]||(s[94]=i("a",{id:"LocalSearchSolvers._draw!-Tuple{Any}",href:"#LocalSearchSolvers._draw!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._draw!")],-1)),s[95]||(s[95]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[96]||(s[96]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_draw!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span></code></pre></div><p>Draw a random (re-)starting configuration.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L113-L116" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",G,[i("summary",null,[s[97]||(s[97]=i("a",{id:"LocalSearchSolvers._dynamic!-Tuple{Any, Any}",href:"#LocalSearchSolvers._dynamic!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._dynamic!")],-1)),s[98]||(s[98]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[99]||(s[99]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_dynamic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, dynamic) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L114-L118" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",P,[i("summary",null,[s[100]||(s[100]=i("a",{id:"LocalSearchSolvers._dynamic-Tuple{Any}",href:"#LocalSearchSolvers._dynamic-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._dynamic")],-1)),s[101]||(s[101]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[102]||(s[102]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_dynamic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L107-L111" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",q,[i("summary",null,[s[103]||(s[103]=i("a",{id:"LocalSearchSolvers._find_rand_argmax-Tuple{Dictionaries.DictionaryView}",href:"#LocalSearchSolvers._find_rand_argmax-Tuple{Dictionaries.DictionaryView}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._find_rand_argmax")],-1)),s[104]||(s[104]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[105]||(s[105]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_find_rand_argmax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DictionaryView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute <code>argmax</code> of <code>d</code> and select one element randomly.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/utils.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",$,[i("summary",null,[s[106]||(s[106]=i("a",{id:"LocalSearchSolvers._get_constraints-Tuple{LocalSearchSolvers.Variable}",href:"#LocalSearchSolvers._get_constraints-Tuple{LocalSearchSolvers.Variable}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._get_constraints")],-1)),s[107]||(s[107]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[108]||(s[108]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_get_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Access the list of <code>constraints</code> of <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L28-L31" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",W,[i("summary",null,[s[109]||(s[109]=i("a",{id:"LocalSearchSolvers._get_vars-Tuple{LocalSearchSolvers.Constraint}",href:"#LocalSearchSolvers._get_vars-Tuple{LocalSearchSolvers.Constraint}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._get_vars")],-1)),s[110]||(s[110]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[111]||(s[111]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_get_vars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the variables constrained by <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",H,[i("summary",null,[s[112]||(s[112]=i("a",{id:"LocalSearchSolvers._inc_cons!-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._inc_cons!-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._inc_cons!")],-1)),s[113]||(s[113]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[114]||(s[114]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_inc_vars!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Increment the maximum constraint id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L102-L105" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",K,[i("summary",null,[s[115]||(s[115]=i("a",{id:"LocalSearchSolvers._inc_objs!-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._inc_objs!-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._inc_objs!")],-1)),s[116]||(s[116]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[117]||(s[117]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_inc_vars!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Increment the maximum objective id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L108-L111" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Q,[i("summary",null,[s[118]||(s[118]=i("a",{id:"LocalSearchSolvers._inc_vars!-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._inc_vars!-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._inc_vars!")],-1)),s[119]||(s[119]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[120]||(s[120]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_inc_vars!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Increment the maximum variable id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L96-L99" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",X,[i("summary",null,[s[121]||(s[121]=i("a",{id:"LocalSearchSolvers._info_path!-Tuple{Any, Any}",href:"#LocalSearchSolvers._info_path!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._info_path!")],-1)),s[122]||(s[122]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[123]||(s[123]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_info_path!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, iterations) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L128-L132" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Y,[i("summary",null,[s[124]||(s[124]=i("a",{id:"LocalSearchSolvers._info_path-Tuple{Any}",href:"#LocalSearchSolvers._info_path-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._info_path")],-1)),s[125]||(s[125]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[126]||(s[126]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_info_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, path)</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L121-L125" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Z,[i("summary",null,[s[127]||(s[127]=i("a",{id:"LocalSearchSolvers._is_empty-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._is_empty-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._is_empty")],-1)),s[128]||(s[128]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[129]||(s[129]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_is_empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L383-L387" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ss,[i("summary",null,[s[130]||(s[130]=i("a",{id:"LocalSearchSolvers._iteration!-Tuple{Any, Any}",href:"#LocalSearchSolvers._iteration!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._iteration!")],-1)),s[131]||(s[131]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[132]||(s[132]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_iteration!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, iterations) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L142-L146" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",is,[i("summary",null,[s[133]||(s[133]=i("a",{id:"LocalSearchSolvers._iteration-Tuple{Any}",href:"#LocalSearchSolvers._iteration-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._iteration")],-1)),s[134]||(s[134]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[135]||(s[135]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_iteration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L135-L139" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",as,[i("summary",null,[s[136]||(s[136]=i("a",{id:"LocalSearchSolvers._length-Tuple{LocalSearchSolvers.Constraint}",href:"#LocalSearchSolvers._length-Tuple{LocalSearchSolvers.Constraint}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._length")],-1)),s[137]||(s[137]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[138]||(s[138]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of constrained variables by <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L36-L40" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ls,[i("summary",null,[s[139]||(s[139]=i("a",{id:"LocalSearchSolvers._max_cons-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._max_cons-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._max_cons")],-1)),s[140]||(s[140]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[141]||(s[141]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_max_cons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the maximum constraint id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L82-L85" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",es,[i("summary",null,[s[142]||(s[142]=i("a",{id:"LocalSearchSolvers._max_objs-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._max_objs-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._max_objs")],-1)),s[143]||(s[143]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[144]||(s[144]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_max_objs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the maximum objective id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L88-L91" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ts,[i("summary",null,[s[145]||(s[145]=i("a",{id:"LocalSearchSolvers._max_vars-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers._max_vars-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._max_vars")],-1)),s[146]||(s[146]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[147]||(s[147]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_max_vars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the maximum variable id that has been attributed to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L76-L79" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ns,[i("summary",null,[s[148]||(s[148]=i("a",{id:"LocalSearchSolvers._move!",href:"#LocalSearchSolvers._move!"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._move!")],-1)),s[149]||(s[149]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[150]||(s[150]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_move!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform an improving move in <code>x</code> neighbourhood if possible.</p><p><strong>Arguments:</strong></p><ul><li><p><code>s</code>: a solver of type S &lt;: AbstractSolver</p></li><li><p><code>x</code>: selected variable id</p></li><li><p><code>dim</code>: describe the dimension of the considered neighbourhood</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L288-L297" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",os,[i("summary",null,[s[151]||(s[151]=i("a",{id:"LocalSearchSolvers._neighbours",href:"#LocalSearchSolvers._neighbours"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._neighbours")],-1)),s[152]||(s[152]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[153]||(s[153]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_neighbours</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, x, dim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>s</code>: DESCRIPTION</p></li><li><p><code>x</code>: DESCRIPTION</p></li><li><p><code>dim</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L185-L194" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",rs,[i("summary",null,[s[154]||(s[154]=i("a",{id:"LocalSearchSolvers._optimizing!-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._optimizing!-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._optimizing!")],-1)),s[155]||(s[155]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[156]||(s[156]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_optimizing!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the solver <code>optimizing</code> status to <code>true</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L87-L90" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ps,[i("summary",null,[s[157]||(s[157]=i("a",{id:"LocalSearchSolvers._optimizing-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._optimizing-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._optimizing")],-1)),s[158]||(s[158]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[159]||(s[159]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_optimizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Check if <code>s</code> is in an optimizing state.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L63-L66" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",hs,[i("summary",null,[s[160]||(s[160]=i("a",{id:"LocalSearchSolvers._print_level!-Tuple{Any, Any}",href:"#LocalSearchSolvers._print_level!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._print_level!")],-1)),s[161]||(s[161]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[162]||(s[162]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_print_level!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, level) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L159-L163" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ds,[i("summary",null,[s[163]||(s[163]=i("a",{id:"LocalSearchSolvers._print_level-Tuple{Any}",href:"#LocalSearchSolvers._print_level-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._print_level")],-1)),s[164]||(s[164]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[165]||(s[165]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_print_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L152-L156" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ks,[i("summary",null,[s[166]||(s[166]=i("a",{id:"LocalSearchSolvers._process_threads_map!-Tuple{Any, AbstractDict}",href:"#LocalSearchSolvers._process_threads_map!-Tuple{Any, AbstractDict}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._process_threads_map!")],-1)),s[167]||(s[167]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[168]||(s[168]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_process_threads_map!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, ptm)</span></span></code></pre></div><p>TBW</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L173-L177" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",cs,[i("summary",null,[s[169]||(s[169]=i("a",{id:"LocalSearchSolvers._process_threads_map-Tuple{Any}",href:"#LocalSearchSolvers._process_threads_map-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._process_threads_map")],-1)),s[170]||(s[170]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[171]||(s[171]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_process_threads_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options)</span></span></code></pre></div><p>TBW</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L166-L170" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",gs,[i("summary",null,[s[172]||(s[172]=i("a",{id:"LocalSearchSolvers._restart!",href:"#LocalSearchSolvers._restart!"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._restart!")],-1)),s[173]||(s[173]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[174]||(s[174]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_restart!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Restart a solver.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L254-L258" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",us,[i("summary",null,[s[175]||(s[175]=i("a",{id:"LocalSearchSolvers._satisfying!-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._satisfying!-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._satisfying!")],-1)),s[176]||(s[176]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[177]||(s[177]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_satisfying!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the solver <code>optimizing</code> status to <code>false</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L93-L96" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",bs,[i("summary",null,[s[178]||(s[178]=i("a",{id:"LocalSearchSolvers._select_worse-Tuple{Any}",href:"#LocalSearchSolvers._select_worse-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._select_worse")],-1)),s[179]||(s[179]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[180]||(s[180]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_select_worse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Within the non-tabu variables, select the one with the worse error .</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L279-L282" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ys,[i("summary",null,[s[181]||(s[181]=i("a",{id:"LocalSearchSolvers._set!-Tuple{LocalSearchSolvers._State, Any, Any}",href:"#LocalSearchSolvers._set!-Tuple{LocalSearchSolvers._State, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._set!")],-1)),s[182]||(s[182]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[183]||(s[183]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_set!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the value of variable <code>x</code> to <code>val</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L135-L138" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",vs,[i("summary",null,[s[184]||(s[184]=i("a",{id:"LocalSearchSolvers._set_domain!-Tuple{LocalSearchSolvers._Model, Any, Any}",href:"#LocalSearchSolvers._set_domain!-Tuple{LocalSearchSolvers._Model, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._set_domain!")],-1)),s[185]||(s[185]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[186]||(s[186]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_set_domain!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, values)</span></span></code></pre></div><p>DOCSTRING</p><p><strong>Arguments:</strong></p><ul><li><p><code>m</code>: DESCRIPTION</p></li><li><p><code>x</code>: DESCRIPTION</p></li><li><p><code>values</code>: DESCRIPTION</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L392-L401" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Ss,[i("summary",null,[s[187]||(s[187]=i("a",{id:"LocalSearchSolvers._solutions!-Tuple{Any, Any}",href:"#LocalSearchSolvers._solutions!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._solutions!")],-1)),s[188]||(s[188]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[189]||(s[189]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_solutions!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, solutions) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L191-L195" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Es,[i("summary",null,[s[190]||(s[190]=i("a",{id:"LocalSearchSolvers._solutions-Tuple{Any}",href:"#LocalSearchSolvers._solutions-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._solutions")],-1)),s[191]||(s[191]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[192]||(s[192]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_solutions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L184-L188" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ms,[i("summary",null,[s[193]||(s[193]=i("a",{id:"LocalSearchSolvers._specialize!-Tuple{Any, Any}",href:"#LocalSearchSolvers._specialize!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._specialize!")],-1)),s[194]||(s[194]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[195]||(s[195]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_specialize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, specialize) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L205-L209" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",js,[i("summary",null,[s[196]||(s[196]=i("a",{id:"LocalSearchSolvers._specialize-Tuple{Any}",href:"#LocalSearchSolvers._specialize-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._specialize")],-1)),s[197]||(s[197]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[198]||(s[198]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_specialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L198-L202" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Cs,[i("summary",null,[s[199]||(s[199]=i("a",{id:"LocalSearchSolvers._step!-Tuple{Any}",href:"#LocalSearchSolvers._step!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._step!")],-1)),s[200]||(s[200]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[201]||(s[201]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_step!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span></code></pre></div><p>Iterate a step of the solver run.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L340-L344" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Fs,[i("summary",null,[s[202]||(s[202]=i("a",{id:"LocalSearchSolvers._swap_value!-Tuple{LocalSearchSolvers._State, Any, Any}",href:"#LocalSearchSolvers._swap_value!-Tuple{LocalSearchSolvers._State, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._swap_value!")],-1)),s[203]||(s[203]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[204]||(s[204]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_set!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, y) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Swap the values of variables <code>x</code> and <code>y</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L141-L144" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ls,[i("summary",null,[s[205]||(s[205]=i("a",{id:"LocalSearchSolvers._tabu_delta!-Tuple{Any, Any}",href:"#LocalSearchSolvers._tabu_delta!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_delta!")],-1)),s[206]||(s[206]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[207]||(s[207]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_delta!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, time) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L247-L251" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",fs,[i("summary",null,[s[208]||(s[208]=i("a",{id:"LocalSearchSolvers._tabu_delta-Tuple{Any}",href:"#LocalSearchSolvers._tabu_delta-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_delta")],-1)),s[209]||(s[209]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[210]||(s[210]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_delta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L240-L244" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",As,[i("summary",null,[s[211]||(s[211]=i("a",{id:"LocalSearchSolvers._tabu_local!-Tuple{Any, Any}",href:"#LocalSearchSolvers._tabu_local!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_local!")],-1)),s[212]||(s[212]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[213]||(s[213]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_local!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, time) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L233-L237" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ms,[i("summary",null,[s[214]||(s[214]=i("a",{id:"LocalSearchSolvers._tabu_local-Tuple{Any}",href:"#LocalSearchSolvers._tabu_local-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_local")],-1)),s[215]||(s[215]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[216]||(s[216]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L226-L230" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",_s,[i("summary",null,[s[217]||(s[217]=i("a",{id:"LocalSearchSolvers._tabu_time!-Tuple{Any, Any}",href:"#LocalSearchSolvers._tabu_time!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_time!")],-1)),s[218]||(s[218]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[219]||(s[219]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_time!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, time) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L219-L223" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ts,[i("summary",null,[s[220]||(s[220]=i("a",{id:"LocalSearchSolvers._tabu_time-Tuple{Any}",href:"#LocalSearchSolvers._tabu_time-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._tabu_time")],-1)),s[221]||(s[221]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[222]||(s[222]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_tabu_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L212-L216" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",xs,[i("summary",null,[s[223]||(s[223]=i("a",{id:"LocalSearchSolvers._threads",href:"#LocalSearchSolvers._threads"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._threads")],-1)),s[224]||(s[224]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[225]||(s[225]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_threads</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L254-L258" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ds,[i("summary",null,[s[226]||(s[226]=i("a",{id:"LocalSearchSolvers._threads!",href:"#LocalSearchSolvers._threads!"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._threads!")],-1)),s[227]||(s[227]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[228]||(s[228]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_threads!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, threads) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L261-L265" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Bs,[i("summary",null,[s[229]||(s[229]=i("a",{id:"LocalSearchSolvers._time_limit!-Tuple{Any, Tuple{Bool, Float64}}",href:"#LocalSearchSolvers._time_limit!-Tuple{Any, Tuple{Bool, Float64}}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._time_limit!")],-1)),s[230]||(s[230]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[231]||(s[231]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_time_limit!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L275-L279" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Os,[i("summary",null,[s[232]||(s[232]=i("a",{id:"LocalSearchSolvers._time_limit-Tuple{Any}",href:"#LocalSearchSolvers._time_limit-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._time_limit")],-1)),s[233]||(s[233]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[234]||(s[234]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_time_limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options)</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L268-L272" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Js,[i("summary",null,[s[235]||(s[235]=i("a",{id:"LocalSearchSolvers._to_union-Tuple{Any}",href:"#LocalSearchSolvers._to_union-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._to_union")],-1)),s[236]||(s[236]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[237]||(s[237]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_to_union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(datatype)</span></span></code></pre></div><p>Make a minimal <code>Union</code> type from a collection of data types.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/utils.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ws,[i("summary",null,[s[238]||(s[238]=i("a",{id:"LocalSearchSolvers._value!-Tuple{LocalSearchSolvers._State, Any, Any}",href:"#LocalSearchSolvers._value!-Tuple{LocalSearchSolvers._State, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._value!")],-1)),s[239]||(s[239]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[240]||(s[240]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_value!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the value of variable <code>x</code> to <code>val</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L129-L132" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Is,[i("summary",null,[s[241]||(s[241]=i("a",{id:"LocalSearchSolvers._value-Tuple{LocalSearchSolvers._State, Any}",href:"#LocalSearchSolvers._value-Tuple{LocalSearchSolvers._State, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._value")],-1)),s[242]||(s[242]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[243]||(s[243]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Return the value of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L111-L114" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Us,[i("summary",null,[s[244]||(s[244]=i("a",{id:"LocalSearchSolvers._values!-Union{Tuple{T}, Tuple{LocalSearchSolvers._State{T}, Any}} where T<:Number",href:"#LocalSearchSolvers._values!-Union{Tuple{T}, Tuple{LocalSearchSolvers._State{T}, Any}} where T<:Number"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._values!")],-1)),s[245]||(s[245]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[246]||(s[246]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_values!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, values) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the variables values.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L81-L84" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Rs,[i("summary",null,[s[247]||(s[247]=i("a",{id:"LocalSearchSolvers._values-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._values-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._values")],-1)),s[248]||(s[248]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[249]||(s[249]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_vars_costs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Access the variables costs.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L57-L60" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",zs,[i("summary",null,[s[250]||(s[250]=i("a",{id:"LocalSearchSolvers._var_cost!-Tuple{LocalSearchSolvers._State, Any, Any}",href:"#LocalSearchSolvers._var_cost!-Tuple{LocalSearchSolvers._State, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._var_cost!")],-1)),s[251]||(s[251]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[252]||(s[252]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_var_cost!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, cost) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the <code>cost</code> of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L123-L126" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ns,[i("summary",null,[s[253]||(s[253]=i("a",{id:"LocalSearchSolvers._var_cost-Tuple{LocalSearchSolvers._State, Any}",href:"#LocalSearchSolvers._var_cost-Tuple{LocalSearchSolvers._State, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._var_cost")],-1)),s[254]||(s[254]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[255]||(s[255]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_var_cost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Return the cost of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L105-L108" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Vs,[i("summary",null,[s[256]||(s[256]=i("a",{id:"LocalSearchSolvers._vars_costs!-Tuple{LocalSearchSolvers._State, Any}",href:"#LocalSearchSolvers._vars_costs!-Tuple{LocalSearchSolvers._State, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._vars_costs!")],-1)),s[257]||(s[257]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[258]||(s[258]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_vars_costs!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, costs) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Set the variables costs.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L75-L78" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Gs,[i("summary",null,[s[259]||(s[259]=i("a",{id:"LocalSearchSolvers._vars_costs-Tuple{LocalSearchSolvers._State}",href:"#LocalSearchSolvers._vars_costs-Tuple{LocalSearchSolvers._State}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._vars_costs")],-1)),s[260]||(s[260]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[261]||(s[261]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_vars_costs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Access the variables costs.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/state.jl#L51-L54" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ps,[i("summary",null,[s[262]||(s[262]=i("a",{id:"LocalSearchSolvers._verbose-Tuple{Any, Any}",href:"#LocalSearchSolvers._verbose-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers._verbose")],-1)),s[263]||(s[263]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[264]||(s[264]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_verbose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(settings, str)</span></span></code></pre></div><p>Temporary logging function. #TODO: use better log instead (LoggingExtra.jl)</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/options.jl#L98-L101" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",qs,[i("summary",null,[s[265]||(s[265]=i("a",{id:"LocalSearchSolvers.add!-Tuple{LocalSearchSolvers._Model, LocalSearchSolvers.Variable}",href:"#LocalSearchSolvers.add!-Tuple{LocalSearchSolvers._Model, LocalSearchSolvers.Variable}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.add!")],-1)),s[266]||(s[266]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[267]||(s[267]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, o) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add a variable <code>x</code>, a constraint <code>c</code>, or an objective <code>o</code> to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L253-L259" target="_blank" rel="noreferrer">source</a></p>`,3))]),i("details",$s,[i("summary",null,[s[268]||(s[268]=i("a",{id:"LocalSearchSolvers.add_value!-Tuple{LocalSearchSolvers._Model, Any, Any}",href:"#LocalSearchSolvers.add_value!-Tuple{LocalSearchSolvers._Model, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.add_value!")],-1)),s[269]||(s[269]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[270]||(s[270]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_value!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add <code>val</code> to <code>x</code> domain.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L241-L244" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ws,[i("summary",null,[s[271]||(s[271]=i("a",{id:"LocalSearchSolvers.add_var_to_cons!-Tuple{LocalSearchSolvers._Model, Any, Any}",href:"#LocalSearchSolvers.add_var_to_cons!-Tuple{LocalSearchSolvers._Model, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.add_var_to_cons!")],-1)),s[272]||(s[272]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[273]||(s[273]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_var_to_cons!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add <code>x</code> to the constraint <code>c</code> list of restricted variables.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L247-L250" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Hs,[i("summary",null,[s[274]||(s[274]=i("a",{id:"LocalSearchSolvers.constraint!-Union{Tuple{V}, Tuple{LocalSearchSolvers._Model, Any, V}} where V<:(AbstractVector{<:Number})",href:"#LocalSearchSolvers.constraint!-Union{Tuple{V}, Tuple{LocalSearchSolvers._Model, Any, V}} where V<:(AbstractVector{<:Number})"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.constraint!")],-1)),s[275]||(s[275]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[276]||(s[276]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, func, vars) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add a constraint with an error function <code>func</code> defined over variables <code>vars</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L285-L288" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ks,[i("summary",null,[s[277]||(s[277]=i("a",{id:"LocalSearchSolvers.constraint-Tuple{Any, Any}",href:"#LocalSearchSolvers.constraint-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.constraint")],-1)),s[278]||(s[278]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[279]||(s[279]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, vars)</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/constraint.jl#L48-L52" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Qs,[i("summary",null,[s[280]||(s[280]=i("a",{id:"LocalSearchSolvers.constriction-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.constriction-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.constriction")],-1)),s[281]||(s[281]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[282]||(s[282]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constriction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the constriction of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L223-L226" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Xs,[i("summary",null,[s[283]||(s[283]=i("a",{id:"LocalSearchSolvers.decay_tabu!-Tuple{Any}",href:"#LocalSearchSolvers.decay_tabu!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.decay_tabu!")],-1)),s[284]||(s[284]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[285]||(s[285]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_decay_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Decay the tabu list.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L77-L80" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ys,[i("summary",null,[s[286]||(s[286]=i("a",{id:"LocalSearchSolvers.decrease_tabu!-Tuple{Any, Any}",href:"#LocalSearchSolvers.decrease_tabu!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.decrease_tabu!")],-1)),s[287]||(s[287]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[288]||(s[288]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_decrease_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Decrement the tabu value of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L44-L47" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Zs,[i("summary",null,[s[289]||(s[289]=i("a",{id:"LocalSearchSolvers.delete_tabu!-Tuple{Any, Any}",href:"#LocalSearchSolvers.delete_tabu!-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.delete_tabu!")],-1)),s[290]||(s[290]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[291]||(s[291]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_delete_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Delete the tabu entry of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L50-L53" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",si,[i("summary",null,[s[292]||(s[292]=i("a",{id:"LocalSearchSolvers.delete_value!-Tuple{LocalSearchSolvers._Model, Any, Any}",href:"#LocalSearchSolvers.delete_value!-Tuple{LocalSearchSolvers._Model, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.delete_value!")],-1)),s[293]||(s[293]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[294]||(s[294]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delete_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, val) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Delete <code>val</code> from <code>x</code> domain.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L229-L232" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ii,[i("summary",null,[s[295]||(s[295]=i("a",{id:"LocalSearchSolvers.delete_var_from_cons!-Tuple{LocalSearchSolvers._Model, Any, Any}",href:"#LocalSearchSolvers.delete_var_from_cons!-Tuple{LocalSearchSolvers._Model, Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.delete_var_from_cons!")],-1)),s[296]||(s[296]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[297]||(s[297]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delete_var_from_cons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Delete <code>x</code> from the constraint <code>c</code> list of restricted variables.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L235-L238" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ai,[i("summary",null,[s[298]||(s[298]=i("a",{id:"LocalSearchSolvers.describe-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.describe-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.describe")],-1)),s[299]||(s[299]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[300]||(s[300]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Describe the model.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L302-L305" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",li,[i("summary",null,[s[301]||(s[301]=i("a",{id:"LocalSearchSolvers.domain_size-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.domain_size-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.domain_size")],-1)),s[302]||(s[302]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[303]||(s[303]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">domain_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L421-L425" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ei,[i("summary",null,[s[304]||(s[304]=i("a",{id:"LocalSearchSolvers.draw-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.draw-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.draw")],-1)),s[305]||(s[305]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[306]||(s[306]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Draw a random value of <code>x</code> domain.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L216-L219" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ti,[i("summary",null,[s[307]||(s[307]=i("a",{id:"LocalSearchSolvers.empty_tabu!-Tuple{Any}",href:"#LocalSearchSolvers.empty_tabu!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.empty_tabu!")],-1)),s[308]||(s[308]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[309]||(s[309]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_empty_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Empty the tabu list.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L56-L59" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ni,[i("summary",null,[s[310]||(s[310]=i("a",{id:"LocalSearchSolvers.get_cons_from_var-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_cons_from_var-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_cons_from_var")],-1)),s[311]||(s[311]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[312]||(s[312]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_cons_from_var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the constraints restricting variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L168-L171" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",oi,[i("summary",null,[s[313]||(s[313]=i("a",{id:"LocalSearchSolvers.get_constraint-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_constraint-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_constraint")],-1)),s[314]||(s[314]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[315]||(s[315]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the constraint <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L144-L147" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ri,[i("summary",null,[s[316]||(s[316]=i("a",{id:"LocalSearchSolvers.get_constraints-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.get_constraints-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_constraints")],-1)),s[317]||(s[317]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[318]||(s[318]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the constraints of <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L120-L123" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",pi,[i("summary",null,[s[319]||(s[319]=i("a",{id:"LocalSearchSolvers.get_domain-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_domain-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_domain")],-1)),s[320]||(s[320]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[321]||(s[321]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the domain of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L156-L159" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",hi,[i("summary",null,[s[322]||(s[322]=i("a",{id:"LocalSearchSolvers.get_kind-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.get_kind-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_kind")],-1)),s[323]||(s[323]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[324]||(s[324]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the kind of <code>m</code>, such as <code>:sudoku</code> or <code>:generic</code> (default).</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L132-L135" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",di,[i("summary",null,[s[325]||(s[325]=i("a",{id:"LocalSearchSolvers.get_name-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_name-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_name")],-1)),s[326]||(s[326]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[327]||(s[327]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the name of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L162-L165" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ki,[i("summary",null,[s[328]||(s[328]=i("a",{id:"LocalSearchSolvers.get_objective-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_objective-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_objective")],-1)),s[329]||(s[329]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[330]||(s[330]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, o) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the objective <code>o</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L150-L153" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ci,[i("summary",null,[s[331]||(s[331]=i("a",{id:"LocalSearchSolvers.get_objectives-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.get_objectives-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_objectives")],-1)),s[332]||(s[332]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[333]||(s[333]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_objectives</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the objectives of <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L126-L129" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",gi,[i("summary",null,[s[334]||(s[334]=i("a",{id:"LocalSearchSolvers.get_time_stamp-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.get_time_stamp-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_time_stamp")],-1)),s[335]||(s[335]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[336]||(s[336]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_time_stamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the time (since epoch) when the model was created. This time stamp is for internal performance measurement.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L180-L183" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ui,[i("summary",null,[s[337]||(s[337]=i("a",{id:"LocalSearchSolvers.get_variable-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_variable-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_variable")],-1)),s[338]||(s[338]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[339]||(s[339]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L138-L141" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",bi,[i("summary",null,[s[340]||(s[340]=i("a",{id:"LocalSearchSolvers.get_variables-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.get_variables-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_variables")],-1)),s[341]||(s[341]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[342]||(s[342]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the variables of <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L114-L117" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",yi,[i("summary",null,[s[343]||(s[343]=i("a",{id:"LocalSearchSolvers.get_vars_from_cons-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.get_vars_from_cons-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.get_vars_from_cons")],-1)),s[344]||(s[344]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[345]||(s[345]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_vars_from_cons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Access the variables restricted by constraint <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L174-L177" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",vi,[i("summary",null,[s[346]||(s[346]=i("a",{id:"LocalSearchSolvers.insert_tabu!-Tuple{Any, Any, Val{:tabu}}",href:"#LocalSearchSolvers.insert_tabu!-Tuple{Any, Any, Val{:tabu}}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.insert_tabu!")],-1)),s[347]||(s[347]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[348]||(s[348]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_insert_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x, tabu_time) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Insert the bariable <code>x</code> as tabu for <code>tabu_time</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L68-L71" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Si,[i("summary",null,[s[349]||(s[349]=i("a",{id:"LocalSearchSolvers.is_sat-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.is_sat-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.is_sat")],-1)),s[350]||(s[350]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[351]||(s[351]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_sat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return <code>true</code> if <code>m</code> is a satisfaction model.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L334-L337" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ei,[i("summary",null,[s[352]||(s[352]=i("a",{id:"LocalSearchSolvers.is_specialized-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.is_specialized-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.is_specialized")],-1)),s[353]||(s[353]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[354]||(s[354]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_specialized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return <code>true</code> if the model is already specialized.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L340-L343" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",mi,[i("summary",null,[s[355]||(s[355]=i("a",{id:"LocalSearchSolvers.length_cons-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.length_cons-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_cons")],-1)),s[356]||(s[356]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[357]||(s[357]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length_cons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the length of constraint <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L192-L195" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ji,[i("summary",null,[s[358]||(s[358]=i("a",{id:"LocalSearchSolvers.length_cons-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.length_cons-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_cons")],-1)),s[359]||(s[359]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[360]||(s[360]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length_cons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the number of constraints in <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L210-L213" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ci,[i("summary",null,[s[361]||(s[361]=i("a",{id:"LocalSearchSolvers.length_objs-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.length_objs-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_objs")],-1)),s[362]||(s[362]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[363]||(s[363]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length_objs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the number of objectives in <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L198-L201" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Fi,[i("summary",null,[s[364]||(s[364]=i("a",{id:"LocalSearchSolvers.length_tabu-Tuple{Any}",href:"#LocalSearchSolvers.length_tabu-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_tabu")],-1)),s[365]||(s[365]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[366]||(s[366]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_length_tabu!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Return the length of the tabu list.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L62-L65" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Li,[i("summary",null,[s[367]||(s[367]=i("a",{id:"LocalSearchSolvers.length_var-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.length_var-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_var")],-1)),s[368]||(s[368]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[369]||(s[369]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length_var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the domain length of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L186-L189" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",fi,[i("summary",null,[s[370]||(s[370]=i("a",{id:"LocalSearchSolvers.length_vars-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.length_vars-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.length_vars")],-1)),s[371]||(s[371]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[372]||(s[372]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length_vars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Return the number of variables in <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L204-L207" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ai,[i("summary",null,[s[373]||(s[373]=i("a",{id:"LocalSearchSolvers.max_domains_size-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.max_domains_size-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.max_domains_size")],-1)),s[374]||(s[374]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[375]||(s[375]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max_domains_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vars) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> begin</span></span></code></pre></div><p>DOCSTRING</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L428-L432" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Mi,[i("summary",null,[s[376]||(s[376]=i("a",{id:"LocalSearchSolvers.model-Tuple{}",href:"#LocalSearchSolvers.model-Tuple{}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.model")],-1)),s[377]||(s[377]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[378]||(s[378]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Construct a _Model, empty by default. It is recommended to add the constraints, variables, and objectives from an empty _Model. The following keyword arguments are available,</p><ul><li><p><code>vars=Dictionary{Int,Variable}()</code>: collection of variables</p></li><li><p><code>cons=Dictionary{Int,Constraint}()</code>: collection of constraints</p></li><li><p><code>objs=Dictionary{Int,Objective}()</code>: collection of objectives</p></li><li><p><code>kind=:generic</code>: the kind of problem modeled (useful for specialized methods such as pretty printing)</p></li></ul><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L50-L57" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",_i,[i("summary",null,[s[379]||(s[379]=i("a",{id:"LocalSearchSolvers.o_dist_extrema-Tuple{Any}",href:"#LocalSearchSolvers.o_dist_extrema-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.o_dist_extrema")],-1)),s[380]||(s[380]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[381]||(s[381]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist_extrema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Computes the distance between extrema in an ordered set.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/objectives/extrema.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ti,[i("summary",null,[s[382]||(s[382]=i("a",{id:"LocalSearchSolvers.o_mincut-Tuple{Any, Any}",href:"#LocalSearchSolvers.o_mincut-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.o_mincut")],-1)),s[383]||(s[383]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[384]||(s[384]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">o_mincut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(graph, values; interdiction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the capacity of a cut (determined by the state of the solver) with a possible <code>interdiction</code> on the highest capacited links.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/objectives/cut.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",xi,[i("summary",null,[s[385]||(s[385]=i("a",{id:"LocalSearchSolvers.objective!-Tuple{LocalSearchSolvers._Model, Any}",href:"#LocalSearchSolvers.objective!-Tuple{LocalSearchSolvers._Model, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.objective!")],-1)),s[386]||(s[386]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[387]||(s[387]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">objective!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, func) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add an objective evaluated by <code>func</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L294-L297" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Di,[i("summary",null,[s[388]||(s[388]=i("a",{id:"LocalSearchSolvers.objective-Tuple{Any, Any}",href:"#LocalSearchSolvers.objective-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.objective")],-1)),s[389]||(s[389]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[390]||(s[390]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">objective</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(func, name)</span></span></code></pre></div><p>Construct an objective with a function <code>func</code> that should be applied to a collection of variables.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/objective.jl#L24-L27" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Bi,[i("summary",null,[s[391]||(s[391]=i("a",{id:"LocalSearchSolvers.post_process-Tuple{LocalSearchSolvers.AbstractSolver}",href:"#LocalSearchSolvers.post_process-Tuple{LocalSearchSolvers.AbstractSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.post_process")],-1)),s[392]||(s[392]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[393]||(s[393]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">post_process</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MainSolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Launch a series of tasks to round-up a solving run, for instance, export a run&#39;s info.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L453-L456" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Oi,[i("summary",null,[s[394]||(s[394]=i("a",{id:"LocalSearchSolvers.remote_dispatch!-Tuple{LocalSearchSolvers.AbstractSolver}",href:"#LocalSearchSolvers.remote_dispatch!-Tuple{LocalSearchSolvers.AbstractSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.remote_dispatch!")],-1)),s[395]||(s[395]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[396]||(s[396]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remote_dispatch!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solver)</span></span></code></pre></div><p>Starts the <code>LeadSolver</code>s attached to the <code>MainSolver</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L428-L431" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ji,[i("summary",null,[s[397]||(s[397]=i("a",{id:"LocalSearchSolvers.remote_stop!-Tuple{LocalSearchSolvers.AbstractSolver}",href:"#LocalSearchSolvers.remote_stop!-Tuple{LocalSearchSolvers.AbstractSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.remote_stop!")],-1)),s[398]||(s[398]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[399]||(s[399]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remote_stop!!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solver)</span></span></code></pre></div><p>Fetch the pool of solutions from <code>LeadSolvers</code> and merge it into the <code>MainSolver</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L447-L450" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",wi,[i("summary",null,[s[400]||(s[400]=i("a",{id:"LocalSearchSolvers.solution-Tuple{Any}",href:"#LocalSearchSolvers.solution-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.solution")],-1)),s[401]||(s[401]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[402]||(s[402]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">solution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)</span></span></code></pre></div><p>Return the only/best known solution of a satisfaction/optimization model.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L473-L476" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ii,[i("summary",null,[s[403]||(s[403]=i("a",{id:"LocalSearchSolvers.solve_for_loop!-NTuple{5, Any}",href:"#LocalSearchSolvers.solve_for_loop!-NTuple{5, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.solve_for_loop!")],-1)),s[404]||(s[404]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[405]||(s[405]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">solve_for_loop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solver, stop, sat, iter)</span></span></code></pre></div><p>First loop in the solving process that starts <code>LeadSolver</code>s from the <code>MainSolver</code>, and <code>_SubSolver</code>s from each <code>MetaSolver</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L434-L437" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ui,[i("summary",null,[s[406]||(s[406]=i("a",{id:"LocalSearchSolvers.solve_while_loop!-NTuple{5, Any}",href:"#LocalSearchSolvers.solve_while_loop!-NTuple{5, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.solve_while_loop!")],-1)),s[407]||(s[407]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[408]||(s[408]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">solve_while_loop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, )</span></span></code></pre></div><p>Search the space of configurations.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L408-L411" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ri,[i("summary",null,[s[409]||(s[409]=i("a",{id:"LocalSearchSolvers.specialize!-Tuple{Any}",href:"#LocalSearchSolvers.specialize!-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.specialize!")],-1)),s[410]||(s[410]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[411]||(s[411]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">specialize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solver)</span></span></code></pre></div><p>Replace the model of <code>solver</code> by one with specialized types (variables, constraints, objectives).</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L107-L110" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",zi,[i("summary",null,[s[412]||(s[412]=i("a",{id:"LocalSearchSolvers.specialize-Tuple{LocalSearchSolvers._Model}",href:"#LocalSearchSolvers.specialize-Tuple{LocalSearchSolvers._Model}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.specialize")],-1)),s[413]||(s[413]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[414]||(s[414]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">specialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Specialize the structure of a model to avoid dynamic type attribution at runtime.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L348-L351" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ni,[i("summary",null,[s[415]||(s[415]=i("a",{id:"LocalSearchSolvers.status-Tuple{LocalSearchSolvers.MainSolver}",href:"#LocalSearchSolvers.status-Tuple{LocalSearchSolvers.MainSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.status")],-1)),s[416]||(s[416]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[417]||(s[417]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(solver)</span></span></code></pre></div><p>Return the status of a MainSolver.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solvers/main.jl#L60-L63" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Vi,[i("summary",null,[s[418]||(s[418]=i("a",{id:"LocalSearchSolvers.stop_while_loop-Tuple{LocalSearchSolvers.AbstractSolver}",href:"#LocalSearchSolvers.stop_while_loop-Tuple{LocalSearchSolvers.AbstractSolver}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.stop_while_loop")],-1)),s[419]||(s[419]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[420]||(s[420]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stop_while_loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Check the stop conditions of the <code>solve!</code> while inner loop.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/solver.jl#L402-L405" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Gi,[i("summary",null,[s[421]||(s[421]=i("a",{id:"LocalSearchSolvers.tabu_list-Tuple{Any}",href:"#LocalSearchSolvers.tabu_list-Tuple{Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.tabu_list")],-1)),s[422]||(s[422]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[423]||(s[423]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_tabu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Access the list of tabu variables.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L32-L35" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Pi,[i("summary",null,[s[424]||(s[424]=i("a",{id:"LocalSearchSolvers.tabu_value-Tuple{Any, Any}",href:"#LocalSearchSolvers.tabu_value-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.tabu_value")],-1)),s[425]||(s[425]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[426]||(s[426]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_tabu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> S </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{_State, AbstractSolver}</span></span></code></pre></div><p>Return the tabu value of variable <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/strategies/tabu.jl#L38-L41" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",qi,[i("summary",null,[s[427]||(s[427]=i("a",{id:"LocalSearchSolvers.variable!",href:"#LocalSearchSolvers.variable!"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.variable!")],-1)),s[428]||(s[428]=a()),e(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[429]||(s[429]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variable!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{Model, AbstractSolver}</span></span></code></pre></div><p>Add a variable with domain <code>d</code> to <code>m</code>.</p><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/model.jl#L276-L279" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",$i,[i("summary",null,[s[430]||(s[430]=i("a",{id:"LocalSearchSolvers.variable-Tuple{}",href:"#LocalSearchSolvers.variable-Tuple{}"},[i("span",{class:"jlbinding"},"LocalSearchSolvers.variable")],-1)),s[431]||(s[431]=a()),e(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[432]||(s[432]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; domain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domain</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>Construct a variable with discrete domain. See the <code>domain</code> method for other options.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], types </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :indices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">56</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, domain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :indices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/LocalSearchSolvers.jl/blob/v0.4.9/src/variable.jl#L60-L70" target="_blank" rel="noreferrer">source</a></p>`,4))])])}const ia=n(h,[["render",Wi]]);export{sa as __pageData,ia as default};
