import{_ as o,c as p,j as i,a as t,G as n,a5 as e,t as r,B as h,o as d}from"./chunks/framework.CJakPlgM.js";const ti=JSON.parse('{"title":"Public API","description":"","frontmatter":{},"headers":[],"relativePath":"api/00_public.md","filePath":"api/00_public.md","lastUpdated":null}'),k={name:"api/00_public.md"},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},_s={class:"jldocstring custom-block",open:""},Os={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},Js={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},Us={class:"jldocstring custom-block",open:""},Ps={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},Qs={class:"jldocstring custom-block",open:""},Vs={class:"jldocstring custom-block",open:""},Xs={class:"jldocstring custom-block",open:""},Ys={class:"jldocstring custom-block",open:""},$s={class:"jldocstring custom-block",open:""};function Ks(l,s,Ws,Hs,Zs,si){const a=h("Badge");return d(),p("div",null,[s[279]||(s[279]=i("h1",{id:"Public-API",tabindex:"-1"},[t("Public API "),i("a",{class:"header-anchor",href:"#Public-API","aria-label":'Permalink to "Public API {#Public-API}"'},"​")],-1)),i("details",c,[i("summary",null,[s[0]||(s[0]=i("a",{id:"ConstraintCommons.Automaton-api-00_public",href:"#ConstraintCommons.Automaton-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.Automaton")],-1)),s[1]||(s[1]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Automaton{S, T, F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union{S, Vector{S}, Set{S}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAutomaton</span></span></code></pre></div><p>A minimal implementation of a deterministic automaton structure.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/automata.jl#L9-L13" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",g,[i("summary",null,[s[3]||(s[3]=i("a",{id:"ConstraintCommons.MDD-api-00_public",href:"#ConstraintCommons.MDD-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.MDD")],-1)),s[4]||(s[4]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MDD{S,T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMultivaluedDecisionDiagram</span></span></code></pre></div><p>A minimal implementation of a multivalued decision diagram structure.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/diagrams.jl#L9-L13" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",u,[i("summary",null,[s[6]||(s[6]=i("a",{id:"ConstraintCommons.accept-Tuple{Automaton, Any}-api-00_public",href:"#ConstraintCommons.accept-Tuple{Automaton, Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.accept")],-1)),s[7]||(s[7]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Automaton, MDD}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, w)</span></span></code></pre></div><p>Return <code>true</code> if <code>a</code> accepts the word <code>w</code> and <code>false</code> otherwise.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/automata.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",m,[i("summary",null,[s[9]||(s[9]=i("a",{id:"ConstraintCommons.consin-Tuple{Any, Nothing}-api-00_public",href:"#ConstraintCommons.consin-Tuple{Any, Nothing}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.consin")],-1)),s[10]||(s[10]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">consin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.in</code> (or <code>∈</code>) when the set is <code>nothing</code>. Returns <code>false</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/nothing.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",b,[i("summary",null,[s[12]||(s[12]=i("a",{id:"ConstraintCommons.consisempty-Tuple{Nothing}-api-00_public",href:"#ConstraintCommons.consisempty-Tuple{Nothing}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.consisempty")],-1)),s[13]||(s[13]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">consisempty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.isempty</code> when the set is <code>nothing</code>. Returns <code>true</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/nothing.jl#L9-L13" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",y,[i("summary",null,[s[15]||(s[15]=i("a",{id:"ConstraintCommons.extract_parameters-Tuple{Method}-api-00_public",href:"#ConstraintCommons.extract_parameters-Tuple{Method}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.extract_parameters")],-1)),s[16]||(s[16]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Method, Function}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; parameters)</span></span></code></pre></div><p>Extracts the intersection between the <code>kargs</code> of <code>m</code> and <code>parameters</code> (defaults to <code>USUAL_CONSTRAINT_PARAMETERS</code>).</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/parameters.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",C,[i("summary",null,[s[18]||(s[18]=i("a",{id:"ConstraintCommons.incsert!-api-00_public",href:"#ConstraintCommons.incsert!-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.incsert!")],-1)),s[19]||(s[19]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[20]||(s[20]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">incsert!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractDict, AbstractDictionary}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ind, val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Increase or insert a counter in a dictionary-based collection. The counter insertion defaults to <code>val = 1</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/dictionaries.jl#L2-L6" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",E,[i("summary",null,[s[21]||(s[21]=i("a",{id:"ConstraintCommons.oversample-Tuple{Any, Any}-api-00_public",href:"#ConstraintCommons.oversample-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.oversample")],-1)),s[22]||(s[22]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">oversample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X, f)</span></span></code></pre></div><p>Oversample elements of <code>X</code> until the boolean function <code>f</code> has as many <code>true</code> and <code>false</code> configurations.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/sampling.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",j,[i("summary",null,[s[24]||(s[24]=i("a",{id:"ConstraintCommons.symcon-api-00_public",href:"#ConstraintCommons.symcon-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.symcon")],-1)),s[25]||(s[25]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[26]||(s[26]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">symcon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, s2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, connector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>*</code> to <code>Symbol</code>s multiplication by connecting the symbols by an <code>_</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/symbols.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",v,[i("summary",null,[s[27]||(s[27]=i("a",{id:"ConstraintCommons.δ_extrema-Tuple{Any}-api-00_public",href:"#ConstraintCommons.δ_extrema-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.δ_extrema")],-1)),s[28]||(s[28]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">δ_extrema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute both the difference between the maximum and the minimum of over all the collections of <code>X</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/extrema.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",F,[i("summary",null,[s[30]||(s[30]=i("a",{id:"ConstraintDomains.AbstractDomain-api-00_public",href:"#ConstraintDomains.AbstractDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.AbstractDomain")],-1)),s[31]||(s[31]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[32]||(s[32]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractDomain</span></span></code></pre></div><p>An abstract super type for any domain type. A domain type <code>D &lt;: AbstractDomain</code> must implement the following methods to properly interface <code>AbstractDomain</code>.</p><ul><li><p><code>Base.∈(val, ::D)</code></p></li><li><p><code>Base.rand(::D)</code></p></li><li><p><code>Base.length(::D)</code> that is the number of elements in a discrete domain, and the distance between bounds or similar for a continuous domain</p></li></ul><p>Additionally, if the domain is used in a dynamic context, it can extend</p><ul><li><p><code>add!(::D, args)</code></p></li><li><p><code>delete!(::D, args)</code></p></li></ul><p>where <code>args</code> depends on <code>D</code>&#39;s structure</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",f,[i("summary",null,[s[33]||(s[33]=i("a",{id:"ConstraintDomains.ContinuousDomain-api-00_public",href:"#ConstraintDomains.ContinuousDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.ContinuousDomain")],-1)),s[34]||(s[34]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ContinuousDomain{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>An abstract supertype for all continuous domains.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/continuous.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",T,[i("summary",null,[s[36]||(s[36]=i("a",{id:"ConstraintDomains.DiscreteDomain-api-00_public",href:"#ConstraintDomains.DiscreteDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.DiscreteDomain")],-1)),s[37]||(s[37]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[38]||(s[38]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DiscreteDomain{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>An abstract supertype for discrete domains (set, range).</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",A,[i("summary",null,[s[39]||(s[39]=i("a",{id:"ConstraintDomains.ExploreSettings-Tuple{Any}-api-00_public",href:"#ConstraintDomains.ExploreSettings-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.ExploreSettings")],-1)),s[40]||(s[40]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExploreSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domains;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    complete_search_limit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    max_samplings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domain_size, domains),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :flexible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    solutions_limit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(max_samplings)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create settings for the exploration of a search space composed by a collection of domains.</p><p><strong>Arguments</strong></p><ul><li><p><code>domains</code>: A collection of domains representing the search space.</p></li><li><p><code>complete_search_limit</code>: Maximum size of the search space for complete search.</p></li><li><p><code>max_samplings</code>: Maximum number of samples to take during partial search.</p></li><li><p><code>search</code>: Search strategy (<code>:flexible</code>, <code>:complete</code>, or <code>:partial</code>).</p></li><li><p><code>solutions_limit</code>: Maximum number of solutions to store.</p></li></ul><p><strong>Returns</strong></p><p>An <code>ExploreSettings</code> object.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domains </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">settings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExploreSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domains, search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/explore.jl#L8-L34" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",D,[i("summary",null,[s[42]||(s[42]=i("a",{id:"ConstraintDomains.Explorer-api-00_public",href:"#ConstraintDomains.Explorer-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.Explorer")],-1)),s[43]||(s[43]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[44]||(s[44]=e(`<p>Explorer(concepts, domains, objective = nothing; settings = ExploreSettings(domains))</p><p>Create an Explorer object for searching a constraint satisfaction problem space.</p><p><strong>Arguments</strong></p><ul><li><p><code>concepts</code>: A collection of tuples, each containing a concept function and its associated variable indices.</p></li><li><p><code>domains</code>: A collection of domains representing the search space.</p></li><li><p><code>objective</code>: An optional objective function for optimization problems.</p></li><li><p><code>settings</code>: An <code>ExploreSettings</code> object to configure the exploration process.</p></li></ul><p><strong>Returns</strong></p><p>An <code>Explorer</code> object ready for exploration.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domains </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">concepts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [(sum, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">objective </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">explorer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Explorer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(concepts, domains, objective)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/explore.jl#L63-L84" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",x,[i("summary",null,[s[45]||(s[45]=i("a",{id:"ConstraintDomains.RangeDomain-api-00_public",href:"#ConstraintDomains.RangeDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.RangeDomain")],-1)),s[46]||(s[46]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[47]||(s[47]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RangeDomain</span></span></code></pre></div><p>A discrete domain defined by a <code>range &lt;: AbstractRange{Real}</code>. As ranges are immutable in Julia, changes in <code>RangeDomain</code> must use <code>set_domain!</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L16-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",B,[i("summary",null,[s[48]||(s[48]=i("a",{id:"ConstraintDomains.SetDomain-api-00_public",href:"#ConstraintDomains.SetDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.SetDomain")],-1)),s[49]||(s[49]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[50]||(s[50]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SetDomain{T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DiscreteDomain{T}</span></span></code></pre></div><p>Domain that stores discrete values as a set of (unordered) points.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",L,[i("summary",null,[s[51]||(s[51]=i("a",{id:"Base.delete!-Tuple{SetDomain, Any}-api-00_public",href:"#Base.delete!-Tuple{SetDomain, Any}-api-00_public"},[i("span",{class:"jlbinding"},"Base.delete!")],-1)),s[52]||(s[52]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delete!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SetDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value)(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SetDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value)</span></span></code></pre></div><p>Delete <code>value</code> from the list of points in <code>d</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L76-L79" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",w,[i("summary",null,[s[54]||(s[54]=i("a",{id:"ConstraintDomains.add!-Tuple{SetDomain, Any}-api-00_public",href:"#ConstraintDomains.add!-Tuple{SetDomain, Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.add!")],-1)),s[55]||(s[55]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[56]||(s[56]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SetDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value)</span></span></code></pre></div><p>Add <code>value</code> to the list of points in <code>d</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L70-L73" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",M,[i("summary",null,[s[57]||(s[57]=i("a",{id:"ConstraintDomains.domain-Tuple{Any}-api-00_public",href:"#ConstraintDomains.domain-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain")],-1)),s[58]||(s[58]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(values)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(range</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRange{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Construct either a <code>SetDomain</code> or a <code>RangeDomain</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">53.69</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">86.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L31-L42" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",N,[i("summary",null,[s[60]||(s[60]=i("a",{id:"ConstraintDomains.domain-Tuple{}-api-00_public",href:"#ConstraintDomains.domain-Tuple{}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain")],-1)),s[61]||(s[61]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[62]||(s[62]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Construct an <code>EmptyDomain</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L20-L23" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",_,[i("summary",null,[s[63]||(s[63]=i("a",{id:"ConstraintDomains.domain-Union{Tuple{Array{Intervals.Interval{T, L, R}, 1}}, Tuple{R}, Tuple{L}, Tuple{T}} where {T<:Real, L, R}-api-00_public",href:"#ConstraintDomains.domain-Union{Tuple{Array{Intervals.Interval{T, L, R}, 1}}, Tuple{R}, Tuple{L}, Tuple{T}} where {T<:Real, L, R}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain")],-1)),s[64]||(s[64]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[65]||(s[65]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{T, Bool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{T, Bool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(intervals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Tuple{Tuple{T, Bool},Tuple{T, Bool}}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Construct a domain of continuous interval(s).</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/continuous.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p>`,3))]),i("details",O,[i("summary",null,[s[66]||(s[66]=i("a",{id:"ConstraintDomains.domain_size-Tuple{ConstraintDomains.Intervals}-api-00_public",href:"#ConstraintDomains.domain_size-Tuple{ConstraintDomains.Intervals}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain_size")],-1)),s[67]||(s[67]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[68]||(s[68]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(itv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the difference between the highest and lowest values in <code>itv</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/continuous.jl#L61-L64" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",S,[i("summary",null,[s[69]||(s[69]=i("a",{id:"ConstraintDomains.domain_size-Tuple{D} where D<:AbstractDomain-api-00_public",href:"#ConstraintDomains.domain_size-Tuple{D} where D<:AbstractDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain_size")],-1)),s[70]||(s[70]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[71]||(s[71]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fallback method for <code>domain_size(d)</code> that return <code>length(d)</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L46-L49" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",I,[i("summary",null,[s[72]||(s[72]=i("a",{id:"ConstraintDomains.domain_size-Tuple{D} where D<:DiscreteDomain-api-00_public",href:"#ConstraintDomains.domain_size-Tuple{D} where D<:DiscreteDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.domain_size")],-1)),s[73]||(s[73]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[74]||(s[74]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DiscreteDomain</span></span></code></pre></div><p>Return the maximum distance between two points in <code>d</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L64-L67" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",J,[i("summary",null,[s[75]||(s[75]=i("a",{id:"ConstraintDomains.explore!-Tuple{Explorer}-api-00_public",href:"#ConstraintDomains.explore!-Tuple{Explorer}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.explore!")],-1)),s[76]||(s[76]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[77]||(s[77]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explore!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(explorer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Explorer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform exploration on the search space defined by the <code>Explorer</code> object.</p><p>This function explores the search space according to the settings specified in the <code>Explorer</code> object. It updates the <code>Explorer</code>&#39;s state with found solutions and non-solutions.</p><p><strong>Arguments</strong></p><ul><li><code>explorer</code>: An <code>Explorer</code> object containing the problem definition and exploration settings.</li></ul><p><strong>Returns</strong></p><p>Nothing. The <code>Explorer</code>&#39;s state is updated in-place.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">explorer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Explorer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(concepts, domains)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explore!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(explorer)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Solutions found: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(explorer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">solutions))</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/explore.jl#L269-L289" target="_blank" rel="noreferrer">source</a></p>`,10))]),i("details",R,[i("summary",null,[s[78]||(s[78]=i("a",{id:"ConstraintDomains.explore-Tuple{Any, Any}-api-00_public",href:"#ConstraintDomains.explore-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.explore")],-1)),s[79]||(s[79]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[80]||(s[80]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domains, concept; settings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExploreSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domains), parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Explore a search space defined by domains and a concept.</p><p><strong>Arguments</strong></p><ul><li><p><code>domains</code>: A collection of domains representing the search space.</p></li><li><p><code>concept</code>: The concept function defining the constraint.</p></li><li><p><code>settings</code>: An <code>ExploreSettings</code> object to configure the exploration process.</p></li><li><p><code>parameters</code>: Additional parameters to pass to the concept function.</p></li></ul><p><strong>Returns</strong></p><p>A tuple containing two sets: (solutions, non_solutions).</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domains </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">solutions, non_solutions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> explore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(domains, allunique)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/explore.jl#L305-L324" target="_blank" rel="noreferrer">source</a></p>`,9))]),i("details",U,[i("summary",null,[s[81]||(s[81]=i("a",{id:"ConstraintDomains.generate_parameters-Tuple{AbstractDomain, Symbol}-api-00_public",href:"#ConstraintDomains.generate_parameters-Tuple{AbstractDomain, Symbol}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.generate_parameters")],-1)),s[82]||(s[82]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param)</span></span></code></pre></div><p>Generates random parameters based on the domain <code>d</code> and the kind of parameters <code>param</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L128-L132" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",P,[i("summary",null,[s[84]||(s[84]=i("a",{id:"ConstraintDomains.get_domain-Tuple{D} where D<:AbstractDomain-api-00_public",href:"#ConstraintDomains.get_domain-Tuple{D} where D<:AbstractDomain-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.get_domain")],-1)),s[85]||(s[85]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[86]||(s[86]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Access the internal structure of any domain type.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L52-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",z,[i("summary",null,[s[87]||(s[87]=i("a",{id:"ConstraintDomains.intersect_domains-Union{Tuple{I2}, Tuple{I1}, Tuple{I1, I2}} where {I1<:Intervals.Interval, I2<:Intervals.Interval}-api-00_public",href:"#ConstraintDomains.intersect_domains-Union{Tuple{I2}, Tuple{I1}, Tuple{I1, I2}} where {I1<:Intervals.Interval, I2<:Intervals.Interval}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.intersect_domains")],-1)),s[88]||(s[88]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[89]||(s[89]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intersect_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d₁, d₂)</span></span></code></pre></div><p>Compute the intersections of two domains.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/continuous.jl#L72-L76" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",G,[i("summary",null,[s[90]||(s[90]=i("a",{id:"ConstraintDomains.merge_domains-Tuple{RangeDomain, RangeDomain}-api-00_public",href:"#ConstraintDomains.merge_domains-Tuple{RangeDomain, RangeDomain}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.merge_domains")],-1)),s[91]||(s[91]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[92]||(s[92]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d₁</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d₂</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Merge two domains of same nature (discrete/contiuous).</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L83-L87" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",q,[i("summary",null,[s[93]||(s[93]=i("a",{id:"ConstraintDomains.to_domains-Tuple{Vector{Int64}}-api-00_public",href:"#ConstraintDomains.to_domains-Tuple{Vector{Int64}}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintDomains.to_domains")],-1)),s[94]||(s[94]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convert various arguments into valid domains format.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L59-L63" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Q,[i("summary",null,[s[96]||(s[96]=i("a",{id:"Constraints.USUAL_CONSTRAINTS-api-00_public",href:"#Constraints.USUAL_CONSTRAINTS-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.USUAL_CONSTRAINTS")],-1)),s[97]||(s[97]=t()),n(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[98]||(s[98]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span></span></code></pre></div><p>Dictionary that contains all the usual constraints defined in Constraint.jl. It is based on XCSP3-core specifications available at <a href="https://arxiv.org/abs/2009.00514" target="_blank" rel="noreferrer">https://arxiv.org/abs/2009.00514</a></p><p>Adding a new constraint is as simple as defining a new function with the same name as the constraint and using the <code>@usual</code> macro to define it. The macro will take care of adding the new constraint to the <code>USUAL_CONSTRAINTS</code> dictionary.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@usual</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> concept_all_different</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x; vals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xcsp_all_different</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x, except</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vals)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',6))]),i("details",V,[i("summary",null,[s[99]||(s[99]=i("a",{id:"Constraints.USUAL_SYMMETRIES-api-00_public",href:"#Constraints.USUAL_SYMMETRIES-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.USUAL_SYMMETRIES")],-1)),s[100]||(s[100]=t()),n(a,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[101]||(s[101]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_SYMMETRIES</span></span></code></pre></div><p>A Dictionary that contains the function to apply for each symmetry to avoid searching a whole space.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",X,[i("summary",null,[s[102]||(s[102]=i("a",{id:"Constraints.Constraint-api-00_public",href:"#Constraints.Constraint-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.Constraint")],-1)),s[103]||(s[103]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[104]||(s[104]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Constraint</span></span></code></pre></div><p>Parametric structure with the following fields.</p><ul><li><p><code>concept</code>: a Boolean function that, given an assignment <code>x</code>, outputs <code>true</code> if <code>x</code> satisfies the constraint, and <code>false</code> otherwise.</p></li><li><p><code>error</code>: a positive function that works as preferences over invalid assignments. Return <code>0.0</code> if the constraint is satisfied, and a strictly positive real otherwise.</p></li></ul><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L7-L12" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",Y,[i("summary",null,[s[105]||(s[105]=i("a",{id:"ConstraintCommons.extract_parameters-api-00_public",href:"#ConstraintCommons.extract_parameters-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintCommons.extract_parameters")],-1)),s[106]||(s[106]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[107]||(s[107]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, constraints_dict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINTS; parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConstraintCommons</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINT_PARAMETERS)</span></span></code></pre></div><p>Return the parameters of the constraint <code>s</code> in <code>constraints_dict</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>s::Symbol</code>: the constraint name.</p></li><li><p><code>constraints_dict::Dict{Symbol,Constraint}</code>: dictionary of constraints. Default is <code>USUAL_CONSTRAINTS</code>.</p></li><li><p><code>parameters::Vector{Symbol}</code>: vector of parameters. Default is <code>ConstraintCommons.USUAL_CONSTRAINT_PARAMETERS</code>.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:all_different</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L46-L60" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",$,[i("summary",null,[s[108]||(s[108]=i("a",{id:"Constraints.args-Tuple{Constraint}-api-00_public",href:"#Constraints.args-Tuple{Constraint}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.args")],-1)),s[109]||(s[109]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[110]||(s[110]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the expected length restriction of the arguments in a constraint <code>c</code>. The value <code>nothing</code> indicates that any strictly positive number of value is accepted.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L62-L65" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",K,[i("summary",null,[s[111]||(s[111]=i("a",{id:"Constraints.concept-Tuple{Constraint}-api-00_public",href:"#Constraints.concept-Tuple{Constraint}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.concept")],-1)),s[112]||(s[112]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[113]||(s[113]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">concept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the concept (function) of constraint <code>c</code>. concept(c::Constraint, x...; param = nothing) Apply the concept of <code>c</code> to values <code>x</code> and optionally <code>param</code>.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L40-L45" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",W,[i("summary",null,[s[114]||(s[114]=i("a",{id:"Constraints.concept-Tuple{Symbol, Vararg{Any}}-api-00_public",href:"#Constraints.concept-Tuple{Symbol, Vararg{Any}}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.concept")],-1)),s[115]||(s[115]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[116]||(s[116]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">concept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the concept of the constraint <code>s</code> applied to <code>args</code> and <code>kargs</code>. This is a shortcut for <code>concept(USUAL_CONSTRAINTS[s])(args...; kargs...)</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>s::Symbol</code>: the constraint name.</p></li><li><p><code>args...</code>: the arguments to apply the concept to.</p></li><li><p><code>kargs...</code>: the keyword arguments to apply the concept to.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">concept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:all_different</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L223-L237" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",H,[i("summary",null,[s[117]||(s[117]=i("a",{id:"Constraints.constraints_descriptions-api-00_public",href:"#Constraints.constraints_descriptions-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.constraints_descriptions")],-1)),s[118]||(s[118]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[119]||(s[119]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraints_descriptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINTS)</span></span></code></pre></div><p>Return a pretty table with the descriptions of the constraints in <code>C</code>.</p><p><strong>Arguments</strong></p><ul><li><code>C::Dict{Symbol,Constraint}</code>: dictionary of constraints. Default is <code>USUAL_CONSTRAINTS</code>.</li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraints_descriptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L182-L194" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",Z,[i("summary",null,[s[120]||(s[120]=i("a",{id:"Constraints.constraints_parameters-api-00_public",href:"#Constraints.constraints_parameters-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.constraints_parameters")],-1)),s[121]||(s[121]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[122]||(s[122]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraints_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(C</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINTS)</span></span></code></pre></div><p>Return a pretty table with the parameters of the constraints in <code>C</code>.</p><p><strong>Arguments</strong></p><ul><li><code>C::Dict{Symbol,Constraint}</code>: dictionary of constraints. Default is <code>USUAL_CONSTRAINTS</code>.</li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraints_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L129-L141" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",ss,[i("summary",null,[s[123]||(s[123]=i("a",{id:"Constraints.describe-api-00_public",href:"#Constraints.describe-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.describe")],-1)),s[124]||(s[124]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[125]||(s[125]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(constraints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict{Symbol,Constraint}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USUAL_CONSTRAINTS; width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a pretty table with the description of the constraints in <code>constraints</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>constraints::Dict{Symbol,Constraint}</code>: dictionary of constraints to describe. Default is <code>USUAL_CONSTRAINTS</code>.</p></li><li><p><code>width::Int</code>: width of the table.</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/usual_constraints.jl#L14-L27" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",is,[i("summary",null,[s[126]||(s[126]=i("a",{id:"Constraints.error_f-Tuple{Constraint}-api-00_public",href:"#Constraints.error_f-Tuple{Constraint}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.error_f")],-1)),s[127]||(s[127]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[128]||(s[128]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">error_f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the error function of constraint <code>c</code>. error_f(c::Constraint, x; param = nothing) Apply the error function of <code>c</code> to values <code>x</code> and optionally <code>param</code>.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L51-L56" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ts,[i("summary",null,[s[129]||(s[129]=i("a",{id:"Constraints.params_length-Tuple{Constraint}-api-00_public",href:"#Constraints.params_length-Tuple{Constraint}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.params_length")],-1)),s[130]||(s[130]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[131]||(s[131]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">params_length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the expected length restriction of the arguments in a constraint <code>c</code>. The value <code>nothing</code> indicates that any strictly positive number of parameters is accepted.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L68-L71" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",as,[i("summary",null,[s[132]||(s[132]=i("a",{id:"Constraints.symmetries-Tuple{Constraint}-api-00_public",href:"#Constraints.symmetries-Tuple{Constraint}-api-00_public"},[i("span",{class:"jlbinding"},"Constraints.symmetries")],-1)),s[133]||(s[133]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[134]||(s[134]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">symmetries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the list of symmetries of <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/Constraints.jl/blob/v0.5.7/src/constraint.jl#L74-L77" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ns,[i("summary",null,[s[135]||(s[135]=i("a",{id:"CompositionalNetworks.Composition-Union{Tuple{F}, Tuple{F, Any}} where F<:Function-api-00_public",href:"#CompositionalNetworks.Composition-Union{Tuple{F}, Tuple{F, Any}} where F<:Function-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.Composition")],-1)),s[136]||(s[136]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[137]||(s[137]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, symbols) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Construct a <code>Composition</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L12-L16" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",es,[i("summary",null,[s[138]||(s[138]=i("a",{id:"CompositionalNetworks.Composition-api-00_public",href:"#CompositionalNetworks.Composition-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.Composition")],-1)),s[139]||(s[139]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[140]||(s[140]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Composition{F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Store the all the information of a composition learned by an ICN.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ls,[i("summary",null,[s[141]||(s[141]=i("a",{id:"CompositionalNetworks.ICN-api-00_public",href:"#CompositionalNetworks.ICN-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.ICN")],-1)),s[142]||(s[142]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[143]||(s[143]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ICN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; nvars, dom_size, param, transformation, arithmetic, aggregation, comparison)</span></span></code></pre></div><p>Construct an Interpretable Compositional Network, with the following arguments:</p><ul><li><p><code>nvars</code>: number of variable in the constraint</p></li><li><p><code>dom_size: maximum domain size of any variable in the constraint</code></p></li><li><p><code>param</code>: optional parameter (default to <code>nothing</code>)</p></li><li><p><code>transformation</code>: a transformation layer (optional)</p></li><li><p><code>arithmetic</code>: a arithmetic layer (optional)</p></li><li><p><code>aggregation</code>: a aggregation layer (optional)</p></li><li><p><code>comparison</code>: a comparison layer (optional)</p></li></ul><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",os,[i("summary",null,[s[144]||(s[144]=i("a",{id:"CompositionalNetworks.aggregation_layer-Tuple{}-api-00_public",href:"#CompositionalNetworks.aggregation_layer-Tuple{}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.aggregation_layer")],-1)),s[145]||(s[145]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[146]||(s[146]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregation_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Generate the layer of aggregations of the ICN. The operations are mutually exclusive, that is only one will be selected.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/aggregation.jl#L13-L16" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ps,[i("summary",null,[s[147]||(s[147]=i("a",{id:"CompositionalNetworks.arithmetic_layer-Tuple{}-api-00_public",href:"#CompositionalNetworks.arithmetic_layer-Tuple{}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.arithmetic_layer")],-1)),s[148]||(s[148]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[149]||(s[149]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arithmetic_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Generate the layer of arithmetic operations of the ICN. The operations are mutually exclusive, that is only one will be selected.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/arithmetic.jl#L13-L16" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",rs,[i("summary",null,[s[150]||(s[150]=i("a",{id:"CompositionalNetworks.code-api-00_public",href:"#CompositionalNetworks.code-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.code")],-1)),s[151]||(s[151]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[152]||(s[152]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:maths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;composition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Access the code of a composition <code>c</code> in a given language <code>lang</code>. The name of the generated method is optional.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",hs,[i("summary",null,[s[153]||(s[153]=i("a",{id:"CompositionalNetworks.comparison_layer-api-00_public",href:"#CompositionalNetworks.comparison_layer-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.comparison_layer")],-1)),s[154]||(s[154]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[155]||(s[155]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comparison_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate the layer of transformations functions of the ICN. Iff <code>param</code> value is set, also includes all the parametric comparison with that value. The operations are mutually exclusive, that is only one will be selected.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/comparison.jl#L88-L91" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ds,[i("summary",null,[s[156]||(s[156]=i("a",{id:"CompositionalNetworks.compose-api-00_public",href:"#CompositionalNetworks.compose-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.compose")],-1)),s[157]||(s[157]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[158]||(s[158]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn, weights</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a function composed by some of the operations of a given ICN. Can be applied to any vector of variables. If <code>weights</code> are given, will assign to <code>icn</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L45-L48" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ks,[i("summary",null,[s[159]||(s[159]=i("a",{id:"CompositionalNetworks.compose_to_file!-Tuple{Any, Any, Any}-api-00_public",href:"#CompositionalNetworks.compose_to_file!-Tuple{Any, Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.compose_to_file!")],-1)),s[160]||(s[160]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[161]||(s[161]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compose_to_file!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(concept, name, path; domains, param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, language </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :Julia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, global_iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, local_iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, metric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hamming, popSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Explore, learn and compose a function and write it to a file.</p><p><strong>Arguments:</strong></p><ul><li><p><code>concept</code>: the concept to learn</p></li><li><p><code>name</code>: the name to give to the constraint</p></li><li><p><code>path</code>: path of the output file</p></li></ul><p><strong>Keywords arguments:</strong></p><ul><li><p><code>domains</code>: domains that defines the search space</p></li><li><p><code>param</code>: an optional parameter of the constraint</p></li><li><p><code>language</code>: the language to export to, default to <code>:julia</code></p></li><li><p><code>search</code>: either <code>:partial</code> or <code>:complete</code> search</p></li><li><p><code>global_iter</code>: number of learning iteration</p></li><li><p><code>local_iter</code>: number of generation in the genetic algorithm</p></li><li><p><code>metric</code>: the metric to measure the distance between a configuration and known solutions</p></li><li><p><code>popSize</code>: size of the population in the genetic algorithm</p></li></ul><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/learn.jl#L77-L95" target="_blank" rel="noreferrer">source</a></p>',7))]),i("details",cs,[i("summary",null,[s[162]||(s[162]=i("a",{id:"CompositionalNetworks.composition-Tuple{Composition}-api-00_public",href:"#CompositionalNetworks.composition-Tuple{Composition}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.composition")],-1)),s[163]||(s[163]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[164]||(s[164]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Access the actual method of an ICN composition <code>c</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L31-L35" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",gs,[i("summary",null,[s[165]||(s[165]=i("a",{id:"CompositionalNetworks.composition_to_file!-api-00_public",href:"#CompositionalNetworks.composition_to_file!-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.composition_to_file!")],-1)),s[166]||(s[166]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[167]||(s[167]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">composition_to_file!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, path, name, language</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Julia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write the composition code in a given <code>language</code> into a file at <code>path</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L97-L101" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",us,[i("summary",null,[s[168]||(s[168]=i("a",{id:"CompositionalNetworks.explore_learn_compose-Tuple{Any, Any}-api-00_public",href:"#CompositionalNetworks.explore_learn_compose-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.explore_learn_compose")],-1)),s[169]||(s[169]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[170]||(s[170]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">explore_learn_compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(concept; domains, param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :complete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, global_iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, local_iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, metric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hamming, popSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, action </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Explore a search space, learn a composition from an ICN, and compose an error function.</p><p><strong>Arguments:</strong></p><ul><li><p><code>concept</code>: the concept of the targeted constraint</p></li><li><p><code>domains</code>: domains of the variables that define the training space</p></li><li><p><code>param</code>: an optional parameter of the constraint</p></li><li><p><code>search</code>: either <code>flexible</code>,<code>:partial</code> or <code>:complete</code> search. Flexible search will use <code>search_limit</code> and <code>solutions_limit</code> to determine if the search space needs to be partially or completely explored</p></li><li><p><code>global_iter</code>: number of learning iteration</p></li><li><p><code>local_iter</code>: number of generation in the genetic algorithm</p></li><li><p><code>metric</code>: the metric to measure the distance between a configuration and known solutions</p></li><li><p><code>popSize</code>: size of the population in the genetic algorithm</p></li><li><p><code>action</code>: either <code>:symbols</code> to have a description of the composition or <code>:composition</code> to have the composed function itself</p></li></ul><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/learn.jl#L35-L50" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",ms,[i("summary",null,[s[171]||(s[171]=i("a",{id:"CompositionalNetworks.hamming-Tuple{Any, Any}-api-00_public",href:"#CompositionalNetworks.hamming-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.hamming")],-1)),s[172]||(s[172]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[173]||(s[173]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hamming</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, X)</span></span></code></pre></div><p>Compute the hamming distance of <code>x</code> over a collection of solutions <code>X</code>, i.e. the minimal number of variables to switch in <code>x</code>to reach a solution.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/metrics.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",bs,[i("summary",null,[s[174]||(s[174]=i("a",{id:"CompositionalNetworks.lazy-Tuple{Vararg{Function}}-api-00_public",href:"#CompositionalNetworks.lazy-Tuple{Vararg{Function}}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.lazy")],-1)),s[175]||(s[175]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[176]||(s[176]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(funcs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate methods extended to a vector instead of one of its components. A function <code>f</code> should have the following signature: <code>f(i::Int, x::V)</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/utils.jl#L22-L25" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ys,[i("summary",null,[s[177]||(s[177]=i("a",{id:"CompositionalNetworks.lazy_param-Tuple{Vararg{Function}}-api-00_public",href:"#CompositionalNetworks.lazy_param-Tuple{Vararg{Function}}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.lazy_param")],-1)),s[178]||(s[178]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[179]||(s[179]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lazy_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(funcs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate methods extended to a vector instead of one of its components. A function <code>f</code> should have the following signature: <code>f(i::Int, x::V; param)</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/utils.jl#L39-L42" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Cs,[i("summary",null,[s[180]||(s[180]=i("a",{id:"CompositionalNetworks.learn_compose-Tuple{Any, Any, Any}-api-00_public",href:"#CompositionalNetworks.learn_compose-Tuple{Any, Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.learn_compose")],-1)),s[181]||(s[181]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[182]||(s[182]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">learn_compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nvars, dom_size, param</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, icn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ICN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nvars, dom_size, param),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    X, X_sols, global_iter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, local_iter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, metric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hamming, popSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an ICN, optimize it, and return its composition.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/learn.jl#L7-L13" target="_blank" rel="noreferrer">source</a></p>`,3))]),i("details",Es,[i("summary",null,[s[183]||(s[183]=i("a",{id:"CompositionalNetworks.manhattan-Tuple{Any, Any}-api-00_public",href:"#CompositionalNetworks.manhattan-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.manhattan")],-1)),s[184]||(s[184]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[185]||(s[185]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">manhattan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, X)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/metrics.jl#L12-L14" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",js,[i("summary",null,[s[186]||(s[186]=i("a",{id:"CompositionalNetworks.minkowski-Tuple{Any, Any, Any}-api-00_public",href:"#CompositionalNetworks.minkowski-Tuple{Any, Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.minkowski")],-1)),s[187]||(s[187]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[188]||(s[188]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minkowski</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, X, p)</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/metrics.jl#L7-L9" target="_blank" rel="noreferrer">source</a></p>',2))]),i("details",vs,[i("summary",null,[s[189]||(s[189]=i("a",{id:"CompositionalNetworks.nbits-Tuple{Any}-api-00_public",href:"#CompositionalNetworks.nbits-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.nbits")],-1)),s[190]||(s[190]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[191]||(s[191]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nbits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn)</span></span></code></pre></div><p>Return the expected number of bits of a viable weight of an ICN.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L43-L46" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Fs,[i("summary",null,[s[192]||(s[192]=i("a",{id:"CompositionalNetworks.regularization-Tuple{Any}-api-00_public",href:"#CompositionalNetworks.regularization-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.regularization")],-1)),s[193]||(s[193]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[194]||(s[194]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regularization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn)</span></span></code></pre></div><p>Return the regularization value of an ICN weights, which is proportional to the normalized number of operations selected in the icn layers.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L89-L92" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",fs,[i("summary",null,[s[195]||(s[195]=i("a",{id:"CompositionalNetworks.show_layers-Tuple{Any}-api-00_public",href:"#CompositionalNetworks.show_layers-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.show_layers")],-1)),s[196]||(s[196]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[197]||(s[197]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">show_layers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn)</span></span></code></pre></div><p>Return a formatted string with each layers in the icn.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L81-L84" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ts,[i("summary",null,[s[198]||(s[198]=i("a",{id:"CompositionalNetworks.symbols-Tuple{Composition}-api-00_public",href:"#CompositionalNetworks.symbols-Tuple{Composition}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.symbols")],-1)),s[199]||(s[199]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[200]||(s[200]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">symbols</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Composition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Output the composition as a layered collection of <code>Symbol</code>s.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/composition.jl#L38-L42" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",As,[i("summary",null,[s[201]||(s[201]=i("a",{id:"CompositionalNetworks.transformation_layer-api-00_public",href:"#CompositionalNetworks.transformation_layer-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.transformation_layer")],-1)),s[202]||(s[202]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[203]||(s[203]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transformation_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{Symbol}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Generate the layer of transformations functions of the ICN. Iff <code>param</code> value is non empty, also includes all the related parametric transformations.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/transformation.jl#L298-L301" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ds,[i("summary",null,[s[204]||(s[204]=i("a",{id:"CompositionalNetworks.weights!-Tuple{Any, Any}-api-00_public",href:"#CompositionalNetworks.weights!-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.weights!")],-1)),s[205]||(s[205]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[206]||(s[206]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weights!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn, weights)</span></span></code></pre></div><p>Set the weights of an ICN with a <code>BitVector</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L71-L74" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",xs,[i("summary",null,[s[207]||(s[207]=i("a",{id:"CompositionalNetworks.weights-Tuple{Any}-api-00_public",href:"#CompositionalNetworks.weights-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.weights")],-1)),s[208]||(s[208]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[209]||(s[209]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icn)</span></span></code></pre></div><p>Access the current set of weights of an ICN.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/icn.jl#L49-L52" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Bs,[i("summary",null,[s[210]||(s[210]=i("a",{id:"CompositionalNetworks.weights_bias-Tuple{Any}-api-00_public",href:"#CompositionalNetworks.weights_bias-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"CompositionalNetworks.weights_bias")],-1)),s[211]||(s[211]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[212]||(s[212]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weights_bias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>A metric that bias <code>x</code> towards operations with a lower bit. Do not affect the main metric.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/metrics.jl#L17-L20" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ls,[i("summary",null,[s[213]||(s[213]=i("a",{id:"QUBOConstraints.QUBO_linear_sum-Tuple{Any, Any}-api-00_public",href:"#QUBOConstraints.QUBO_linear_sum-Tuple{Any, Any}-api-00_public"},[i("span",{class:"jlbinding"},"QUBOConstraints.QUBO_linear_sum")],-1)),s[214]||(s[214]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[215]||(s[215]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">QUBO_linear_sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, σ)</span></span></code></pre></div><p>One valid QUBO matrix given <code>n</code> variables and parameter <code>σ</code> for the linear sum constraint.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/handmade/linear_sum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",ws,[i("summary",null,[s[216]||(s[216]=i("a",{id:"QUBOConstraints.binarize-Union{Tuple{Vector{T}}, Tuple{T}, Tuple{Vector{T}, Any}} where T<:Number-api-00_public",href:"#QUBOConstraints.binarize-Union{Tuple{Vector{T}}, Tuple{T}, Tuple{Vector{T}, Any}} where T<:Number-api-00_public"},[i("span",{class:"jlbinding"},"QUBOConstraints.binarize")],-1)),s[217]||(s[217]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[218]||(s[218]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">binarize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[, domain]; binarization </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :one_hot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Binarize <code>x</code> following the <code>binarization</code> encoding. If <code>x</code> is a vector (instead of a number per say), <code>domain</code> is optional.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/encoding/conversion.jl#L12-L16" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ms,[i("summary",null,[s[219]||(s[219]=i("a",{id:"QUBOConstraints.debinarize-Tuple{Any}-api-00_public",href:"#QUBOConstraints.debinarize-Tuple{Any}-api-00_public"},[i("span",{class:"jlbinding"},"QUBOConstraints.debinarize")],-1)),s[220]||(s[220]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[221]||(s[221]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debinarize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x[, domain]; binarization </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :one_hot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Transform a binary vector into a number or a set of number. If <code>domain</code> is not given, it will compute a default value based on <code>binarization</code> and <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/encoding/conversion.jl#L37-L41" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ns,[i("summary",null,[s[222]||(s[222]=i("a",{id:"QUBOConstraints.is_valid-api-00_public",href:"#QUBOConstraints.is_valid-api-00_public"},[i("span",{class:"jlbinding"},"QUBOConstraints.is_valid")],-1)),s[223]||(s[223]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[224]||(s[224]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">is_valid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, encoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if <code>x</code> has a valid format for <code>encoding</code>.</p><p>For instance, if <code>encoding == :one_hot</code>, at most one bit of <code>x</code> can be set to 1.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/encoding/conversion.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",_s,[i("summary",null,[s[225]||(s[225]=i("a",{id:"QUBOConstraints.train-Tuple-api-00_public",href:"#QUBOConstraints.train-Tuple-api-00_public"},[i("span",{class:"jlbinding"},"QUBOConstraints.train")],-1)),s[226]||(s[226]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[227]||(s[227]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">train</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Default <code>train</code> method for any AbstractOptimizer.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/learn.jl#L8-L12" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Os,[i("summary",null,[s[228]||(s[228]=i("a",{id:"ConstraintsTranslator.GoogleLLM-api-00_public",href:"#ConstraintsTranslator.GoogleLLM-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.GoogleLLM")],-1)),s[229]||(s[229]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[235]||(s[235]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Google LLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the Google LLM API.</p>',2)),i("ul",null,[s[233]||(s[233]=i("li",null,[i("p",null,[i("code",null,"api_key"),t(": an API key for accessing the Google Gemini API ("),i("code",null,"https://ai.google.dev/gemini-api/docs/"),t("), read from the environmental variable "),i("code",null,"GOOGLE_API_KEY"),t(".")])],-1)),s[234]||(s[234]=i("li",null,[i("p",null,[i("code",null,"model_id"),t(": a string identifier for the model to query. See "),i("code",null,"https://ai.google.dev/gemini-api/docs/models/gemini"),t(" for the list of available models.")])],-1)),i("li",null,[i("p",null,[s[230]||(s[230]=i("code",null,"url",-1)),s[231]||(s[231]=t(": URL for chat completions. Defaults to ")),i("code",null,"https://generativelanguage.googleapis.com/v1beta/models/"+r(l.model_id),1),s[232]||(s[232]=t("."))])])]),s[236]||(s[236]=i("p",null,[i("a",{href:"https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L30-L38",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",Ss,[i("summary",null,[s[237]||(s[237]=i("a",{id:"ConstraintsTranslator.GroqLLM-api-00_public",href:"#ConstraintsTranslator.GroqLLM-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.GroqLLM")],-1)),s[238]||(s[238]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[239]||(s[239]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GroqLLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the Groq LLM API.</p><ul><li><p><code>api_key</code>: an API key for accessing the Groq API (<a href="https://groq.com" target="_blank" rel="noreferrer">https://groq.com</a>), read from the environmental variable GROQ_API_KEY.</p></li><li><p><code>model_id</code>: a string identifier for the model to query. See <a href="https://console.groq.com/docs/models" target="_blank" rel="noreferrer">https://console.groq.com/docs/models</a> for the list of available models.</p></li><li><p><code>url</code>: URL for chat completions. Defaults to &quot;<a href="https://api.groq.com/openai/v1/chat/completions&amp;quot;" target="_blank" rel="noreferrer">https://api.groq.com/openai/v1/chat/completions&quot;</a>.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L7-L15" target="_blank" rel="noreferrer">source</a></p>',4))]),i("details",Is,[i("summary",null,[s[240]||(s[240]=i("a",{id:"ConstraintsTranslator.LlamaCppLLM-api-00_public",href:"#ConstraintsTranslator.LlamaCppLLM-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.LlamaCppLLM")],-1)),s[241]||(s[241]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[242]||(s[242]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LlamaCppLLM</span></span></code></pre></div><p>Structure encapsulating the parameters for accessing the llama.cpp server API.</p><ul><li><p><code>api_key</code>: an optional API key for accessing the server</p></li><li><p><code>model_id</code>: a string identifier for the model to query. Unused, kept for API compatibility.</p></li><li><p><code>url</code>: the URL of the llama.cpp server OpenAI API endpoint (e.g., <a href="http://localhost:8080" target="_blank" rel="noreferrer">http://localhost:8080</a>)</p></li></ul><p>NOTE: we do not apply the appropriate chat templates to the prompt. This must be handled either in an external code path or by the server.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L53-L63" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Js,[i("summary",null,[s[243]||(s[243]=i("a",{id:"ConstraintsTranslator.Prompt-api-00_public",href:"#ConstraintsTranslator.Prompt-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.Prompt")],-1)),s[244]||(s[244]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[245]||(s[245]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Prompt</span></span></code></pre></div><p>Simple data structure encapsulating a system prompt and a user prompt for LLM generation.</p><p><strong>Fields</strong></p><ul><li><p><code>system</code>: the system prompt.</p></li><li><p><code>user</code>: the user prompt.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/prompt.jl#L3-L11" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Rs,[i("summary",null,[s[246]||(s[246]=i("a",{id:"ConstraintsTranslator.PromptTemplate-api-00_public",href:"#ConstraintsTranslator.PromptTemplate-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.PromptTemplate")],-1)),s[247]||(s[247]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[248]||(s[248]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PromptTemplate</span></span></code></pre></div><p>Represents a complete prompt template, comprising metadata, system, and user messages.</p><p><strong>Fields</strong></p><ul><li><p><code>metadata::MetadataMessage</code>: The metadata message of the prompt template.</p></li><li><p><code>system::SystemMessage</code>: The system message of the prompt template.</p></li><li><p><code>user::UserMessage</code>: The user message of the prompt template.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/template.jl#L53-L62" target="_blank" rel="noreferrer">source</a></p>',5))]),i("details",Us,[i("summary",null,[s[249]||(s[249]=i("a",{id:"ConstraintsTranslator.format_template-Tuple{PromptTemplate}-api-00_public",href:"#ConstraintsTranslator.format_template-Tuple{PromptTemplate}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.format_template")],-1)),s[250]||(s[250]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[251]||(s[251]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">format_template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PromptTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span></span></code></pre></div><p>Formats a <code>PromptTemplate</code> by substituting all variables in the system and user messages with user-provided values.</p><p><strong>Arguments</strong></p><ul><li><p><code>template::PromptTemplate</code>: The prompt template containing metadata, system, and user messages.</p></li><li><p><code>kwargs...</code>: A variable number of keyword arguments where keys are variable names and values are the corresponding replacements.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Prompt</code>: A <code>Prompt</code> struct with the system and user messages containing the substituted values.</li></ul><p><strong>Raises</strong></p><ul><li><p><code>ErrorException</code>: If any variables specified in the system or user templates are not present in the <code>kwargs</code>.</p></li><li><p><code>Warning</code>: If there are extra <code>kwargs</code> that are not used in the templates.</p></li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/template.jl#L126-L141" target="_blank" rel="noreferrer">source</a></p>',9))]),i("details",Ps,[i("summary",null,[s[252]||(s[252]=i("a",{id:"ConstraintsTranslator.get_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}-api-00_public",href:"#ConstraintsTranslator.get_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[253]||(s[253]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[254]||(s[254]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for a <code>prompt</code> using the <code>llm</code> model API.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L228-L232" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",zs,[i("summary",null,[s[255]||(s[255]=i("a",{id:"ConstraintsTranslator.get_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}-api-00_public",href:"#ConstraintsTranslator.get_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[256]||(s[256]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[257]||(s[257]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OpenAILLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using an OpenAI API compatible LLM</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L75-L79" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Gs,[i("summary",null,[s[258]||(s[258]=i("a",{id:"ConstraintsTranslator.get_completion-Tuple{GoogleLLM, Prompt}-api-00_public",href:"#ConstraintsTranslator.get_completion-Tuple{GoogleLLM, Prompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.get_completion")],-1)),s[259]||(s[259]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[260]||(s[260]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GoogleLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using the Google Gemini LLM API.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L97-L101" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",qs,[i("summary",null,[s[261]||(s[261]=i("a",{id:"ConstraintsTranslator.parse_code-Tuple{String}-api-00_public",href:"#ConstraintsTranslator.parse_code-Tuple{String}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.parse_code")],-1)),s[262]||(s[262]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[263]||(s[263]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parse_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Parse the code blocks in the input string <code>s</code> delimited by triple backticks and an optional language annotation. Returns a dictionary keyed by language. Code blocks from the same language are concatenated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/parsing.jl#L1-L6" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Qs,[i("summary",null,[s[264]||(s[264]=i("a",{id:"ConstraintsTranslator.read_template-Tuple{String}-api-00_public",href:"#ConstraintsTranslator.read_template-Tuple{String}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.read_template")],-1)),s[265]||(s[265]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[266]||(s[266]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read_template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reads a prompt template from a JSON file specified by <code>data_path</code>. The function parses the JSON data and constructs a <code>PromptTemplate</code> object containing metadata, system, and user messages. TODO: validate the JSON data against a schema to ensure it is valid before parsing.</p><p><strong>Arguments</strong></p><ul><li><code>data_path::String</code>: The path to the JSON file containing the prompt template.</li></ul><p><strong>Returns</strong></p><ul><li><code>PromptTemplate</code>: A <code>PromptTemplate</code> structure encapsulating the metadata, system, and user messages.</li></ul><p><strong>Raises</strong></p><ul><li><code>ErrorException</code>: if the template does not match the specification format.</li></ul><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/template.jl#L69-L84" target="_blank" rel="noreferrer">source</a></p>',9))]),i("details",Vs,[i("summary",null,[s[267]||(s[267]=i("a",{id:"ConstraintsTranslator.stream_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}-api-00_public",href:"#ConstraintsTranslator.stream_completion-Tuple{AbstractLLM, ConstraintsTranslator.AbstractPrompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[268]||(s[268]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[269]||(s[269]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for a <code>prompt</code> using the <code>llm</code> model API. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L217-L222" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Xs,[i("summary",null,[s[270]||(s[270]=i("a",{id:"ConstraintsTranslator.stream_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}-api-00_public",href:"#ConstraintsTranslator.stream_completion-Tuple{ConstraintsTranslator.OpenAILLM, Prompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[271]||(s[271]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[272]||(s[272]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OpenAILLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using an OpenAI API compatible model. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L119-L124" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",Ys,[i("summary",null,[s[273]||(s[273]=i("a",{id:"ConstraintsTranslator.stream_completion-Tuple{GoogleLLM, Prompt}-api-00_public",href:"#ConstraintsTranslator.stream_completion-Tuple{GoogleLLM, Prompt}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.stream_completion")],-1)),s[274]||(s[274]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[275]||(s[275]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stream_completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(llm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GoogleLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, prompt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a completion for the given prompt using the Google Gemini LLM API. The completion is streamed to the terminal as it is generated.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/llm.jl#L176-L181" target="_blank" rel="noreferrer">source</a></p>',3))]),i("details",$s,[i("summary",null,[s[276]||(s[276]=i("a",{id:"ConstraintsTranslator.translate-Tuple{AbstractLLM, AbstractString}-api-00_public",href:"#ConstraintsTranslator.translate-Tuple{AbstractLLM, AbstractString}-api-00_public"},[i("span",{class:"jlbinding"},"ConstraintsTranslator.translate")],-1)),s[277]||(s[277]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[278]||(s[278]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLLM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; interactive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Translate the natural-language <code>description</code> of an optimization problem into a Constraint Programming model by querying the Large Language Model <code>model</code>. If <code>interactive</code>, the user will be prompted via the command line to inspect the intermediate outputs of the LLM, and possibly modify them.</p><p><a href="https://github.com/JuliaConstraints/ConstraintsTranslator.jl/blob/v0.0.2/src/translate.jl#L145-L152" target="_blank" rel="noreferrer">source</a></p>',3))])])}const ai=o(k,[["render",Ks]]);export{ti as __pageData,ai as default};
