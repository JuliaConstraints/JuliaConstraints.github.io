import{_ as o,c as n,j as e,a as i,G as s,a5 as r,B as l,o as p}from"./chunks/framework.CJakPlgM.js";const j=JSON.parse('{"title":"Arithmetic Layer","description":"","frontmatter":{},"headers":[],"relativePath":"learning/13_arithmetic.md","filePath":"learning/13_arithmetic.md","lastUpdated":null}'),d={name:"learning/13_arithmetic.md"},c={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function u(g,t,k,b,y,f){const a=l("Badge");return p(),n("div",null,[t[9]||(t[9]=e("h1",{id:"Arithmetic-Layer",tabindex:"-1"},[i("Arithmetic Layer "),e("a",{class:"header-anchor",href:"#Arithmetic-Layer","aria-label":'Permalink to "Arithmetic Layer {#Arithmetic-Layer}"'},"​")],-1)),t[10]||(t[10]=e("p",null,"Some text to describe the arithmetic layer within usual ICNs.",-1)),t[11]||(t[11]=e("h2",{id:"List-of-arithmetic-operations",tabindex:"-1"},[i("List of arithmetic operations "),e("a",{class:"header-anchor",href:"#List-of-arithmetic-operations","aria-label":'Permalink to "List of arithmetic operations {#List-of-arithmetic-operations}"'},"​")],-1)),e("details",c,[e("summary",null,[t[0]||(t[0]=e("a",{id:"CompositionalNetworks.ar_sum-learning-13_arithmetic",href:"#CompositionalNetworks.ar_sum-learning-13_arithmetic"},[e("span",{class:"jlbinding"},"CompositionalNetworks.ar_sum")],-1)),t[1]||(t[1]=i()),s(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[2]||(t[2]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ar_sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Reduce <code>k = length(x)</code> vectors through sum to a single vector.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/arithmetic.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",h,[e("summary",null,[t[3]||(t[3]=e("a",{id:"CompositionalNetworks.ar_prod-learning-13_arithmetic",href:"#CompositionalNetworks.ar_prod-learning-13_arithmetic"},[e("span",{class:"jlbinding"},"CompositionalNetworks.ar_prod")],-1)),t[4]||(t[4]=i()),s(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[5]||(t[5]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ar_prod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Reduce <code>k = length(x)</code> vectors through product to a single vector.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/arithmetic.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),t[12]||(t[12]=e("h2",{id:"Layer-generation",tabindex:"-1"},[i("Layer generation "),e("a",{class:"header-anchor",href:"#Layer-generation","aria-label":'Permalink to "Layer generation {#Layer-generation}"'},"​")],-1)),e("details",m,[e("summary",null,[t[6]||(t[6]=e("a",{id:"CompositionalNetworks.arithmetic_layer-learning-13_arithmetic",href:"#CompositionalNetworks.arithmetic_layer-learning-13_arithmetic"},[e("span",{class:"jlbinding"},"CompositionalNetworks.arithmetic_layer")],-1)),t[7]||(t[7]=i()),s(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[8]||(t[8]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arithmetic_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Generate the layer of arithmetic operations of the ICN. The operations are mutually exclusive, that is only one will be selected.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/arithmetic.jl#L13-L16" target="_blank" rel="noreferrer">source</a></p>',3))])])}const v=o(d,[["render",u]]);export{j as __pageData,v as default};
