import{_ as n,c as r,j as e,a as t,G as s,a5 as o,B as l,o as g}from"./chunks/framework.CJakPlgM.js";const j=JSON.parse('{"title":"Aggregation Layer","description":"","frontmatter":{},"headers":[],"relativePath":"learning/14_aggregation.md","filePath":"learning/14_aggregation.md","lastUpdated":null}'),p={name:"learning/14_aggregation.md"},d={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function h(m,a,k,b,y,f){const i=l("Badge");return g(),r("div",null,[a[9]||(a[9]=e("h1",{id:"Aggregation-Layer",tabindex:"-1"},[t("Aggregation Layer "),e("a",{class:"header-anchor",href:"#Aggregation-Layer","aria-label":'Permalink to "Aggregation Layer {#Aggregation-Layer}"'},"​")],-1)),a[10]||(a[10]=e("p",null,"Some text to describe the aggragation layer within usual ICNs.",-1)),a[11]||(a[11]=e("h2",{id:"List-of-aggregations",tabindex:"-1"},[t("List of aggregations "),e("a",{class:"header-anchor",href:"#List-of-aggregations","aria-label":'Permalink to "List of aggregations {#List-of-aggregations}"'},"​")],-1)),e("details",d,[e("summary",null,[a[0]||(a[0]=e("a",{id:"CompositionalNetworks.ag_sum-learning-14_aggregation",href:"#CompositionalNetworks.ag_sum-learning-14_aggregation"},[e("span",{class:"jlbinding"},"CompositionalNetworks.ag_sum")],-1)),a[1]||(a[1]=t()),s(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[2]||(a[2]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ag_sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Aggregate through <code>+</code> a vector into a single scalar.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/aggregation.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",u,[e("summary",null,[a[3]||(a[3]=e("a",{id:"CompositionalNetworks.ag_count_positive-learning-14_aggregation",href:"#CompositionalNetworks.ag_count_positive-learning-14_aggregation"},[e("span",{class:"jlbinding"},"CompositionalNetworks.ag_count_positive")],-1)),a[4]||(a[4]=t()),s(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[5]||(a[5]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ag_count_positive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Count the number of strictly positive elements of <code>x</code>.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/aggregation.jl#L7-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),a[12]||(a[12]=e("h2",{id:"Layer-generation",tabindex:"-1"},[t("Layer generation "),e("a",{class:"header-anchor",href:"#Layer-generation","aria-label":'Permalink to "Layer generation {#Layer-generation}"'},"​")],-1)),e("details",c,[e("summary",null,[a[6]||(a[6]=e("a",{id:"CompositionalNetworks.aggregation_layer-learning-14_aggregation",href:"#CompositionalNetworks.aggregation_layer-learning-14_aggregation"},[e("span",{class:"jlbinding"},"CompositionalNetworks.aggregation_layer")],-1)),a[7]||(a[7]=t()),s(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[8]||(a[8]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregation_layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Generate the layer of aggregations of the ICN. The operations are mutually exclusive, that is only one will be selected.</p><p><a href="https://github.com/JuliaConstraints/CompositionalNetworks.jl/blob/v0.5.9/src/layers/aggregation.jl#L13-L16" target="_blank" rel="noreferrer">source</a></p>',3))])])}const v=n(p,[["render",h]]);export{j as __pageData,v as default};
