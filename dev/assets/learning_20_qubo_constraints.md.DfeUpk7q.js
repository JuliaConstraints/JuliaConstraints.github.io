import{_ as o,c as r,j as t,a,G as i,a5 as e,B as l,o as d}from"./chunks/framework.CJakPlgM.js";const O=JSON.parse('{"title":"Introduction to QUBOConstraints.jl","description":"","frontmatter":{},"headers":[],"relativePath":"learning/20_qubo_constraints.md","filePath":"learning/20_qubo_constraints.md","lastUpdated":null}'),p={name:"learning/20_qubo_constraints.md"},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function b(h,s,g,B,k,m){const n=l("Badge");return d(),r("div",null,[s[6]||(s[6]=t("h1",{id:"Introduction-to-QUBOConstraints.jl",tabindex:"-1"},[a("Introduction to QUBOConstraints.jl "),t("a",{class:"header-anchor",href:"#Introduction-to-QUBOConstraints.jl","aria-label":'Permalink to "Introduction to QUBOConstraints.jl {#Introduction-to-QUBOConstraints.jl}"'},"​")],-1)),s[7]||(s[7]=t("p",null,[a("Introduction to "),t("code",null,"QUBOConstraints.jl"),a(".")],-1)),s[8]||(s[8]=t("h2",{id:"Basic-features",tabindex:"-1"},[a("Basic features "),t("a",{class:"header-anchor",href:"#Basic-features","aria-label":'Permalink to "Basic features {#Basic-features}"'},"​")],-1)),t("details",u,[t("summary",null,[s[0]||(s[0]=t("a",{id:"QUBOConstraints.QUBO_base-learning-20_qubo_constraints",href:"#QUBOConstraints.QUBO_base-learning-20_qubo_constraints"},[t("span",{class:"jlbinding"},"QUBOConstraints.QUBO_base")],-1)),s[1]||(s[1]=a()),i(n,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[2]||(s[2]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">QUBO_base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A basic QUBO matrix to ensure that binarized variables keep a valid encoding.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/base.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),t("details",c,[t("summary",null,[s[3]||(s[3]=t("a",{id:"QUBOConstraints.QUBO_linear_sum-learning-20_qubo_constraints",href:"#QUBOConstraints.QUBO_linear_sum-learning-20_qubo_constraints"},[t("span",{class:"jlbinding"},"QUBOConstraints.QUBO_linear_sum")],-1)),s[4]||(s[4]=a()),i(n,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">QUBO_linear_sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, σ)</span></span></code></pre></div><p>One valid QUBO matrix given <code>n</code> variables and parameter <code>σ</code> for the linear sum constraint.</p><p><a href="https://github.com/JuliaConstraints/QUBOConstraints.jl/blob/v0.2.2/src/handmade/linear_sum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))])])}const C=o(p,[["render",b]]);export{O as __pageData,C as default};
