import{_ as l,c as r,j as a,a as i,G as n,a5 as e,B as o,o as p}from"./chunks/framework.CJakPlgM.js";const T=JSON.parse('{"title":"Learning about Constraints","description":"","frontmatter":{},"headers":[],"relativePath":"learning/00_intro.md","filePath":"learning/00_intro.md","lastUpdated":null}'),h={name:"learning/00_intro.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""};function F(f,s,A,B,L,P){const t=o("Badge");return p(),r("div",null,[s[39]||(s[39]=a("h1",{id:"Learning-about-Constraints",tabindex:"-1"},[i("Learning about Constraints "),a("a",{class:"header-anchor",href:"#Learning-about-Constraints","aria-label":'Permalink to "Learning about Constraints {#Learning-about-Constraints}"'},"​")],-1)),s[40]||(s[40]=a("p",null,"About learning constraints related matters.",-1)),s[41]||(s[41]=a("h2",{id:"parameters",tabindex:"-1"},[i("Parameters "),a("a",{class:"header-anchor",href:"#parameters","aria-label":'Permalink to "Parameters"'},"​")],-1)),s[42]||(s[42]=a("p",null,"<!– To be moved –>",-1)),s[43]||(s[43]=a("p",null,"One major challenge of learning the features of constraints is exploring the domains of parameters. To tackle this issue, we provide some way to generate parameters from variables' domains.",-1)),a("details",d,[a("summary",null,[s[0]||(s[0]=a("a",{id:"ConstraintDomains.BoolParameterDomain-learning-00_intro",href:"#ConstraintDomains.BoolParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.BoolParameterDomain")],-1)),s[1]||(s[1]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BoolParameterDomain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store boolean values. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",k,[a("summary",null,[s[3]||(s[3]=a("a",{id:"ConstraintDomains.DimParameterDomain-learning-00_intro",href:"#ConstraintDomains.DimParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.DimParameterDomain")],-1)),s[4]||(s[4]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DimParameterDomain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store dimensions. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L10-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",g,[a("summary",null,[s[6]||(s[6]=a("a",{id:"ConstraintDomains.IdParameterDomain-learning-00_intro",href:"#ConstraintDomains.IdParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.IdParameterDomain")],-1)),s[7]||(s[7]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IdParameterDomain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store ids. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L21-L25" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",m,[a("summary",null,[s[9]||(s[9]=a("a",{id:"ConstraintDomains.FakeAutomaton-learning-00_intro",href:"#ConstraintDomains.FakeAutomaton-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.FakeAutomaton")],-1)),s[10]||(s[10]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FakeAutomaton{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConstraintCommons.AbstractAutomaton</span></span></code></pre></div><p>A structure to generate pseudo automaton enough for parameter exploration.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L32-L36" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",u,[a("summary",null,[s[12]||(s[12]=a("a",{id:"ConstraintCommons.accept-learning-00_intro",href:"#ConstraintCommons.accept-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintCommons.accept")],-1)),s[13]||(s[13]=i()),n(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[14]||(s[14]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Automaton, MDD}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, w)</span></span></code></pre></div><p>Return <code>true</code> if <code>a</code> accepts the word <code>w</code> and <code>false</code> otherwise.</p><p><a href="https://github.com/JuliaConstraints/ConstraintCommons.jl/blob/v0.2.3/src/automata.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConstraintCommons</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FakeAutomaton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, word)</span></span></code></pre></div><p>Implement the <code>accept</code> methods for <code>FakeAutomaton</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L41-L45" target="_blank" rel="noreferrer">source</a></p>',6))]),a("details",c,[a("summary",null,[s[15]||(s[15]=a("a",{id:"ConstraintDomains.fake_automaton-learning-00_intro",href:"#ConstraintDomains.fake_automaton-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.fake_automaton")],-1)),s[16]||(s[16]=i()),n(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fake_automaton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d)</span></span></code></pre></div><p>Construct a <code>FakeAutomaton</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L48-L52" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",b,[a("summary",null,[s[18]||(s[18]=a("a",{id:"ConstraintDomains.LanguageParameterDomain-learning-00_intro",href:"#ConstraintDomains.LanguageParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.LanguageParameterDomain")],-1)),s[19]||(s[19]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[20]||(s[20]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LanguageParameterDomain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store languages. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L62-L66" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",y,[a("summary",null,[s[21]||(s[21]=a("a",{id:"ConstraintDomains.OpParameterDomain-learning-00_intro",href:"#ConstraintDomains.OpParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.OpParameterDomain")],-1)),s[22]||(s[22]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OpParameterDomain{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store operators. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L75-L79" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",C,[a("summary",null,[s[24]||(s[24]=a("a",{id:"ConstraintDomains.PairVarsParameterDomain-learning-00_intro",href:"#ConstraintDomains.PairVarsParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.PairVarsParameterDomain")],-1)),s[25]||(s[25]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[26]||(s[26]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PairVarsParameterDomain{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store values paired with variables. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L86-L90" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",E,[a("summary",null,[s[27]||(s[27]=a("a",{id:"ConstraintDomains.ValParameterDomain-learning-00_intro",href:"#ConstraintDomains.ValParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.ValParameterDomain")],-1)),s[28]||(s[28]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[29]||(s[29]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ValParameterDomain{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store one value. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L99-L103" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",j,[a("summary",null,[s[30]||(s[30]=a("a",{id:"ConstraintDomains.ValsParameterDomain-learning-00_intro",href:"#ConstraintDomains.ValsParameterDomain-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.ValsParameterDomain")],-1)),s[31]||(s[31]=i()),n(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[32]||(s[32]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ValsParameterDomain{T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDomain</span></span></code></pre></div><p>A domain to store values. It is used to generate random parameters.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L110-L114" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",v,[a("summary",null,[s[33]||(s[33]=a("a",{id:"Base.rand-learning-00_intro",href:"#Base.rand-learning-00_intro"},[a("span",{class:"jlbinding"},"Base.rand")],-1)),s[34]||(s[34]=i()),n(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{IntervalsFold}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extend the <code>Base.rand</code> function to <code>Vector{IntervalsFold}</code>.</p><p><a href="https://github.com/JuliaConstraints/PatternFolds.jl/blob/v0.2.6/src/intervals.jl#L114-L118" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PatternFold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a random value of <code>pf</code> as if it was unfolded.</p><p><a href="https://github.com/JuliaConstraints/PatternFolds.jl/blob/v0.2.6/src/common.jl#L59-L62" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{AbstractVectorFold}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Extend the </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Base.rand`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Vector{AbstractVectorFold}`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span></code></pre></div><p><a href="https://github.com/JuliaConstraints/PatternFolds.jl/blob/v0.2.6/src/common.jl#L121-L124" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Vector{D},Set{D}, D}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Extends <code>Base.rand</code> to (a collection of) domains.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/common.jl#L73-L77" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(itv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(itv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Intervals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i)</span></span></code></pre></div><p>Return a random value from <code>itv</code>, specifically from the <code>i</code>th interval if <code>i</code> is specified.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/continuous.jl#L32-L36" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DiscreteDomain</span></span></code></pre></div><p>Draw randomly a point in <code>d</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/discrete.jl#L52-L55" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FakeAutomaton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extends <code>Base.rand</code>. Currently simply returns <code>fa</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L135-L139" target="_blank" rel="noreferrer">source</a></p>',20))]),a("details",D,[a("summary",null,[s[36]||(s[36]=a("a",{id:"ConstraintDomains.generate_parameters-learning-00_intro",href:"#ConstraintDomains.generate_parameters-learning-00_intro"},[a("span",{class:"jlbinding"},"ConstraintDomains.generate_parameters")],-1)),s[37]||(s[37]=i()),n(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[38]||(s[38]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">generate_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param)</span></span></code></pre></div><p>Generates random parameters based on the domain <code>d</code> and the kind of parameters <code>param</code>.</p><p><a href="https://github.com/JuliaConstraints/ConstraintDomains.jl/blob/v0.3.14/src/parameters.jl#L128-L132" target="_blank" rel="noreferrer">source</a></p>',3))])])}const V=l(h,[["render",F]]);export{T as __pageData,V as default};
